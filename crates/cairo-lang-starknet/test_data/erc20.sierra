type RangeCheck = RangeCheck;
type GasBuiltin = GasBuiltin;
type felt252 = felt252;
type Array<felt252> = Array<felt252>;
type Snapshot<Array<felt252>> = Snapshot<Array<felt252>>;
type core::array::Span::<core::felt252> = Struct<ut@[782572820229152792105145177694740816763001980856532159945905090893343825762], Snapshot<Array<felt252>>>;
type u32 = u32;
type Unit = Struct<ut@[1325343513152088812341467750635149026053683136611136091911357178651207272643]>;
type core::bool = Enum<ut@[1428587981972971377690703480718106917688158670535227238524565791273937320306], Unit, Unit>;
type BuiltinCosts = BuiltinCosts;
type erc20::erc20::ERC20::name::Storage = Struct<ut@[1279246718657236285882016538558545510648363542581138756462991623761501398195]>;
type erc20::erc20::ERC20::symbol::Storage = Struct<ut@[418102978435404218742574783570252172162319648946501850061633421213983797663]>;
type erc20::erc20::ERC20::decimals::Storage = Struct<ut@[773134131808452046777494812781217467396526119839805723230586099574048303650]>;
type erc20::erc20::ERC20::total_supply::Storage = Struct<ut@[631149941040930366530970477469638989032192229612994689389411080217359966372]>;
type erc20::erc20::ERC20::balances::Storage = Struct<ut@[1673405683482322965658185153975252195658666855734590268500867733612648603021]>;
type erc20::erc20::ERC20::allowances::Storage = Struct<ut@[1604362812532302690909148491047827776737543804581419153954593094592827202976]>;
type erc20::erc20::ERC20::Storage = Struct<ut@[1505342701246452630018307425834662522223610642808126217707438916062940672157], erc20::erc20::ERC20::name::Storage, erc20::erc20::ERC20::symbol::Storage, erc20::erc20::ERC20::decimals::Storage, erc20::erc20::ERC20::total_supply::Storage, erc20::erc20::ERC20::balances::Storage, erc20::erc20::ERC20::allowances::Storage>;
type System = System;
type Tuple<felt252> = Struct<ut@[1325343513152088812341467750635149026053683136611136091911357178651207272643], felt252>;
type core::PanicResult::<(core::felt252,)> = Enum<ut@[1337785438710847796361585803509086526690852027193810330220381837571094829714], Tuple<felt252>, Array<felt252>>;
type Tuple<core::array::Span::<core::felt252>> = Struct<ut@[1325343513152088812341467750635149026053683136611136091911357178651207272643], core::array::Span::<core::felt252>>;
type core::PanicResult::<(core::array::Span::<core::felt252>,)> = Enum<ut@[726583323764111849207710747544627107765659270979625874228729705596766268119], Tuple<core::array::Span::<core::felt252>>, Array<felt252>>;
type u8 = u8;
type Tuple<u8> = Struct<ut@[1325343513152088812341467750635149026053683136611136091911357178651207272643], u8>;
type core::PanicResult::<(core::integer::u8,)> = Enum<ut@[363293563585309154259806893024613779305046216512458641877252885718027023450], Tuple<u8>, Array<felt252>>;
type u128 = u128;
type core::integer::u256 = Struct<ut@[1071017438933873571052977544980627024045949220019505706267713774331285277618], u128, u128>;
type Tuple<core::integer::u256> = Struct<ut@[1325343513152088812341467750635149026053683136611136091911357178651207272643], core::integer::u256>;
type core::PanicResult::<(core::integer::u256,)> = Enum<ut@[1766688147455137705240905129329481966973498634770070537819590582308755341973], Tuple<core::integer::u256>, Array<felt252>>;
type ContractAddress = ContractAddress;
type core::option::Option::<core::starknet::contract_address::ContractAddress> = Enum<ut@[1730591083647345995550560488717538099208395506321115194079300232838727341527], ContractAddress, Unit>;
type Pedersen = Pedersen;
type core::option::Option::<core::integer::u256> = Enum<ut@[523703995564884992331731899845619438921868538240978529314873467267171327154], core::integer::u256, Unit>;
type Tuple<erc20::erc20::ERC20::Storage, Unit> = Struct<ut@[1325343513152088812341467750635149026053683136611136091911357178651207272643], erc20::erc20::ERC20::Storage, Unit>;
type core::PanicResult::<(erc20::erc20::ERC20::Storage, ())> = Enum<ut@[1328350705554389428423680733371080630984521469695149274424732836908099615992], Tuple<erc20::erc20::ERC20::Storage, Unit>, Array<felt252>>;
type core::option::Option::<core::felt252> = Enum<ut@[502540321931352404499287398278270665773953423387279675570524389549882807569], felt252, Unit>;
type core::option::Option::<core::integer::u8> = Enum<ut@[1685337264744422315758003496270779824690430640778989843914465691348625003554], u8, Unit>;
type Tuple<ContractAddress, ContractAddress> = Struct<ut@[1325343513152088812341467750635149026053683136611136091911357178651207272643], ContractAddress, ContractAddress>;
type core::option::Option::<core::integer::u128> = Enum<ut@[707802566805637274160536953450653899678320584667373508165987445807323736680], u128, Unit>;
type Tuple<ContractAddress> = Struct<ut@[1325343513152088812341467750635149026053683136611136091911357178651207272643], ContractAddress>;
type core::PanicResult::<(core::starknet::contract_address::ContractAddress,)> = Enum<ut@[517717563993683954431066196808737762573123393225434032215499638276214044910], Tuple<ContractAddress>, Array<felt252>>;
type Box<felt252> = Box<felt252>;
type core::option::Option::<core::box::Box::<@core::felt252>> = Enum<ut@[1182885770396068416776258475038712898857052156962285097349975100489777991911], Box<felt252>, Unit>;
type Tuple<erc20::erc20::ERC20::name::Storage, Unit> = Struct<ut@[1325343513152088812341467750635149026053683136611136091911357178651207272643], erc20::erc20::ERC20::name::Storage, Unit>;
type core::PanicResult::<(erc20::erc20::ERC20::name::Storage, ())> = Enum<ut@[953432628152931088512154774515262466960229293706723451828773362479034845991], Tuple<erc20::erc20::ERC20::name::Storage, Unit>, Array<felt252>>;
type Tuple<erc20::erc20::ERC20::symbol::Storage, Unit> = Struct<ut@[1325343513152088812341467750635149026053683136611136091911357178651207272643], erc20::erc20::ERC20::symbol::Storage, Unit>;
type core::PanicResult::<(erc20::erc20::ERC20::symbol::Storage, ())> = Enum<ut@[699576154942283578178373243990259768756847804270255434265324341400354338899], Tuple<erc20::erc20::ERC20::symbol::Storage, Unit>, Array<felt252>>;
type Tuple<erc20::erc20::ERC20::decimals::Storage, Unit> = Struct<ut@[1325343513152088812341467750635149026053683136611136091911357178651207272643], erc20::erc20::ERC20::decimals::Storage, Unit>;
type core::PanicResult::<(erc20::erc20::ERC20::decimals::Storage, ())> = Enum<ut@[1128121503594443869145555738556590562495479227620615932635423382490383408878], Tuple<erc20::erc20::ERC20::decimals::Storage, Unit>, Array<felt252>>;
type NonZero<felt252> = NonZero<felt252>;
type Tuple<Unit> = Struct<ut@[1325343513152088812341467750635149026053683136611136091911357178651207272643], Unit>;
type core::PanicResult::<((),)> = Enum<ut@[23370355241912226703375055216556194705277310207056017096530924163612291064], Tuple<Unit>, Array<felt252>>;
type Tuple<erc20::erc20::ERC20::total_supply::Storage, Unit> = Struct<ut@[1325343513152088812341467750635149026053683136611136091911357178651207272643], erc20::erc20::ERC20::total_supply::Storage, Unit>;
type core::PanicResult::<(erc20::erc20::ERC20::total_supply::Storage, ())> = Enum<ut@[1121304277564188722343772916382967417988958107735634214882690925655016421557], Tuple<erc20::erc20::ERC20::total_supply::Storage, Unit>, Array<felt252>>;
type Tuple<erc20::erc20::ERC20::balances::Storage, Unit> = Struct<ut@[1325343513152088812341467750635149026053683136611136091911357178651207272643], erc20::erc20::ERC20::balances::Storage, Unit>;
type core::PanicResult::<(erc20::erc20::ERC20::balances::Storage, ())> = Enum<ut@[759559699582621244038582969148131079848047649891932747322384082601985402992], Tuple<erc20::erc20::ERC20::balances::Storage, Unit>, Array<felt252>>;
type StorageBaseAddress = StorageBaseAddress;
type StorageAddress = StorageAddress;
type core::result::Result::<core::felt252, core::array::Array::<core::felt252>> = Enum<ut@[255862409632268709382876667385135391700507824083520182711692061443766480604], felt252, Array<felt252>>;
type core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>> = Enum<ut@[1686776504318576349617790826926349831519127596918854083900978058033064710828], u8, Array<felt252>>;
type Tuple<core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>> = Struct<ut@[1325343513152088812341467750635149026053683136611136091911357178651207272643], core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>>;
type core::PanicResult::<(core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>,)> = Enum<ut@[951581974262417507546887215389455423460958255477775743948998796087798990746], Tuple<core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>>, Array<felt252>>;
type core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>> = Enum<ut@[362128906923728080759621783213493759217792890399397457737333282516326806212], core::integer::u256, Array<felt252>>;
type Tuple<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>> = Struct<ut@[1325343513152088812341467750635149026053683136611136091911357178651207272643], core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>>;
type core::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)> = Enum<ut@[1399550358875283026214579391098633094857864844180724082363340774933850101758], Tuple<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>>, Array<felt252>>;
type u64 = u64;
type core::starknet::info::BlockInfo = Struct<ut@[1584064236820419267635853880275057357497142966426465622513080398763825874917], u64, u64, ContractAddress>;
type Box<core::starknet::info::BlockInfo> = Box<core::starknet::info::BlockInfo>;
type core::starknet::info::TxInfo = Struct<ut@[1311591681366727100053328626396740590119038174476558212695017318172456171879], felt252, ContractAddress, u128, core::array::Span::<core::felt252>, felt252, felt252, felt252>;
type Box<core::starknet::info::TxInfo> = Box<core::starknet::info::TxInfo>;
type core::starknet::info::ExecutionInfo = Struct<ut@[712752056230952147112465546512164546685036797379963700882913452643338533978], Box<core::starknet::info::BlockInfo>, Box<core::starknet::info::TxInfo>, ContractAddress, ContractAddress, felt252>;
type Box<core::starknet::info::ExecutionInfo> = Box<core::starknet::info::ExecutionInfo>;
type Tuple<Box<core::starknet::info::ExecutionInfo>> = Struct<ut@[1325343513152088812341467750635149026053683136611136091911357178651207272643], Box<core::starknet::info::ExecutionInfo>>;
type core::PanicResult::<(core::box::Box::<core::starknet::info::ExecutionInfo>,)> = Enum<ut@[1096489960210821177705952953477673141260894369823899538645403446187197364935], Tuple<Box<core::starknet::info::ExecutionInfo>>, Array<felt252>>;
type Tuple<erc20::erc20::ERC20::allowances::Storage, Unit> = Struct<ut@[1325343513152088812341467750635149026053683136611136091911357178651207272643], erc20::erc20::ERC20::allowances::Storage, Unit>;
type core::PanicResult::<(erc20::erc20::ERC20::allowances::Storage, ())> = Enum<ut@[136112300095896984777244603048167413353722483537393128613894782898496042098], Tuple<erc20::erc20::ERC20::allowances::Storage, Unit>, Array<felt252>>;
type core::result::Result::<(), core::array::Array::<core::felt252>> = Enum<ut@[455598176897554951975518433047350165683642644060968901071973598007398862489], Unit, Array<felt252>>;
type core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>> = Enum<ut@[1270906046977841141060978118411832258207934732743670527139603475143660678225], u128, Array<felt252>>;
type Tuple<core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>> = Struct<ut@[1325343513152088812341467750635149026053683136611136091911357178651207272643], core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>>;
type core::PanicResult::<(core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>,)> = Enum<ut@[608521606863430432447095256052838911166120715067993825241605886347878717527], Tuple<core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>>, Array<felt252>>;
type Tuple<u128, u128> = Struct<ut@[1325343513152088812341467750635149026053683136611136091911357178651207272643], u128, u128>;
type core::result::Result::<core::box::Box::<core::starknet::info::ExecutionInfo>, core::array::Array::<core::felt252>> = Enum<ut@[1257518009720519585285637338408389618956030011120420360206100431616276923554], Box<core::starknet::info::ExecutionInfo>, Array<felt252>>;
type Tuple<core::integer::u256, core::bool> = Struct<ut@[1325343513152088812341467750635149026053683136611136091911357178651207272643], core::integer::u256, core::bool>;
type Tuple<u128, core::bool> = Struct<ut@[1325343513152088812341467750635149026053683136611136091911357178651207272643], u128, core::bool>;

libfunc revoke_ap_tracking = revoke_ap_tracking;
libfunc enable_ap_tracking = enable_ap_tracking;
libfunc withdraw_gas = withdraw_gas;
libfunc branch_align = branch_align;
libfunc struct_deconstruct<core::array::Span::<core::felt252>> = struct_deconstruct<core::array::Span::<core::felt252>>;
libfunc array_len<felt252> = array_len<felt252>;
libfunc u32_const<0> = u32_const<0>;
libfunc store_temp<u32> = store_temp<u32>;
libfunc store_temp<RangeCheck> = store_temp<RangeCheck>;
libfunc u32_eq = u32_eq;
libfunc struct_construct<Unit> = struct_construct<Unit>;
libfunc enum_init<core::bool, 0> = enum_init<core::bool, 0>;
libfunc store_temp<core::bool> = store_temp<core::bool>;
libfunc jump = jump;
libfunc enum_init<core::bool, 1> = enum_init<core::bool, 1>;
libfunc bool_not_impl = bool_not_impl;
libfunc enum_match<core::bool> = enum_match<core::bool>;
libfunc disable_ap_tracking = disable_ap_tracking;
libfunc drop<Unit> = drop<Unit>;
libfunc get_builtin_costs = get_builtin_costs;
libfunc store_temp<BuiltinCosts> = store_temp<BuiltinCosts>;
libfunc withdraw_gas_all = withdraw_gas_all;
libfunc function_call<user@erc20::erc20::ERC20::unsafe_new_storage> = function_call<user@erc20::erc20::ERC20::unsafe_new_storage>;
libfunc dup<erc20::erc20::ERC20::Storage> = dup<erc20::erc20::ERC20::Storage>;
libfunc drop<erc20::erc20::ERC20::Storage> = drop<erc20::erc20::ERC20::Storage>;
libfunc store_temp<GasBuiltin> = store_temp<GasBuiltin>;
libfunc store_temp<System> = store_temp<System>;
libfunc store_temp<erc20::erc20::ERC20::Storage> = store_temp<erc20::erc20::ERC20::Storage>;
libfunc function_call<user@erc20::erc20::ERC20::get_name> = function_call<user@erc20::erc20::ERC20::get_name>;
libfunc enum_match<core::PanicResult::<(core::felt252,)>> = enum_match<core::PanicResult::<(core::felt252,)>>;
libfunc struct_deconstruct<Tuple<felt252>> = struct_deconstruct<Tuple<felt252>>;
libfunc array_new<felt252> = array_new<felt252>;
libfunc dup<felt252> = dup<felt252>;
libfunc drop<felt252> = drop<felt252>;
libfunc store_temp<felt252> = store_temp<felt252>;
libfunc store_temp<Array<felt252>> = store_temp<Array<felt252>>;
libfunc function_call<user@core::serde::Felt252Serde::serialize> = function_call<user@core::serde::Felt252Serde::serialize>;
libfunc snapshot_take<Array<felt252>> = snapshot_take<Array<felt252>>;
libfunc drop<Array<felt252>> = drop<Array<felt252>>;
libfunc struct_construct<core::array::Span::<core::felt252>> = struct_construct<core::array::Span::<core::felt252>>;
libfunc struct_construct<Tuple<core::array::Span::<core::felt252>>> = struct_construct<Tuple<core::array::Span::<core::felt252>>>;
libfunc enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 0> = enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 0>;
libfunc store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>> = store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>;
libfunc enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1> = enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>;
libfunc felt252_const<375233589013918064796019> = felt252_const<375233589013918064796019>;
libfunc array_append<felt252> = array_append<felt252>;
libfunc function_call<user@core::starknet::use_system_implicit> = function_call<user@core::starknet::use_system_implicit>;
libfunc felt252_const<7733229381460288120802334208475838166080759535023995805565484692595> = felt252_const<7733229381460288120802334208475838166080759535023995805565484692595>;
libfunc drop<core::array::Span::<core::felt252>> = drop<core::array::Span::<core::felt252>>;
libfunc function_call<user@erc20::erc20::ERC20::get_symbol> = function_call<user@erc20::erc20::ERC20::get_symbol>;
libfunc function_call<user@erc20::erc20::ERC20::get_decimals> = function_call<user@erc20::erc20::ERC20::get_decimals>;
libfunc enum_match<core::PanicResult::<(core::integer::u8,)>> = enum_match<core::PanicResult::<(core::integer::u8,)>>;
libfunc struct_deconstruct<Tuple<u8>> = struct_deconstruct<Tuple<u8>>;
libfunc dup<u8> = dup<u8>;
libfunc drop<u8> = drop<u8>;
libfunc store_temp<u8> = store_temp<u8>;
libfunc function_call<user@core::serde::U8Serde::serialize> = function_call<user@core::serde::U8Serde::serialize>;
libfunc function_call<user@erc20::erc20::ERC20::get_total_supply> = function_call<user@erc20::erc20::ERC20::get_total_supply>;
libfunc enum_match<core::PanicResult::<(core::integer::u256,)>> = enum_match<core::PanicResult::<(core::integer::u256,)>>;
libfunc struct_deconstruct<Tuple<core::integer::u256>> = struct_deconstruct<Tuple<core::integer::u256>>;
libfunc dup<core::integer::u256> = dup<core::integer::u256>;
libfunc drop<core::integer::u256> = drop<core::integer::u256>;
libfunc store_temp<core::integer::u256> = store_temp<core::integer::u256>;
libfunc function_call<user@core::integer::u256Serde::serialize> = function_call<user@core::integer::u256Serde::serialize>;
libfunc store_temp<core::array::Span::<core::felt252>> = store_temp<core::array::Span::<core::felt252>>;
libfunc function_call<user@core::starknet::contract_address::ContractAddressSerde::deserialize> = function_call<user@core::starknet::contract_address::ContractAddressSerde::deserialize>;
libfunc enum_match<core::option::Option::<core::starknet::contract_address::ContractAddress>> = enum_match<core::option::Option::<core::starknet::contract_address::ContractAddress>>;
libfunc store_temp<Pedersen> = store_temp<Pedersen>;
libfunc store_temp<ContractAddress> = store_temp<ContractAddress>;
libfunc function_call<user@erc20::erc20::ERC20::balance_of> = function_call<user@erc20::erc20::ERC20::balance_of>;
libfunc drop<ContractAddress> = drop<ContractAddress>;
libfunc felt252_const<1979706721653833758925397712865600297316042839304765459608024204080243> = felt252_const<1979706721653833758925397712865600297316042839304765459608024204080243>;
libfunc function_call<user@erc20::erc20::ERC20::allowance> = function_call<user@erc20::erc20::ERC20::allowance>;
libfunc function_call<user@core::integer::u256Serde::deserialize> = function_call<user@core::integer::u256Serde::deserialize>;
libfunc enum_match<core::option::Option::<core::integer::u256>> = enum_match<core::option::Option::<core::integer::u256>>;
libfunc function_call<user@erc20::erc20::ERC20::transfer> = function_call<user@erc20::erc20::ERC20::transfer>;
libfunc enum_match<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>> = enum_match<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>;
libfunc drop<Tuple<erc20::erc20::ERC20::Storage, Unit>> = drop<Tuple<erc20::erc20::ERC20::Storage, Unit>>;
libfunc function_call<user@erc20::erc20::ERC20::transfer_from> = function_call<user@erc20::erc20::ERC20::transfer_from>;
libfunc function_call<user@erc20::erc20::ERC20::approve> = function_call<user@erc20::erc20::ERC20::approve>;
libfunc function_call<user@erc20::erc20::ERC20::increase_allowance> = function_call<user@erc20::erc20::ERC20::increase_allowance>;
libfunc function_call<user@erc20::erc20::ERC20::decrease_allowance> = function_call<user@erc20::erc20::ERC20::decrease_allowance>;
libfunc function_call<user@core::serde::Felt252Serde::deserialize> = function_call<user@core::serde::Felt252Serde::deserialize>;
libfunc enum_match<core::option::Option::<core::felt252>> = enum_match<core::option::Option::<core::felt252>>;
libfunc function_call<user@core::serde::U8Serde::deserialize> = function_call<user@core::serde::U8Serde::deserialize>;
libfunc enum_match<core::option::Option::<core::integer::u8>> = enum_match<core::option::Option::<core::integer::u8>>;
libfunc function_call<user@erc20::erc20::ERC20::constructor> = function_call<user@erc20::erc20::ERC20::constructor>;
libfunc struct_construct<erc20::erc20::ERC20::name::Storage> = struct_construct<erc20::erc20::ERC20::name::Storage>;
libfunc struct_construct<erc20::erc20::ERC20::symbol::Storage> = struct_construct<erc20::erc20::ERC20::symbol::Storage>;
libfunc struct_construct<erc20::erc20::ERC20::decimals::Storage> = struct_construct<erc20::erc20::ERC20::decimals::Storage>;
libfunc struct_construct<erc20::erc20::ERC20::total_supply::Storage> = struct_construct<erc20::erc20::ERC20::total_supply::Storage>;
libfunc struct_construct<erc20::erc20::ERC20::balances::Storage> = struct_construct<erc20::erc20::ERC20::balances::Storage>;
libfunc struct_construct<erc20::erc20::ERC20::allowances::Storage> = struct_construct<erc20::erc20::ERC20::allowances::Storage>;
libfunc struct_construct<erc20::erc20::ERC20::Storage> = struct_construct<erc20::erc20::ERC20::Storage>;
libfunc struct_deconstruct<erc20::erc20::ERC20::Storage> = struct_deconstruct<erc20::erc20::ERC20::Storage>;
libfunc drop<erc20::erc20::ERC20::symbol::Storage> = drop<erc20::erc20::ERC20::symbol::Storage>;
libfunc drop<erc20::erc20::ERC20::decimals::Storage> = drop<erc20::erc20::ERC20::decimals::Storage>;
libfunc drop<erc20::erc20::ERC20::total_supply::Storage> = drop<erc20::erc20::ERC20::total_supply::Storage>;
libfunc drop<erc20::erc20::ERC20::balances::Storage> = drop<erc20::erc20::ERC20::balances::Storage>;
libfunc drop<erc20::erc20::ERC20::allowances::Storage> = drop<erc20::erc20::ERC20::allowances::Storage>;
libfunc store_temp<erc20::erc20::ERC20::name::Storage> = store_temp<erc20::erc20::ERC20::name::Storage>;
libfunc function_call<user@erc20::erc20::ERC20::name::StorageImpl::read> = function_call<user@erc20::erc20::ERC20::name::StorageImpl::read>;
libfunc struct_construct<Tuple<felt252>> = struct_construct<Tuple<felt252>>;
libfunc enum_init<core::PanicResult::<(core::felt252,)>, 0> = enum_init<core::PanicResult::<(core::felt252,)>, 0>;
libfunc store_temp<core::PanicResult::<(core::felt252,)>> = store_temp<core::PanicResult::<(core::felt252,)>>;
libfunc enum_init<core::PanicResult::<(core::felt252,)>, 1> = enum_init<core::PanicResult::<(core::felt252,)>, 1>;
libfunc rename<felt252> = rename<felt252>;
libfunc store_temp<Unit> = store_temp<Unit>;
libfunc drop<erc20::erc20::ERC20::name::Storage> = drop<erc20::erc20::ERC20::name::Storage>;
libfunc store_temp<erc20::erc20::ERC20::symbol::Storage> = store_temp<erc20::erc20::ERC20::symbol::Storage>;
libfunc function_call<user@erc20::erc20::ERC20::symbol::StorageImpl::read> = function_call<user@erc20::erc20::ERC20::symbol::StorageImpl::read>;
libfunc store_temp<erc20::erc20::ERC20::decimals::Storage> = store_temp<erc20::erc20::ERC20::decimals::Storage>;
libfunc function_call<user@erc20::erc20::ERC20::decimals::StorageImpl::read> = function_call<user@erc20::erc20::ERC20::decimals::StorageImpl::read>;
libfunc struct_construct<Tuple<u8>> = struct_construct<Tuple<u8>>;
libfunc enum_init<core::PanicResult::<(core::integer::u8,)>, 0> = enum_init<core::PanicResult::<(core::integer::u8,)>, 0>;
libfunc store_temp<core::PanicResult::<(core::integer::u8,)>> = store_temp<core::PanicResult::<(core::integer::u8,)>>;
libfunc enum_init<core::PanicResult::<(core::integer::u8,)>, 1> = enum_init<core::PanicResult::<(core::integer::u8,)>, 1>;
libfunc rename<u8> = rename<u8>;
libfunc u8_to_felt252 = u8_to_felt252;
libfunc store_temp<erc20::erc20::ERC20::total_supply::Storage> = store_temp<erc20::erc20::ERC20::total_supply::Storage>;
libfunc function_call<user@erc20::erc20::ERC20::total_supply::StorageImpl::read> = function_call<user@erc20::erc20::ERC20::total_supply::StorageImpl::read>;
libfunc struct_construct<Tuple<core::integer::u256>> = struct_construct<Tuple<core::integer::u256>>;
libfunc enum_init<core::PanicResult::<(core::integer::u256,)>, 0> = enum_init<core::PanicResult::<(core::integer::u256,)>, 0>;
libfunc store_temp<core::PanicResult::<(core::integer::u256,)>> = store_temp<core::PanicResult::<(core::integer::u256,)>>;
libfunc enum_init<core::PanicResult::<(core::integer::u256,)>, 1> = enum_init<core::PanicResult::<(core::integer::u256,)>, 1>;
libfunc struct_deconstruct<core::integer::u256> = struct_deconstruct<core::integer::u256>;
libfunc drop<u128> = drop<u128>;
libfunc store_temp<u128> = store_temp<u128>;
libfunc function_call<user@core::serde::U128Serde::serialize> = function_call<user@core::serde::U128Serde::serialize>;
libfunc rename<Array<felt252>> = rename<Array<felt252>>;
libfunc rename<Unit> = rename<Unit>;
libfunc contract_address_try_from_felt252 = contract_address_try_from_felt252;
libfunc enum_init<core::option::Option::<core::starknet::contract_address::ContractAddress>, 0> = enum_init<core::option::Option::<core::starknet::contract_address::ContractAddress>, 0>;
libfunc store_temp<core::option::Option::<core::starknet::contract_address::ContractAddress>> = store_temp<core::option::Option::<core::starknet::contract_address::ContractAddress>>;
libfunc enum_init<core::option::Option::<core::starknet::contract_address::ContractAddress>, 1> = enum_init<core::option::Option::<core::starknet::contract_address::ContractAddress>, 1>;
libfunc store_temp<erc20::erc20::ERC20::balances::Storage> = store_temp<erc20::erc20::ERC20::balances::Storage>;
libfunc function_call<user@erc20::erc20::ERC20::balances::StorageImpl::read> = function_call<user@erc20::erc20::ERC20::balances::StorageImpl::read>;
libfunc struct_construct<Tuple<ContractAddress, ContractAddress>> = struct_construct<Tuple<ContractAddress, ContractAddress>>;
libfunc store_temp<erc20::erc20::ERC20::allowances::Storage> = store_temp<erc20::erc20::ERC20::allowances::Storage>;
libfunc store_temp<Tuple<ContractAddress, ContractAddress>> = store_temp<Tuple<ContractAddress, ContractAddress>>;
libfunc function_call<user@erc20::erc20::ERC20::allowances::StorageImpl::read> = function_call<user@erc20::erc20::ERC20::allowances::StorageImpl::read>;
libfunc function_call<user@core::serde::U128Serde::deserialize> = function_call<user@core::serde::U128Serde::deserialize>;
libfunc enum_match<core::option::Option::<core::integer::u128>> = enum_match<core::option::Option::<core::integer::u128>>;
libfunc struct_construct<core::integer::u256> = struct_construct<core::integer::u256>;
libfunc enum_init<core::option::Option::<core::integer::u256>, 0> = enum_init<core::option::Option::<core::integer::u256>, 0>;
libfunc store_temp<core::option::Option::<core::integer::u256>> = store_temp<core::option::Option::<core::integer::u256>>;
libfunc enum_init<core::option::Option::<core::integer::u256>, 1> = enum_init<core::option::Option::<core::integer::u256>, 1>;
libfunc function_call<user@core::starknet::info::get_caller_address> = function_call<user@core::starknet::info::get_caller_address>;
libfunc enum_match<core::PanicResult::<(core::starknet::contract_address::ContractAddress,)>> = enum_match<core::PanicResult::<(core::starknet::contract_address::ContractAddress,)>>;
libfunc struct_deconstruct<Tuple<ContractAddress>> = struct_deconstruct<Tuple<ContractAddress>>;
libfunc function_call<user@erc20::erc20::ERC20::StorageImpl::transfer_helper> = function_call<user@erc20::erc20::ERC20::StorageImpl::transfer_helper>;
libfunc struct_deconstruct<Tuple<erc20::erc20::ERC20::Storage, Unit>> = struct_deconstruct<Tuple<erc20::erc20::ERC20::Storage, Unit>>;
libfunc struct_construct<Tuple<erc20::erc20::ERC20::Storage, Unit>> = struct_construct<Tuple<erc20::erc20::ERC20::Storage, Unit>>;
libfunc enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 0> = enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 0>;
libfunc store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>> = store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>;
libfunc enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 1> = enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 1>;
libfunc dup<ContractAddress> = dup<ContractAddress>;
libfunc function_call<user@erc20::erc20::ERC20::StorageImpl::spend_allowance> = function_call<user@erc20::erc20::ERC20::StorageImpl::spend_allowance>;
libfunc function_call<user@erc20::erc20::ERC20::StorageImpl::approve_helper> = function_call<user@erc20::erc20::ERC20::StorageImpl::approve_helper>;
libfunc dup<erc20::erc20::ERC20::allowances::Storage> = dup<erc20::erc20::ERC20::allowances::Storage>;
libfunc function_call<user@core::integer::U256Add::add> = function_call<user@core::integer::U256Add::add>;
libfunc function_call<user@core::integer::U256Sub::sub> = function_call<user@core::integer::U256Sub::sub>;
libfunc array_snapshot_pop_front<felt252> = array_snapshot_pop_front<felt252>;
libfunc enum_init<core::option::Option::<core::box::Box::<@core::felt252>>, 0> = enum_init<core::option::Option::<core::box::Box::<@core::felt252>>, 0>;
libfunc store_temp<Snapshot<Array<felt252>>> = store_temp<Snapshot<Array<felt252>>>;
libfunc store_temp<core::option::Option::<core::box::Box::<@core::felt252>>> = store_temp<core::option::Option::<core::box::Box::<@core::felt252>>>;
libfunc enum_init<core::option::Option::<core::box::Box::<@core::felt252>>, 1> = enum_init<core::option::Option::<core::box::Box::<@core::felt252>>, 1>;
libfunc enum_match<core::option::Option::<core::box::Box::<@core::felt252>>> = enum_match<core::option::Option::<core::box::Box::<@core::felt252>>>;
libfunc unbox<felt252> = unbox<felt252>;
libfunc enum_init<core::option::Option::<core::felt252>, 0> = enum_init<core::option::Option::<core::felt252>, 0>;
libfunc store_temp<core::option::Option::<core::felt252>> = store_temp<core::option::Option::<core::felt252>>;
libfunc enum_init<core::option::Option::<core::felt252>, 1> = enum_init<core::option::Option::<core::felt252>, 1>;
libfunc function_call<user@core::integer::Felt252TryIntoU8::try_into> = function_call<user@core::integer::Felt252TryIntoU8::try_into>;
libfunc enum_init<core::option::Option::<core::integer::u8>, 0> = enum_init<core::option::Option::<core::integer::u8>, 0>;
libfunc store_temp<core::option::Option::<core::integer::u8>> = store_temp<core::option::Option::<core::integer::u8>>;
libfunc enum_init<core::option::Option::<core::integer::u8>, 1> = enum_init<core::option::Option::<core::integer::u8>, 1>;
libfunc function_call<user@erc20::erc20::ERC20::name::StorageImpl::write> = function_call<user@erc20::erc20::ERC20::name::StorageImpl::write>;
libfunc enum_match<core::PanicResult::<(erc20::erc20::ERC20::name::Storage, ())>> = enum_match<core::PanicResult::<(erc20::erc20::ERC20::name::Storage, ())>>;
libfunc struct_deconstruct<Tuple<erc20::erc20::ERC20::name::Storage, Unit>> = struct_deconstruct<Tuple<erc20::erc20::ERC20::name::Storage, Unit>>;
libfunc function_call<user@erc20::erc20::ERC20::symbol::StorageImpl::write> = function_call<user@erc20::erc20::ERC20::symbol::StorageImpl::write>;
libfunc enum_match<core::PanicResult::<(erc20::erc20::ERC20::symbol::Storage, ())>> = enum_match<core::PanicResult::<(erc20::erc20::ERC20::symbol::Storage, ())>>;
libfunc struct_deconstruct<Tuple<erc20::erc20::ERC20::symbol::Storage, Unit>> = struct_deconstruct<Tuple<erc20::erc20::ERC20::symbol::Storage, Unit>>;
libfunc function_call<user@erc20::erc20::ERC20::decimals::StorageImpl::write> = function_call<user@erc20::erc20::ERC20::decimals::StorageImpl::write>;
libfunc enum_match<core::PanicResult::<(erc20::erc20::ERC20::decimals::Storage, ())>> = enum_match<core::PanicResult::<(erc20::erc20::ERC20::decimals::Storage, ())>>;
libfunc struct_deconstruct<Tuple<erc20::erc20::ERC20::decimals::Storage, Unit>> = struct_deconstruct<Tuple<erc20::erc20::ERC20::decimals::Storage, Unit>>;
libfunc contract_address_to_felt252 = contract_address_to_felt252;
libfunc felt252_const<0> = felt252_const<0>;
libfunc felt252_sub = felt252_sub;
libfunc felt252_is_zero = felt252_is_zero;
libfunc drop<NonZero<felt252>> = drop<NonZero<felt252>>;
libfunc felt252_const<7300388948442106731950660484798539862217172507820428101544021685107> = felt252_const<7300388948442106731950660484798539862217172507820428101544021685107>;
libfunc function_call<user@core::assert> = function_call<user@core::assert>;
libfunc enum_match<core::PanicResult::<((),)>> = enum_match<core::PanicResult::<((),)>>;
libfunc drop<Tuple<Unit>> = drop<Tuple<Unit>>;
libfunc function_call<user@erc20::erc20::ERC20::total_supply::StorageImpl::write> = function_call<user@erc20::erc20::ERC20::total_supply::StorageImpl::write>;
libfunc enum_match<core::PanicResult::<(erc20::erc20::ERC20::total_supply::Storage, ())>> = enum_match<core::PanicResult::<(erc20::erc20::ERC20::total_supply::Storage, ())>>;
libfunc struct_deconstruct<Tuple<erc20::erc20::ERC20::total_supply::Storage, Unit>> = struct_deconstruct<Tuple<erc20::erc20::ERC20::total_supply::Storage, Unit>>;
libfunc function_call<user@erc20::erc20::ERC20::balances::StorageImpl::write> = function_call<user@erc20::erc20::ERC20::balances::StorageImpl::write>;
libfunc enum_match<core::PanicResult::<(erc20::erc20::ERC20::balances::Storage, ())>> = enum_match<core::PanicResult::<(erc20::erc20::ERC20::balances::Storage, ())>>;
libfunc struct_deconstruct<Tuple<erc20::erc20::ERC20::balances::Storage, Unit>> = struct_deconstruct<Tuple<erc20::erc20::ERC20::balances::Storage, Unit>>;
libfunc contract_address_const<0> = contract_address_const<0>;
libfunc function_call<user@erc20::erc20::ERC20::Transfer> = function_call<user@erc20::erc20::ERC20::Transfer>;
libfunc storage_base_address_const<1528802474226268325865027367859591458315299653151958663884057507666229546336> = storage_base_address_const<1528802474226268325865027367859591458315299653151958663884057507666229546336>;
libfunc storage_address_from_base = storage_address_from_base;
libfunc store_temp<StorageAddress> = store_temp<StorageAddress>;
libfunc storage_read_syscall = storage_read_syscall;
libfunc enum_init<core::result::Result::<core::felt252, core::array::Array::<core::felt252>>, 0> = enum_init<core::result::Result::<core::felt252, core::array::Array::<core::felt252>>, 0>;
libfunc store_temp<core::result::Result::<core::felt252, core::array::Array::<core::felt252>>> = store_temp<core::result::Result::<core::felt252, core::array::Array::<core::felt252>>>;
libfunc enum_init<core::result::Result::<core::felt252, core::array::Array::<core::felt252>>, 1> = enum_init<core::result::Result::<core::felt252, core::array::Array::<core::felt252>>, 1>;
libfunc rename<core::result::Result::<core::felt252, core::array::Array::<core::felt252>>> = rename<core::result::Result::<core::felt252, core::array::Array::<core::felt252>>>;
libfunc function_call<user@core::starknet::SyscallResultTraitImpl::<core::felt252>::unwrap_syscall> = function_call<user@core::starknet::SyscallResultTraitImpl::<core::felt252>::unwrap_syscall>;
libfunc storage_base_address_const<944713526212149105522785400348068751682982210605126537021911324578866405028> = storage_base_address_const<944713526212149105522785400348068751682982210605126537021911324578866405028>;
libfunc storage_base_address_const<134830404806214277570220174593674215737759987247891306080029841794115377321> = storage_base_address_const<134830404806214277570220174593674215737759987247891306080029841794115377321>;
libfunc store_temp<StorageBaseAddress> = store_temp<StorageBaseAddress>;
libfunc function_call<user@core::starknet::storage_access::StorageAccessU8::read> = function_call<user@core::starknet::storage_access::StorageAccessU8::read>;
libfunc enum_match<core::PanicResult::<(core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>,)>> = enum_match<core::PanicResult::<(core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>,)>>;
libfunc struct_deconstruct<Tuple<core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>>> = struct_deconstruct<Tuple<core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>>>;
libfunc store_temp<core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>> = store_temp<core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>>;
libfunc function_call<user@core::starknet::SyscallResultTraitImpl::<core::integer::u8>::unwrap_syscall> = function_call<user@core::starknet::SyscallResultTraitImpl::<core::integer::u8>::unwrap_syscall>;
libfunc storage_base_address_const<603278275252936218847294002513349627170936020082667936993356353388973422646> = storage_base_address_const<603278275252936218847294002513349627170936020082667936993356353388973422646>;
libfunc function_call<user@core::starknet::storage_access::StorageAccessU256::read> = function_call<user@core::starknet::storage_access::StorageAccessU256::read>;
libfunc enum_match<core::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>> = enum_match<core::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>>;
libfunc struct_deconstruct<Tuple<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>>> = struct_deconstruct<Tuple<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>>>;
libfunc store_temp<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>> = store_temp<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>>;
libfunc function_call<user@core::starknet::SyscallResultTraitImpl::<core::integer::u256>::unwrap_syscall> = function_call<user@core::starknet::SyscallResultTraitImpl::<core::integer::u256>::unwrap_syscall>;
libfunc rename<u128> = rename<u128>;
libfunc u128_to_felt252 = u128_to_felt252;
libfunc function_call<user@erc20::erc20::ERC20::balances::StorageImpl::address> = function_call<user@erc20::erc20::ERC20::balances::StorageImpl::address>;
libfunc function_call<user@erc20::erc20::ERC20::allowances::StorageImpl::address> = function_call<user@erc20::erc20::ERC20::allowances::StorageImpl::address>;
libfunc function_call<user@core::integer::u128_try_from_felt252> = function_call<user@core::integer::u128_try_from_felt252>;
libfunc enum_init<core::option::Option::<core::integer::u128>, 0> = enum_init<core::option::Option::<core::integer::u128>, 0>;
libfunc store_temp<core::option::Option::<core::integer::u128>> = store_temp<core::option::Option::<core::integer::u128>>;
libfunc enum_init<core::option::Option::<core::integer::u128>, 1> = enum_init<core::option::Option::<core::integer::u128>, 1>;
libfunc function_call<user@core::starknet::info::get_execution_info> = function_call<user@core::starknet::info::get_execution_info>;
libfunc enum_match<core::PanicResult::<(core::box::Box::<core::starknet::info::ExecutionInfo>,)>> = enum_match<core::PanicResult::<(core::box::Box::<core::starknet::info::ExecutionInfo>,)>>;
libfunc struct_deconstruct<Tuple<Box<core::starknet::info::ExecutionInfo>>> = struct_deconstruct<Tuple<Box<core::starknet::info::ExecutionInfo>>>;
libfunc unbox<core::starknet::info::ExecutionInfo> = unbox<core::starknet::info::ExecutionInfo>;
libfunc struct_deconstruct<core::starknet::info::ExecutionInfo> = struct_deconstruct<core::starknet::info::ExecutionInfo>;
libfunc drop<Box<core::starknet::info::BlockInfo>> = drop<Box<core::starknet::info::BlockInfo>>;
libfunc drop<Box<core::starknet::info::TxInfo>> = drop<Box<core::starknet::info::TxInfo>>;
libfunc struct_construct<Tuple<ContractAddress>> = struct_construct<Tuple<ContractAddress>>;
libfunc enum_init<core::PanicResult::<(core::starknet::contract_address::ContractAddress,)>, 0> = enum_init<core::PanicResult::<(core::starknet::contract_address::ContractAddress,)>, 0>;
libfunc store_temp<core::PanicResult::<(core::starknet::contract_address::ContractAddress,)>> = store_temp<core::PanicResult::<(core::starknet::contract_address::ContractAddress,)>>;
libfunc enum_init<core::PanicResult::<(core::starknet::contract_address::ContractAddress,)>, 1> = enum_init<core::PanicResult::<(core::starknet::contract_address::ContractAddress,)>, 1>;
libfunc felt252_const<25936191677694277552149992725516921697451103245639728> = felt252_const<25936191677694277552149992725516921697451103245639728>;
libfunc felt252_const<395754877894504967531585582359572169455970492464> = felt252_const<395754877894504967531585582359572169455970492464>;
libfunc dup<erc20::erc20::ERC20::balances::Storage> = dup<erc20::erc20::ERC20::balances::Storage>;
libfunc u128_const<340282366920938463463374607431768211455> = u128_const<340282366920938463463374607431768211455>;
libfunc dup<u128> = dup<u128>;
libfunc u128_eq = u128_eq;
libfunc bool_and_impl = bool_and_impl;
libfunc dup<erc20::erc20::ERC20::name::Storage> = dup<erc20::erc20::ERC20::name::Storage>;
libfunc dup<erc20::erc20::ERC20::symbol::Storage> = dup<erc20::erc20::ERC20::symbol::Storage>;
libfunc dup<erc20::erc20::ERC20::decimals::Storage> = dup<erc20::erc20::ERC20::decimals::Storage>;
libfunc dup<erc20::erc20::ERC20::total_supply::Storage> = dup<erc20::erc20::ERC20::total_supply::Storage>;
libfunc felt252_const<101313248740993271302566317381896466254801065025584> = felt252_const<101313248740993271302566317381896466254801065025584>;
libfunc function_call<user@erc20::erc20::ERC20::allowances::StorageImpl::write> = function_call<user@erc20::erc20::ERC20::allowances::StorageImpl::write>;
libfunc enum_match<core::PanicResult::<(erc20::erc20::ERC20::allowances::Storage, ())>> = enum_match<core::PanicResult::<(erc20::erc20::ERC20::allowances::Storage, ())>>;
libfunc struct_deconstruct<Tuple<erc20::erc20::ERC20::allowances::Storage, Unit>> = struct_deconstruct<Tuple<erc20::erc20::ERC20::allowances::Storage, Unit>>;
libfunc function_call<user@erc20::erc20::ERC20::Approval> = function_call<user@erc20::erc20::ERC20::Approval>;
libfunc function_call<user@core::integer::u256_checked_add> = function_call<user@core::integer::u256_checked_add>;
libfunc felt252_const<39879774624079483812136948410799859986295> = felt252_const<39879774624079483812136948410799859986295>;
libfunc function_call<user@core::integer::u256_checked_sub> = function_call<user@core::integer::u256_checked_sub>;
libfunc felt252_const<39879774624085075084607933104993585622903> = felt252_const<39879774624085075084607933104993585622903>;
libfunc u8_try_from_felt252 = u8_try_from_felt252;
libfunc rename<RangeCheck> = rename<RangeCheck>;
libfunc rename<core::option::Option::<core::integer::u8>> = rename<core::option::Option::<core::integer::u8>>;
libfunc storage_write_syscall = storage_write_syscall;
libfunc enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 0> = enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 0>;
libfunc store_temp<core::result::Result::<(), core::array::Array::<core::felt252>>> = store_temp<core::result::Result::<(), core::array::Array::<core::felt252>>>;
libfunc enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 1> = enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 1>;
libfunc rename<core::result::Result::<(), core::array::Array::<core::felt252>>> = rename<core::result::Result::<(), core::array::Array::<core::felt252>>>;
libfunc function_call<user@core::starknet::SyscallResultTraitImpl::<()>::unwrap_syscall> = function_call<user@core::starknet::SyscallResultTraitImpl::<()>::unwrap_syscall>;
libfunc struct_deconstruct<Tuple<Unit>> = struct_deconstruct<Tuple<Unit>>;
libfunc struct_construct<Tuple<erc20::erc20::ERC20::name::Storage, Unit>> = struct_construct<Tuple<erc20::erc20::ERC20::name::Storage, Unit>>;
libfunc enum_init<core::PanicResult::<(erc20::erc20::ERC20::name::Storage, ())>, 0> = enum_init<core::PanicResult::<(erc20::erc20::ERC20::name::Storage, ())>, 0>;
libfunc store_temp<core::PanicResult::<(erc20::erc20::ERC20::name::Storage, ())>> = store_temp<core::PanicResult::<(erc20::erc20::ERC20::name::Storage, ())>>;
libfunc enum_init<core::PanicResult::<(erc20::erc20::ERC20::name::Storage, ())>, 1> = enum_init<core::PanicResult::<(erc20::erc20::ERC20::name::Storage, ())>, 1>;
libfunc struct_construct<Tuple<erc20::erc20::ERC20::symbol::Storage, Unit>> = struct_construct<Tuple<erc20::erc20::ERC20::symbol::Storage, Unit>>;
libfunc enum_init<core::PanicResult::<(erc20::erc20::ERC20::symbol::Storage, ())>, 0> = enum_init<core::PanicResult::<(erc20::erc20::ERC20::symbol::Storage, ())>, 0>;
libfunc store_temp<core::PanicResult::<(erc20::erc20::ERC20::symbol::Storage, ())>> = store_temp<core::PanicResult::<(erc20::erc20::ERC20::symbol::Storage, ())>>;
libfunc enum_init<core::PanicResult::<(erc20::erc20::ERC20::symbol::Storage, ())>, 1> = enum_init<core::PanicResult::<(erc20::erc20::ERC20::symbol::Storage, ())>, 1>;
libfunc struct_construct<Tuple<erc20::erc20::ERC20::decimals::Storage, Unit>> = struct_construct<Tuple<erc20::erc20::ERC20::decimals::Storage, Unit>>;
libfunc enum_init<core::PanicResult::<(erc20::erc20::ERC20::decimals::Storage, ())>, 0> = enum_init<core::PanicResult::<(erc20::erc20::ERC20::decimals::Storage, ())>, 0>;
libfunc store_temp<core::PanicResult::<(erc20::erc20::ERC20::decimals::Storage, ())>> = store_temp<core::PanicResult::<(erc20::erc20::ERC20::decimals::Storage, ())>>;
libfunc enum_init<core::PanicResult::<(erc20::erc20::ERC20::decimals::Storage, ())>, 1> = enum_init<core::PanicResult::<(erc20::erc20::ERC20::decimals::Storage, ())>, 1>;
libfunc struct_construct<Tuple<Unit>> = struct_construct<Tuple<Unit>>;
libfunc enum_init<core::PanicResult::<((),)>, 0> = enum_init<core::PanicResult::<((),)>, 0>;
libfunc store_temp<core::PanicResult::<((),)>> = store_temp<core::PanicResult::<((),)>>;
libfunc enum_init<core::PanicResult::<((),)>, 1> = enum_init<core::PanicResult::<((),)>, 1>;
libfunc function_call<user@core::starknet::storage_access::StorageAccessU256::write> = function_call<user@core::starknet::storage_access::StorageAccessU256::write>;
libfunc struct_construct<Tuple<erc20::erc20::ERC20::total_supply::Storage, Unit>> = struct_construct<Tuple<erc20::erc20::ERC20::total_supply::Storage, Unit>>;
libfunc enum_init<core::PanicResult::<(erc20::erc20::ERC20::total_supply::Storage, ())>, 0> = enum_init<core::PanicResult::<(erc20::erc20::ERC20::total_supply::Storage, ())>, 0>;
libfunc store_temp<core::PanicResult::<(erc20::erc20::ERC20::total_supply::Storage, ())>> = store_temp<core::PanicResult::<(erc20::erc20::ERC20::total_supply::Storage, ())>>;
libfunc enum_init<core::PanicResult::<(erc20::erc20::ERC20::total_supply::Storage, ())>, 1> = enum_init<core::PanicResult::<(erc20::erc20::ERC20::total_supply::Storage, ())>, 1>;
libfunc struct_construct<Tuple<erc20::erc20::ERC20::balances::Storage, Unit>> = struct_construct<Tuple<erc20::erc20::ERC20::balances::Storage, Unit>>;
libfunc enum_init<core::PanicResult::<(erc20::erc20::ERC20::balances::Storage, ())>, 0> = enum_init<core::PanicResult::<(erc20::erc20::ERC20::balances::Storage, ())>, 0>;
libfunc store_temp<core::PanicResult::<(erc20::erc20::ERC20::balances::Storage, ())>> = store_temp<core::PanicResult::<(erc20::erc20::ERC20::balances::Storage, ())>>;
libfunc enum_init<core::PanicResult::<(erc20::erc20::ERC20::balances::Storage, ())>, 1> = enum_init<core::PanicResult::<(erc20::erc20::ERC20::balances::Storage, ())>, 1>;
libfunc felt252_const<271746229759260285552388728919865295615886751538523744128730118297934206697> = felt252_const<271746229759260285552388728919865295615886751538523744128730118297934206697>;
libfunc function_call<user@core::starknet::contract_address::ContractAddressSerde::serialize> = function_call<user@core::starknet::contract_address::ContractAddressSerde::serialize>;
libfunc emit_event_syscall = emit_event_syscall;
libfunc enum_match<core::result::Result::<core::felt252, core::array::Array::<core::felt252>>> = enum_match<core::result::Result::<core::felt252, core::array::Array::<core::felt252>>>;
libfunc enum_init<core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>, 0> = enum_init<core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>, 0>;
libfunc struct_construct<Tuple<core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>>> = struct_construct<Tuple<core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>>>;
libfunc enum_init<core::PanicResult::<(core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>,)>, 0> = enum_init<core::PanicResult::<(core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>,)>, 0>;
libfunc store_temp<core::PanicResult::<(core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>,)>> = store_temp<core::PanicResult::<(core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>,)>>;
libfunc felt252_const<2046306368138969050899942931452836379425163887498684822840> = felt252_const<2046306368138969050899942931452836379425163887498684822840>;
libfunc enum_init<core::PanicResult::<(core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>,)>, 1> = enum_init<core::PanicResult::<(core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>,)>, 1>;
libfunc enum_init<core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>, 1> = enum_init<core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>, 1>;
libfunc enum_match<core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>> = enum_match<core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>>;
libfunc dup<u32> = dup<u32>;
libfunc dup<StorageBaseAddress> = dup<StorageBaseAddress>;
libfunc function_call<user@core::starknet::storage_access::StorageAccessU128::read> = function_call<user@core::starknet::storage_access::StorageAccessU128::read>;
libfunc enum_match<core::PanicResult::<(core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>,)>> = enum_match<core::PanicResult::<(core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>,)>>;
libfunc struct_deconstruct<Tuple<core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>>> = struct_deconstruct<Tuple<core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>>>;
libfunc enum_match<core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>> = enum_match<core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>>;
libfunc u8_const<1> = u8_const<1>;
libfunc storage_address_from_base_and_offset = storage_address_from_base_and_offset;
libfunc enum_init<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>, 0> = enum_init<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>, 0>;
libfunc struct_construct<Tuple<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>>> = struct_construct<Tuple<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>>>;
libfunc enum_init<core::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>, 0> = enum_init<core::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>, 0>;
libfunc store_temp<core::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>> = store_temp<core::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>>;
libfunc felt252_const<8788818928753408456771414258856301896042245023813903268884264400182> = felt252_const<8788818928753408456771414258856301896042245023813903268884264400182>;
libfunc enum_init<core::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>, 1> = enum_init<core::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>, 1>;
libfunc enum_init<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>, 1> = enum_init<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>, 1>;
libfunc drop<StorageBaseAddress> = drop<StorageBaseAddress>;
libfunc drop<u32> = drop<u32>;
libfunc enum_match<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>> = enum_match<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>>;
libfunc felt252_const<1065622543624526936256554561967983185612257046533136611876836524258158810564> = felt252_const<1065622543624526936256554561967983185612257046533136611876836524258158810564>;
libfunc function_call<user@core::hash::LegacyHashContractAddress::hash> = function_call<user@core::hash::LegacyHashContractAddress::hash>;
libfunc storage_base_address_from_felt252 = storage_base_address_from_felt252;
libfunc felt252_const<337994139936370667767799129369552596157394447336989834104582481799883947719> = felt252_const<337994139936370667767799129369552596157394447336989834104582481799883947719>;
libfunc function_call<user@core::hash::TupleSize2LegacyHash::<core::starknet::contract_address::ContractAddress, core::starknet::contract_address::ContractAddress, core::hash::LegacyHashContractAddress, core::hash::LegacyHashContractAddress, core::starknet::contract_address::ContractAddressDrop, core::starknet::contract_address::ContractAddressDrop>::hash> = function_call<user@core::hash::TupleSize2LegacyHash::<core::starknet::contract_address::ContractAddress, core::starknet::contract_address::ContractAddress, core::hash::LegacyHashContractAddress, core::hash::LegacyHashContractAddress, core::starknet::contract_address::ContractAddressDrop, core::starknet::contract_address::ContractAddressDrop>::hash>;
libfunc u128s_from_felt252 = u128s_from_felt252;
libfunc struct_construct<Tuple<u128, u128>> = struct_construct<Tuple<u128, u128>>;
libfunc drop<Tuple<u128, u128>> = drop<Tuple<u128, u128>>;
libfunc rename<core::option::Option::<core::integer::u128>> = rename<core::option::Option::<core::integer::u128>>;
libfunc get_execution_info_syscall = get_execution_info_syscall;
libfunc enum_init<core::result::Result::<core::box::Box::<core::starknet::info::ExecutionInfo>, core::array::Array::<core::felt252>>, 0> = enum_init<core::result::Result::<core::box::Box::<core::starknet::info::ExecutionInfo>, core::array::Array::<core::felt252>>, 0>;
libfunc store_temp<core::result::Result::<core::box::Box::<core::starknet::info::ExecutionInfo>, core::array::Array::<core::felt252>>> = store_temp<core::result::Result::<core::box::Box::<core::starknet::info::ExecutionInfo>, core::array::Array::<core::felt252>>>;
libfunc enum_init<core::result::Result::<core::box::Box::<core::starknet::info::ExecutionInfo>, core::array::Array::<core::felt252>>, 1> = enum_init<core::result::Result::<core::box::Box::<core::starknet::info::ExecutionInfo>, core::array::Array::<core::felt252>>, 1>;
libfunc rename<core::result::Result::<core::box::Box::<core::starknet::info::ExecutionInfo>, core::array::Array::<core::felt252>>> = rename<core::result::Result::<core::box::Box::<core::starknet::info::ExecutionInfo>, core::array::Array::<core::felt252>>>;
libfunc function_call<user@core::starknet::SyscallResultTraitImpl::<core::box::Box::<core::starknet::info::ExecutionInfo>>::unwrap_syscall> = function_call<user@core::starknet::SyscallResultTraitImpl::<core::box::Box::<core::starknet::info::ExecutionInfo>>::unwrap_syscall>;
libfunc struct_construct<Tuple<Box<core::starknet::info::ExecutionInfo>>> = struct_construct<Tuple<Box<core::starknet::info::ExecutionInfo>>>;
libfunc enum_init<core::PanicResult::<(core::box::Box::<core::starknet::info::ExecutionInfo>,)>, 0> = enum_init<core::PanicResult::<(core::box::Box::<core::starknet::info::ExecutionInfo>,)>, 0>;
libfunc store_temp<core::PanicResult::<(core::box::Box::<core::starknet::info::ExecutionInfo>,)>> = store_temp<core::PanicResult::<(core::box::Box::<core::starknet::info::ExecutionInfo>,)>>;
libfunc enum_init<core::PanicResult::<(core::box::Box::<core::starknet::info::ExecutionInfo>,)>, 1> = enum_init<core::PanicResult::<(core::box::Box::<core::starknet::info::ExecutionInfo>,)>, 1>;
libfunc struct_construct<Tuple<erc20::erc20::ERC20::allowances::Storage, Unit>> = struct_construct<Tuple<erc20::erc20::ERC20::allowances::Storage, Unit>>;
libfunc enum_init<core::PanicResult::<(erc20::erc20::ERC20::allowances::Storage, ())>, 0> = enum_init<core::PanicResult::<(erc20::erc20::ERC20::allowances::Storage, ())>, 0>;
libfunc store_temp<core::PanicResult::<(erc20::erc20::ERC20::allowances::Storage, ())>> = store_temp<core::PanicResult::<(erc20::erc20::ERC20::allowances::Storage, ())>>;
libfunc enum_init<core::PanicResult::<(erc20::erc20::ERC20::allowances::Storage, ())>, 1> = enum_init<core::PanicResult::<(erc20::erc20::ERC20::allowances::Storage, ())>, 1>;
libfunc felt252_const<544914742286571513055574265148471203182105283038408585630116262969508767999> = felt252_const<544914742286571513055574265148471203182105283038408585630116262969508767999>;
libfunc function_call<user@core::integer::u256_overflowing_add> = function_call<user@core::integer::u256_overflowing_add>;
libfunc struct_deconstruct<Tuple<core::integer::u256, core::bool>> = struct_deconstruct<Tuple<core::integer::u256, core::bool>>;
libfunc function_call<user@core::integer::u256_overflow_sub> = function_call<user@core::integer::u256_overflow_sub>;
libfunc enum_match<core::result::Result::<(), core::array::Array::<core::felt252>>> = enum_match<core::result::Result::<(), core::array::Array::<core::felt252>>>;
libfunc rename<GasBuiltin> = rename<GasBuiltin>;
libfunc rename<System> = rename<System>;
libfunc rename<ContractAddress> = rename<ContractAddress>;
libfunc enum_init<core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>, 0> = enum_init<core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>, 0>;
libfunc struct_construct<Tuple<core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>>> = struct_construct<Tuple<core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>>>;
libfunc enum_init<core::PanicResult::<(core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>,)>, 0> = enum_init<core::PanicResult::<(core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>,)>, 0>;
libfunc store_temp<core::PanicResult::<(core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>,)>> = store_temp<core::PanicResult::<(core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>,)>>;
libfunc felt252_const<8788818928753408456771414258856301875522769902639082522293830758968> = felt252_const<8788818928753408456771414258856301875522769902639082522293830758968>;
libfunc enum_init<core::PanicResult::<(core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>,)>, 1> = enum_init<core::PanicResult::<(core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>,)>, 1>;
libfunc enum_init<core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>, 1> = enum_init<core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>, 1>;
libfunc pedersen = pedersen;
libfunc struct_deconstruct<Tuple<ContractAddress, ContractAddress>> = struct_deconstruct<Tuple<ContractAddress, ContractAddress>>;
libfunc rename<Pedersen> = rename<Pedersen>;
libfunc enum_match<core::result::Result::<core::box::Box::<core::starknet::info::ExecutionInfo>, core::array::Array::<core::felt252>>> = enum_match<core::result::Result::<core::box::Box::<core::starknet::info::ExecutionInfo>, core::array::Array::<core::felt252>>>;
libfunc u128_overflowing_add = u128_overflowing_add;
libfunc struct_construct<Tuple<u128, core::bool>> = struct_construct<Tuple<u128, core::bool>>;
libfunc store_temp<Tuple<u128, core::bool>> = store_temp<Tuple<u128, core::bool>>;
libfunc struct_deconstruct<Tuple<u128, core::bool>> = struct_deconstruct<Tuple<u128, core::bool>>;
libfunc struct_construct<Tuple<core::integer::u256, core::bool>> = struct_construct<Tuple<core::integer::u256, core::bool>>;
libfunc store_temp<Tuple<core::integer::u256, core::bool>> = store_temp<Tuple<core::integer::u256, core::bool>>;
libfunc u128_const<1> = u128_const<1>;
libfunc drop<core::bool> = drop<core::bool>;
libfunc rename<Tuple<core::integer::u256, core::bool>> = rename<Tuple<core::integer::u256, core::bool>>;
libfunc u128_overflowing_sub = u128_overflowing_sub;

revoke_ap_tracking() -> ();
enable_ap_tracking() -> ();
withdraw_gas([0], [1]) { fallthrough([4], [5]) 91([6], [7]) };
branch_align() -> ();
struct_deconstruct<core::array::Span::<core::felt252>>([3]) -> ([8]);
array_len<felt252>([8]) -> ([9]);
u32_const<0>() -> ([10]);
store_temp<u32>([9]) -> ([9]);
store_temp<RangeCheck>([4]) -> ([4]);
u32_eq([9], [10]) { fallthrough() 15() };
branch_align() -> ();
struct_construct<Unit>() -> ([11]);
enum_init<core::bool, 0>([11]) -> ([12]);
store_temp<core::bool>([12]) -> ([13]);
jump() { 19() };
branch_align() -> ();
struct_construct<Unit>() -> ([14]);
enum_init<core::bool, 1>([14]) -> ([15]);
store_temp<core::bool>([15]) -> ([13]);
bool_not_impl([13]) -> ([16]);
store_temp<core::bool>([16]) -> ([16]);
enum_match<core::bool>([16]) { fallthrough([17]) 75([18]) };
branch_align() -> ();
disable_ap_tracking() -> ();
drop<Unit>([17]) -> ();
get_builtin_costs() -> ([19]);
store_temp<BuiltinCosts>([19]) -> ([19]);
withdraw_gas_all([4], [5], [19]) { fallthrough([20], [21]) 64([22], [23]) };
branch_align() -> ();
function_call<user@erc20::erc20::ERC20::unsafe_new_storage>() -> ([24]);
dup<erc20::erc20::ERC20::Storage>([24]) -> ([25], [26]);
drop<erc20::erc20::ERC20::Storage>([25]) -> ();
store_temp<GasBuiltin>([21]) -> ([30]);
store_temp<System>([2]) -> ([31]);
store_temp<erc20::erc20::ERC20::Storage>([26]) -> ([32]);
function_call<user@erc20::erc20::ERC20::get_name>([30], [31], [32]) -> ([27], [28], [29]);
store_temp<RangeCheck>([20]) -> ([20]);
enum_match<core::PanicResult::<(core::felt252,)>>([29]) { fallthrough([33]) 57([34]) };
branch_align() -> ();
struct_deconstruct<Tuple<felt252>>([33]) -> ([35]);
array_new<felt252>() -> ([36]);
dup<felt252>([35]) -> ([37], [38]);
drop<felt252>([37]) -> ();
store_temp<felt252>([38]) -> ([41]);
store_temp<Array<felt252>>([36]) -> ([42]);
function_call<user@core::serde::Felt252Serde::serialize>([41], [42]) -> ([39], [40]);
drop<Unit>([40]) -> ();
snapshot_take<Array<felt252>>([39]) -> ([43], [44]);
drop<Array<felt252>>([43]) -> ();
struct_construct<core::array::Span::<core::felt252>>([44]) -> ([45]);
struct_construct<Tuple<core::array::Span::<core::felt252>>>([45]) -> ([46]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 0>([46]) -> ([47]);
store_temp<RangeCheck>([20]) -> ([48]);
store_temp<GasBuiltin>([27]) -> ([49]);
store_temp<System>([28]) -> ([50]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([47]) -> ([51]);
return([48], [49], [50], [51]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([34]) -> ([52]);
store_temp<RangeCheck>([20]) -> ([53]);
store_temp<GasBuiltin>([27]) -> ([54]);
store_temp<System>([28]) -> ([55]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([52]) -> ([56]);
return([53], [54], [55], [56]);
branch_align() -> ();
array_new<felt252>() -> ([57]);
felt252_const<375233589013918064796019>() -> ([58]);
store_temp<felt252>([58]) -> ([58]);
array_append<felt252>([57], [58]) -> ([59]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([59]) -> ([60]);
store_temp<RangeCheck>([22]) -> ([61]);
store_temp<GasBuiltin>([23]) -> ([62]);
store_temp<System>([2]) -> ([63]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([60]) -> ([64]);
return([61], [62], [63], [64]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<Unit>([18]) -> ();
store_temp<System>([2]) -> ([67]);
function_call<user@core::starknet::use_system_implicit>([67]) -> ([65], [66]);
drop<Unit>([66]) -> ();
array_new<felt252>() -> ([68]);
felt252_const<7733229381460288120802334208475838166080759535023995805565484692595>() -> ([69]);
store_temp<felt252>([69]) -> ([69]);
array_append<felt252>([68], [69]) -> ([70]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([70]) -> ([71]);
store_temp<RangeCheck>([4]) -> ([72]);
store_temp<GasBuiltin>([5]) -> ([73]);
store_temp<System>([65]) -> ([74]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([71]) -> ([75]);
return([72], [73], [74], [75]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<core::array::Span::<core::felt252>>([3]) -> ();
array_new<felt252>() -> ([76]);
felt252_const<375233589013918064796019>() -> ([77]);
store_temp<felt252>([77]) -> ([77]);
array_append<felt252>([76], [77]) -> ([78]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([78]) -> ([79]);
store_temp<RangeCheck>([6]) -> ([80]);
store_temp<GasBuiltin>([7]) -> ([81]);
store_temp<System>([2]) -> ([82]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([79]) -> ([83]);
return([80], [81], [82], [83]);
revoke_ap_tracking() -> ();
enable_ap_tracking() -> ();
withdraw_gas([0], [1]) { fallthrough([4], [5]) 195([6], [7]) };
branch_align() -> ();
struct_deconstruct<core::array::Span::<core::felt252>>([3]) -> ([8]);
array_len<felt252>([8]) -> ([9]);
u32_const<0>() -> ([10]);
store_temp<u32>([9]) -> ([9]);
store_temp<RangeCheck>([4]) -> ([4]);
u32_eq([9], [10]) { fallthrough() 119() };
branch_align() -> ();
struct_construct<Unit>() -> ([11]);
enum_init<core::bool, 0>([11]) -> ([12]);
store_temp<core::bool>([12]) -> ([13]);
jump() { 123() };
branch_align() -> ();
struct_construct<Unit>() -> ([14]);
enum_init<core::bool, 1>([14]) -> ([15]);
store_temp<core::bool>([15]) -> ([13]);
bool_not_impl([13]) -> ([16]);
store_temp<core::bool>([16]) -> ([16]);
enum_match<core::bool>([16]) { fallthrough([17]) 179([18]) };
branch_align() -> ();
disable_ap_tracking() -> ();
drop<Unit>([17]) -> ();
get_builtin_costs() -> ([19]);
store_temp<BuiltinCosts>([19]) -> ([19]);
withdraw_gas_all([4], [5], [19]) { fallthrough([20], [21]) 168([22], [23]) };
branch_align() -> ();
function_call<user@erc20::erc20::ERC20::unsafe_new_storage>() -> ([24]);
dup<erc20::erc20::ERC20::Storage>([24]) -> ([25], [26]);
drop<erc20::erc20::ERC20::Storage>([25]) -> ();
store_temp<GasBuiltin>([21]) -> ([30]);
store_temp<System>([2]) -> ([31]);
store_temp<erc20::erc20::ERC20::Storage>([26]) -> ([32]);
function_call<user@erc20::erc20::ERC20::get_symbol>([30], [31], [32]) -> ([27], [28], [29]);
store_temp<RangeCheck>([20]) -> ([20]);
enum_match<core::PanicResult::<(core::felt252,)>>([29]) { fallthrough([33]) 161([34]) };
branch_align() -> ();
struct_deconstruct<Tuple<felt252>>([33]) -> ([35]);
array_new<felt252>() -> ([36]);
dup<felt252>([35]) -> ([37], [38]);
drop<felt252>([37]) -> ();
store_temp<felt252>([38]) -> ([41]);
store_temp<Array<felt252>>([36]) -> ([42]);
function_call<user@core::serde::Felt252Serde::serialize>([41], [42]) -> ([39], [40]);
drop<Unit>([40]) -> ();
snapshot_take<Array<felt252>>([39]) -> ([43], [44]);
drop<Array<felt252>>([43]) -> ();
struct_construct<core::array::Span::<core::felt252>>([44]) -> ([45]);
struct_construct<Tuple<core::array::Span::<core::felt252>>>([45]) -> ([46]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 0>([46]) -> ([47]);
store_temp<RangeCheck>([20]) -> ([48]);
store_temp<GasBuiltin>([27]) -> ([49]);
store_temp<System>([28]) -> ([50]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([47]) -> ([51]);
return([48], [49], [50], [51]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([34]) -> ([52]);
store_temp<RangeCheck>([20]) -> ([53]);
store_temp<GasBuiltin>([27]) -> ([54]);
store_temp<System>([28]) -> ([55]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([52]) -> ([56]);
return([53], [54], [55], [56]);
branch_align() -> ();
array_new<felt252>() -> ([57]);
felt252_const<375233589013918064796019>() -> ([58]);
store_temp<felt252>([58]) -> ([58]);
array_append<felt252>([57], [58]) -> ([59]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([59]) -> ([60]);
store_temp<RangeCheck>([22]) -> ([61]);
store_temp<GasBuiltin>([23]) -> ([62]);
store_temp<System>([2]) -> ([63]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([60]) -> ([64]);
return([61], [62], [63], [64]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<Unit>([18]) -> ();
store_temp<System>([2]) -> ([67]);
function_call<user@core::starknet::use_system_implicit>([67]) -> ([65], [66]);
drop<Unit>([66]) -> ();
array_new<felt252>() -> ([68]);
felt252_const<7733229381460288120802334208475838166080759535023995805565484692595>() -> ([69]);
store_temp<felt252>([69]) -> ([69]);
array_append<felt252>([68], [69]) -> ([70]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([70]) -> ([71]);
store_temp<RangeCheck>([4]) -> ([72]);
store_temp<GasBuiltin>([5]) -> ([73]);
store_temp<System>([65]) -> ([74]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([71]) -> ([75]);
return([72], [73], [74], [75]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<core::array::Span::<core::felt252>>([3]) -> ();
array_new<felt252>() -> ([76]);
felt252_const<375233589013918064796019>() -> ([77]);
store_temp<felt252>([77]) -> ([77]);
array_append<felt252>([76], [77]) -> ([78]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([78]) -> ([79]);
store_temp<RangeCheck>([6]) -> ([80]);
store_temp<GasBuiltin>([7]) -> ([81]);
store_temp<System>([2]) -> ([82]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([79]) -> ([83]);
return([80], [81], [82], [83]);
revoke_ap_tracking() -> ();
enable_ap_tracking() -> ();
withdraw_gas([0], [1]) { fallthrough([4], [5]) 299([6], [7]) };
branch_align() -> ();
struct_deconstruct<core::array::Span::<core::felt252>>([3]) -> ([8]);
array_len<felt252>([8]) -> ([9]);
u32_const<0>() -> ([10]);
store_temp<u32>([9]) -> ([9]);
store_temp<RangeCheck>([4]) -> ([4]);
u32_eq([9], [10]) { fallthrough() 223() };
branch_align() -> ();
struct_construct<Unit>() -> ([11]);
enum_init<core::bool, 0>([11]) -> ([12]);
store_temp<core::bool>([12]) -> ([13]);
jump() { 227() };
branch_align() -> ();
struct_construct<Unit>() -> ([14]);
enum_init<core::bool, 1>([14]) -> ([15]);
store_temp<core::bool>([15]) -> ([13]);
bool_not_impl([13]) -> ([16]);
store_temp<core::bool>([16]) -> ([16]);
enum_match<core::bool>([16]) { fallthrough([17]) 283([18]) };
branch_align() -> ();
disable_ap_tracking() -> ();
drop<Unit>([17]) -> ();
get_builtin_costs() -> ([19]);
store_temp<BuiltinCosts>([19]) -> ([19]);
withdraw_gas_all([4], [5], [19]) { fallthrough([20], [21]) 272([22], [23]) };
branch_align() -> ();
function_call<user@erc20::erc20::ERC20::unsafe_new_storage>() -> ([24]);
dup<erc20::erc20::ERC20::Storage>([24]) -> ([25], [26]);
drop<erc20::erc20::ERC20::Storage>([25]) -> ();
store_temp<RangeCheck>([20]) -> ([31]);
store_temp<GasBuiltin>([21]) -> ([32]);
store_temp<System>([2]) -> ([33]);
store_temp<erc20::erc20::ERC20::Storage>([26]) -> ([34]);
function_call<user@erc20::erc20::ERC20::get_decimals>([31], [32], [33], [34]) -> ([27], [28], [29], [30]);
enum_match<core::PanicResult::<(core::integer::u8,)>>([30]) { fallthrough([35]) 265([36]) };
branch_align() -> ();
struct_deconstruct<Tuple<u8>>([35]) -> ([37]);
array_new<felt252>() -> ([38]);
dup<u8>([37]) -> ([39], [40]);
drop<u8>([39]) -> ();
store_temp<u8>([40]) -> ([43]);
store_temp<Array<felt252>>([38]) -> ([44]);
function_call<user@core::serde::U8Serde::serialize>([43], [44]) -> ([41], [42]);
drop<Unit>([42]) -> ();
snapshot_take<Array<felt252>>([41]) -> ([45], [46]);
drop<Array<felt252>>([45]) -> ();
struct_construct<core::array::Span::<core::felt252>>([46]) -> ([47]);
struct_construct<Tuple<core::array::Span::<core::felt252>>>([47]) -> ([48]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 0>([48]) -> ([49]);
store_temp<RangeCheck>([27]) -> ([50]);
store_temp<GasBuiltin>([28]) -> ([51]);
store_temp<System>([29]) -> ([52]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([49]) -> ([53]);
return([50], [51], [52], [53]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([36]) -> ([54]);
store_temp<RangeCheck>([27]) -> ([55]);
store_temp<GasBuiltin>([28]) -> ([56]);
store_temp<System>([29]) -> ([57]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([54]) -> ([58]);
return([55], [56], [57], [58]);
branch_align() -> ();
array_new<felt252>() -> ([59]);
felt252_const<375233589013918064796019>() -> ([60]);
store_temp<felt252>([60]) -> ([60]);
array_append<felt252>([59], [60]) -> ([61]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([61]) -> ([62]);
store_temp<RangeCheck>([22]) -> ([63]);
store_temp<GasBuiltin>([23]) -> ([64]);
store_temp<System>([2]) -> ([65]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([62]) -> ([66]);
return([63], [64], [65], [66]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<Unit>([18]) -> ();
store_temp<System>([2]) -> ([69]);
function_call<user@core::starknet::use_system_implicit>([69]) -> ([67], [68]);
drop<Unit>([68]) -> ();
array_new<felt252>() -> ([70]);
felt252_const<7733229381460288120802334208475838166080759535023995805565484692595>() -> ([71]);
store_temp<felt252>([71]) -> ([71]);
array_append<felt252>([70], [71]) -> ([72]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([72]) -> ([73]);
store_temp<RangeCheck>([4]) -> ([74]);
store_temp<GasBuiltin>([5]) -> ([75]);
store_temp<System>([67]) -> ([76]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([73]) -> ([77]);
return([74], [75], [76], [77]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<core::array::Span::<core::felt252>>([3]) -> ();
array_new<felt252>() -> ([78]);
felt252_const<375233589013918064796019>() -> ([79]);
store_temp<felt252>([79]) -> ([79]);
array_append<felt252>([78], [79]) -> ([80]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([80]) -> ([81]);
store_temp<RangeCheck>([6]) -> ([82]);
store_temp<GasBuiltin>([7]) -> ([83]);
store_temp<System>([2]) -> ([84]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([81]) -> ([85]);
return([82], [83], [84], [85]);
revoke_ap_tracking() -> ();
enable_ap_tracking() -> ();
withdraw_gas([0], [1]) { fallthrough([4], [5]) 403([6], [7]) };
branch_align() -> ();
struct_deconstruct<core::array::Span::<core::felt252>>([3]) -> ([8]);
array_len<felt252>([8]) -> ([9]);
u32_const<0>() -> ([10]);
store_temp<u32>([9]) -> ([9]);
store_temp<RangeCheck>([4]) -> ([4]);
u32_eq([9], [10]) { fallthrough() 327() };
branch_align() -> ();
struct_construct<Unit>() -> ([11]);
enum_init<core::bool, 0>([11]) -> ([12]);
store_temp<core::bool>([12]) -> ([13]);
jump() { 331() };
branch_align() -> ();
struct_construct<Unit>() -> ([14]);
enum_init<core::bool, 1>([14]) -> ([15]);
store_temp<core::bool>([15]) -> ([13]);
bool_not_impl([13]) -> ([16]);
store_temp<core::bool>([16]) -> ([16]);
enum_match<core::bool>([16]) { fallthrough([17]) 387([18]) };
branch_align() -> ();
disable_ap_tracking() -> ();
drop<Unit>([17]) -> ();
get_builtin_costs() -> ([19]);
store_temp<BuiltinCosts>([19]) -> ([19]);
withdraw_gas_all([4], [5], [19]) { fallthrough([20], [21]) 376([22], [23]) };
branch_align() -> ();
function_call<user@erc20::erc20::ERC20::unsafe_new_storage>() -> ([24]);
dup<erc20::erc20::ERC20::Storage>([24]) -> ([25], [26]);
drop<erc20::erc20::ERC20::Storage>([25]) -> ();
store_temp<RangeCheck>([20]) -> ([31]);
store_temp<GasBuiltin>([21]) -> ([32]);
store_temp<System>([2]) -> ([33]);
store_temp<erc20::erc20::ERC20::Storage>([26]) -> ([34]);
function_call<user@erc20::erc20::ERC20::get_total_supply>([31], [32], [33], [34]) -> ([27], [28], [29], [30]);
enum_match<core::PanicResult::<(core::integer::u256,)>>([30]) { fallthrough([35]) 369([36]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::integer::u256>>([35]) -> ([37]);
array_new<felt252>() -> ([38]);
dup<core::integer::u256>([37]) -> ([39], [40]);
drop<core::integer::u256>([39]) -> ();
store_temp<core::integer::u256>([40]) -> ([43]);
store_temp<Array<felt252>>([38]) -> ([44]);
function_call<user@core::integer::u256Serde::serialize>([43], [44]) -> ([41], [42]);
drop<Unit>([42]) -> ();
snapshot_take<Array<felt252>>([41]) -> ([45], [46]);
drop<Array<felt252>>([45]) -> ();
struct_construct<core::array::Span::<core::felt252>>([46]) -> ([47]);
struct_construct<Tuple<core::array::Span::<core::felt252>>>([47]) -> ([48]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 0>([48]) -> ([49]);
store_temp<RangeCheck>([27]) -> ([50]);
store_temp<GasBuiltin>([28]) -> ([51]);
store_temp<System>([29]) -> ([52]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([49]) -> ([53]);
return([50], [51], [52], [53]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([36]) -> ([54]);
store_temp<RangeCheck>([27]) -> ([55]);
store_temp<GasBuiltin>([28]) -> ([56]);
store_temp<System>([29]) -> ([57]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([54]) -> ([58]);
return([55], [56], [57], [58]);
branch_align() -> ();
array_new<felt252>() -> ([59]);
felt252_const<375233589013918064796019>() -> ([60]);
store_temp<felt252>([60]) -> ([60]);
array_append<felt252>([59], [60]) -> ([61]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([61]) -> ([62]);
store_temp<RangeCheck>([22]) -> ([63]);
store_temp<GasBuiltin>([23]) -> ([64]);
store_temp<System>([2]) -> ([65]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([62]) -> ([66]);
return([63], [64], [65], [66]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<Unit>([18]) -> ();
store_temp<System>([2]) -> ([69]);
function_call<user@core::starknet::use_system_implicit>([69]) -> ([67], [68]);
drop<Unit>([68]) -> ();
array_new<felt252>() -> ([70]);
felt252_const<7733229381460288120802334208475838166080759535023995805565484692595>() -> ([71]);
store_temp<felt252>([71]) -> ([71]);
array_append<felt252>([70], [71]) -> ([72]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([72]) -> ([73]);
store_temp<RangeCheck>([4]) -> ([74]);
store_temp<GasBuiltin>([5]) -> ([75]);
store_temp<System>([67]) -> ([76]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([73]) -> ([77]);
return([74], [75], [76], [77]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<core::array::Span::<core::felt252>>([3]) -> ();
array_new<felt252>() -> ([78]);
felt252_const<375233589013918064796019>() -> ([79]);
store_temp<felt252>([79]) -> ([79]);
array_append<felt252>([78], [79]) -> ([80]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([80]) -> ([81]);
store_temp<RangeCheck>([6]) -> ([82]);
store_temp<GasBuiltin>([7]) -> ([83]);
store_temp<System>([2]) -> ([84]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([81]) -> ([85]);
return([82], [83], [84], [85]);
revoke_ap_tracking() -> ();
enable_ap_tracking() -> ();
withdraw_gas([1], [2]) { fallthrough([5], [6]) 535([7], [8]) };
branch_align() -> ();
store_temp<RangeCheck>([5]) -> ([12]);
store_temp<core::array::Span::<core::felt252>>([4]) -> ([13]);
function_call<user@core::starknet::contract_address::ContractAddressSerde::deserialize>([12], [13]) -> ([9], [10], [11]);
enum_match<core::option::Option::<core::starknet::contract_address::ContractAddress>>([11]) { fallthrough([14]) 520([15]) };
branch_align() -> ();
struct_deconstruct<core::array::Span::<core::felt252>>([10]) -> ([16]);
array_len<felt252>([16]) -> ([17]);
u32_const<0>() -> ([18]);
store_temp<u32>([17]) -> ([17]);
u32_eq([17], [18]) { fallthrough() 435() };
branch_align() -> ();
struct_construct<Unit>() -> ([19]);
enum_init<core::bool, 0>([19]) -> ([20]);
store_temp<core::bool>([20]) -> ([21]);
jump() { 439() };
branch_align() -> ();
struct_construct<Unit>() -> ([22]);
enum_init<core::bool, 1>([22]) -> ([23]);
store_temp<core::bool>([23]) -> ([21]);
bool_not_impl([21]) -> ([24]);
store_temp<core::bool>([24]) -> ([24]);
enum_match<core::bool>([24]) { fallthrough([25]) 502([26]) };
branch_align() -> ();
drop<Unit>([25]) -> ();
get_builtin_costs() -> ([27]);
store_temp<BuiltinCosts>([27]) -> ([27]);
withdraw_gas_all([9], [6], [27]) { fallthrough([28], [29]) 488([30], [31]) };
branch_align() -> ();
disable_ap_tracking() -> ();
function_call<user@erc20::erc20::ERC20::unsafe_new_storage>() -> ([32]);
dup<erc20::erc20::ERC20::Storage>([32]) -> ([33], [34]);
drop<erc20::erc20::ERC20::Storage>([33]) -> ();
store_temp<RangeCheck>([28]) -> ([40]);
store_temp<GasBuiltin>([29]) -> ([41]);
store_temp<Pedersen>([0]) -> ([42]);
store_temp<System>([3]) -> ([43]);
store_temp<erc20::erc20::ERC20::Storage>([34]) -> ([44]);
store_temp<ContractAddress>([14]) -> ([45]);
function_call<user@erc20::erc20::ERC20::balance_of>([40], [41], [42], [43], [44], [45]) -> ([35], [36], [37], [38], [39]);
enum_match<core::PanicResult::<(core::integer::u256,)>>([39]) { fallthrough([46]) 480([47]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::integer::u256>>([46]) -> ([48]);
array_new<felt252>() -> ([49]);
dup<core::integer::u256>([48]) -> ([50], [51]);
drop<core::integer::u256>([50]) -> ();
store_temp<core::integer::u256>([51]) -> ([54]);
store_temp<Array<felt252>>([49]) -> ([55]);
function_call<user@core::integer::u256Serde::serialize>([54], [55]) -> ([52], [53]);
drop<Unit>([53]) -> ();
snapshot_take<Array<felt252>>([52]) -> ([56], [57]);
drop<Array<felt252>>([56]) -> ();
struct_construct<core::array::Span::<core::felt252>>([57]) -> ([58]);
struct_construct<Tuple<core::array::Span::<core::felt252>>>([58]) -> ([59]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 0>([59]) -> ([60]);
store_temp<Pedersen>([37]) -> ([61]);
store_temp<RangeCheck>([35]) -> ([62]);
store_temp<GasBuiltin>([36]) -> ([63]);
store_temp<System>([38]) -> ([64]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([60]) -> ([65]);
return([61], [62], [63], [64], [65]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([47]) -> ([66]);
store_temp<Pedersen>([37]) -> ([67]);
store_temp<RangeCheck>([35]) -> ([68]);
store_temp<GasBuiltin>([36]) -> ([69]);
store_temp<System>([38]) -> ([70]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([66]) -> ([71]);
return([67], [68], [69], [70], [71]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<ContractAddress>([14]) -> ();
array_new<felt252>() -> ([72]);
felt252_const<375233589013918064796019>() -> ([73]);
store_temp<felt252>([73]) -> ([73]);
array_append<felt252>([72], [73]) -> ([74]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([74]) -> ([75]);
store_temp<Pedersen>([0]) -> ([76]);
store_temp<RangeCheck>([30]) -> ([77]);
store_temp<GasBuiltin>([31]) -> ([78]);
store_temp<System>([3]) -> ([79]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([75]) -> ([80]);
return([76], [77], [78], [79], [80]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<Unit>([26]) -> ();
drop<ContractAddress>([14]) -> ();
store_temp<System>([3]) -> ([83]);
function_call<user@core::starknet::use_system_implicit>([83]) -> ([81], [82]);
drop<Unit>([82]) -> ();
array_new<felt252>() -> ([84]);
felt252_const<7733229381460288120802334208475838166080759535023995805565484692595>() -> ([85]);
store_temp<felt252>([85]) -> ([85]);
array_append<felt252>([84], [85]) -> ([86]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([86]) -> ([87]);
store_temp<Pedersen>([0]) -> ([88]);
store_temp<RangeCheck>([9]) -> ([89]);
store_temp<GasBuiltin>([6]) -> ([90]);
store_temp<System>([81]) -> ([91]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([87]) -> ([92]);
return([88], [89], [90], [91], [92]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<Unit>([15]) -> ();
drop<core::array::Span::<core::felt252>>([10]) -> ();
array_new<felt252>() -> ([93]);
felt252_const<1979706721653833758925397712865600297316042839304765459608024204080243>() -> ([94]);
store_temp<felt252>([94]) -> ([94]);
array_append<felt252>([93], [94]) -> ([95]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([95]) -> ([96]);
store_temp<Pedersen>([0]) -> ([97]);
store_temp<RangeCheck>([9]) -> ([98]);
store_temp<GasBuiltin>([6]) -> ([99]);
store_temp<System>([3]) -> ([100]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([96]) -> ([101]);
return([97], [98], [99], [100], [101]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<core::array::Span::<core::felt252>>([4]) -> ();
array_new<felt252>() -> ([102]);
felt252_const<375233589013918064796019>() -> ([103]);
store_temp<felt252>([103]) -> ([103]);
array_append<felt252>([102], [103]) -> ([104]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([104]) -> ([105]);
store_temp<Pedersen>([0]) -> ([106]);
store_temp<RangeCheck>([7]) -> ([107]);
store_temp<GasBuiltin>([8]) -> ([108]);
store_temp<System>([3]) -> ([109]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([105]) -> ([110]);
return([106], [107], [108], [109], [110]);
revoke_ap_tracking() -> ();
enable_ap_tracking() -> ();
withdraw_gas([1], [2]) { fallthrough([5], [6]) 692([7], [8]) };
branch_align() -> ();
store_temp<RangeCheck>([5]) -> ([12]);
store_temp<core::array::Span::<core::felt252>>([4]) -> ([13]);
function_call<user@core::starknet::contract_address::ContractAddressSerde::deserialize>([12], [13]) -> ([9], [10], [11]);
enum_match<core::option::Option::<core::starknet::contract_address::ContractAddress>>([11]) { fallthrough([14]) 677([15]) };
branch_align() -> ();
store_temp<RangeCheck>([9]) -> ([19]);
store_temp<core::array::Span::<core::felt252>>([10]) -> ([20]);
function_call<user@core::starknet::contract_address::ContractAddressSerde::deserialize>([19], [20]) -> ([16], [17], [18]);
enum_match<core::option::Option::<core::starknet::contract_address::ContractAddress>>([18]) { fallthrough([21]) 661([22]) };
branch_align() -> ();
struct_deconstruct<core::array::Span::<core::felt252>>([17]) -> ([23]);
array_len<felt252>([23]) -> ([24]);
u32_const<0>() -> ([25]);
store_temp<u32>([24]) -> ([24]);
u32_eq([24], [25]) { fallthrough() 573() };
branch_align() -> ();
struct_construct<Unit>() -> ([26]);
enum_init<core::bool, 0>([26]) -> ([27]);
store_temp<core::bool>([27]) -> ([28]);
jump() { 577() };
branch_align() -> ();
struct_construct<Unit>() -> ([29]);
enum_init<core::bool, 1>([29]) -> ([30]);
store_temp<core::bool>([30]) -> ([28]);
bool_not_impl([28]) -> ([31]);
store_temp<core::bool>([31]) -> ([31]);
enum_match<core::bool>([31]) { fallthrough([32]) 642([33]) };
branch_align() -> ();
drop<Unit>([32]) -> ();
get_builtin_costs() -> ([34]);
store_temp<BuiltinCosts>([34]) -> ([34]);
withdraw_gas_all([16], [6], [34]) { fallthrough([35], [36]) 627([37], [38]) };
branch_align() -> ();
disable_ap_tracking() -> ();
function_call<user@erc20::erc20::ERC20::unsafe_new_storage>() -> ([39]);
dup<erc20::erc20::ERC20::Storage>([39]) -> ([40], [41]);
drop<erc20::erc20::ERC20::Storage>([40]) -> ();
store_temp<RangeCheck>([35]) -> ([47]);
store_temp<GasBuiltin>([36]) -> ([48]);
store_temp<Pedersen>([0]) -> ([49]);
store_temp<System>([3]) -> ([50]);
store_temp<erc20::erc20::ERC20::Storage>([41]) -> ([51]);
store_temp<ContractAddress>([14]) -> ([52]);
store_temp<ContractAddress>([21]) -> ([53]);
function_call<user@erc20::erc20::ERC20::allowance>([47], [48], [49], [50], [51], [52], [53]) -> ([42], [43], [44], [45], [46]);
enum_match<core::PanicResult::<(core::integer::u256,)>>([46]) { fallthrough([54]) 619([55]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::integer::u256>>([54]) -> ([56]);
array_new<felt252>() -> ([57]);
dup<core::integer::u256>([56]) -> ([58], [59]);
drop<core::integer::u256>([58]) -> ();
store_temp<core::integer::u256>([59]) -> ([62]);
store_temp<Array<felt252>>([57]) -> ([63]);
function_call<user@core::integer::u256Serde::serialize>([62], [63]) -> ([60], [61]);
drop<Unit>([61]) -> ();
snapshot_take<Array<felt252>>([60]) -> ([64], [65]);
drop<Array<felt252>>([64]) -> ();
struct_construct<core::array::Span::<core::felt252>>([65]) -> ([66]);
struct_construct<Tuple<core::array::Span::<core::felt252>>>([66]) -> ([67]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 0>([67]) -> ([68]);
store_temp<Pedersen>([44]) -> ([69]);
store_temp<RangeCheck>([42]) -> ([70]);
store_temp<GasBuiltin>([43]) -> ([71]);
store_temp<System>([45]) -> ([72]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([68]) -> ([73]);
return([69], [70], [71], [72], [73]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([55]) -> ([74]);
store_temp<Pedersen>([44]) -> ([75]);
store_temp<RangeCheck>([42]) -> ([76]);
store_temp<GasBuiltin>([43]) -> ([77]);
store_temp<System>([45]) -> ([78]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([74]) -> ([79]);
return([75], [76], [77], [78], [79]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<ContractAddress>([21]) -> ();
drop<ContractAddress>([14]) -> ();
array_new<felt252>() -> ([80]);
felt252_const<375233589013918064796019>() -> ([81]);
store_temp<felt252>([81]) -> ([81]);
array_append<felt252>([80], [81]) -> ([82]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([82]) -> ([83]);
store_temp<Pedersen>([0]) -> ([84]);
store_temp<RangeCheck>([37]) -> ([85]);
store_temp<GasBuiltin>([38]) -> ([86]);
store_temp<System>([3]) -> ([87]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([83]) -> ([88]);
return([84], [85], [86], [87], [88]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<Unit>([33]) -> ();
drop<ContractAddress>([21]) -> ();
drop<ContractAddress>([14]) -> ();
store_temp<System>([3]) -> ([91]);
function_call<user@core::starknet::use_system_implicit>([91]) -> ([89], [90]);
drop<Unit>([90]) -> ();
array_new<felt252>() -> ([92]);
felt252_const<7733229381460288120802334208475838166080759535023995805565484692595>() -> ([93]);
store_temp<felt252>([93]) -> ([93]);
array_append<felt252>([92], [93]) -> ([94]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([94]) -> ([95]);
store_temp<Pedersen>([0]) -> ([96]);
store_temp<RangeCheck>([16]) -> ([97]);
store_temp<GasBuiltin>([6]) -> ([98]);
store_temp<System>([89]) -> ([99]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([95]) -> ([100]);
return([96], [97], [98], [99], [100]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<Unit>([22]) -> ();
drop<core::array::Span::<core::felt252>>([17]) -> ();
drop<ContractAddress>([14]) -> ();
array_new<felt252>() -> ([101]);
felt252_const<1979706721653833758925397712865600297316042839304765459608024204080243>() -> ([102]);
store_temp<felt252>([102]) -> ([102]);
array_append<felt252>([101], [102]) -> ([103]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([103]) -> ([104]);
store_temp<Pedersen>([0]) -> ([105]);
store_temp<RangeCheck>([16]) -> ([106]);
store_temp<GasBuiltin>([6]) -> ([107]);
store_temp<System>([3]) -> ([108]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([104]) -> ([109]);
return([105], [106], [107], [108], [109]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<Unit>([15]) -> ();
drop<core::array::Span::<core::felt252>>([10]) -> ();
array_new<felt252>() -> ([110]);
felt252_const<1979706721653833758925397712865600297316042839304765459608024204080243>() -> ([111]);
store_temp<felt252>([111]) -> ([111]);
array_append<felt252>([110], [111]) -> ([112]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([112]) -> ([113]);
store_temp<Pedersen>([0]) -> ([114]);
store_temp<RangeCheck>([9]) -> ([115]);
store_temp<GasBuiltin>([6]) -> ([116]);
store_temp<System>([3]) -> ([117]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([113]) -> ([118]);
return([114], [115], [116], [117], [118]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<core::array::Span::<core::felt252>>([4]) -> ();
array_new<felt252>() -> ([119]);
felt252_const<375233589013918064796019>() -> ([120]);
store_temp<felt252>([120]) -> ([120]);
array_append<felt252>([119], [120]) -> ([121]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([121]) -> ([122]);
store_temp<Pedersen>([0]) -> ([123]);
store_temp<RangeCheck>([7]) -> ([124]);
store_temp<GasBuiltin>([8]) -> ([125]);
store_temp<System>([3]) -> ([126]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([122]) -> ([127]);
return([123], [124], [125], [126], [127]);
revoke_ap_tracking() -> ();
enable_ap_tracking() -> ();
withdraw_gas([1], [2]) { fallthrough([5], [6]) 841([7], [8]) };
branch_align() -> ();
store_temp<RangeCheck>([5]) -> ([12]);
store_temp<core::array::Span::<core::felt252>>([4]) -> ([13]);
function_call<user@core::starknet::contract_address::ContractAddressSerde::deserialize>([12], [13]) -> ([9], [10], [11]);
enum_match<core::option::Option::<core::starknet::contract_address::ContractAddress>>([11]) { fallthrough([14]) 826([15]) };
branch_align() -> ();
store_temp<RangeCheck>([9]) -> ([19]);
store_temp<core::array::Span::<core::felt252>>([10]) -> ([20]);
function_call<user@core::integer::u256Serde::deserialize>([19], [20]) -> ([16], [17], [18]);
enum_match<core::option::Option::<core::integer::u256>>([18]) { fallthrough([21]) 810([22]) };
branch_align() -> ();
struct_deconstruct<core::array::Span::<core::felt252>>([17]) -> ([23]);
array_len<felt252>([23]) -> ([24]);
u32_const<0>() -> ([25]);
store_temp<u32>([24]) -> ([24]);
u32_eq([24], [25]) { fallthrough() 730() };
branch_align() -> ();
struct_construct<Unit>() -> ([26]);
enum_init<core::bool, 0>([26]) -> ([27]);
store_temp<core::bool>([27]) -> ([28]);
jump() { 734() };
branch_align() -> ();
struct_construct<Unit>() -> ([29]);
enum_init<core::bool, 1>([29]) -> ([30]);
store_temp<core::bool>([30]) -> ([28]);
bool_not_impl([28]) -> ([31]);
store_temp<core::bool>([31]) -> ([31]);
enum_match<core::bool>([31]) { fallthrough([32]) 791([33]) };
branch_align() -> ();
drop<Unit>([32]) -> ();
get_builtin_costs() -> ([34]);
store_temp<BuiltinCosts>([34]) -> ([34]);
withdraw_gas_all([16], [6], [34]) { fallthrough([35], [36]) 776([37], [38]) };
branch_align() -> ();
disable_ap_tracking() -> ();
function_call<user@erc20::erc20::ERC20::unsafe_new_storage>() -> ([39]);
store_temp<RangeCheck>([35]) -> ([45]);
store_temp<GasBuiltin>([36]) -> ([46]);
store_temp<Pedersen>([0]) -> ([47]);
store_temp<System>([3]) -> ([48]);
store_temp<erc20::erc20::ERC20::Storage>([39]) -> ([49]);
store_temp<ContractAddress>([14]) -> ([50]);
store_temp<core::integer::u256>([21]) -> ([51]);
function_call<user@erc20::erc20::ERC20::transfer>([45], [46], [47], [48], [49], [50], [51]) -> ([40], [41], [42], [43], [44]);
enum_match<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([44]) { fallthrough([52]) 768([53]) };
branch_align() -> ();
drop<Tuple<erc20::erc20::ERC20::Storage, Unit>>([52]) -> ();
array_new<felt252>() -> ([54]);
snapshot_take<Array<felt252>>([54]) -> ([55], [56]);
drop<Array<felt252>>([55]) -> ();
struct_construct<core::array::Span::<core::felt252>>([56]) -> ([57]);
struct_construct<Tuple<core::array::Span::<core::felt252>>>([57]) -> ([58]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 0>([58]) -> ([59]);
store_temp<Pedersen>([42]) -> ([60]);
store_temp<RangeCheck>([40]) -> ([61]);
store_temp<GasBuiltin>([41]) -> ([62]);
store_temp<System>([43]) -> ([63]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([59]) -> ([64]);
return([60], [61], [62], [63], [64]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([53]) -> ([65]);
store_temp<Pedersen>([42]) -> ([66]);
store_temp<RangeCheck>([40]) -> ([67]);
store_temp<GasBuiltin>([41]) -> ([68]);
store_temp<System>([43]) -> ([69]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([65]) -> ([70]);
return([66], [67], [68], [69], [70]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<core::integer::u256>([21]) -> ();
drop<ContractAddress>([14]) -> ();
array_new<felt252>() -> ([71]);
felt252_const<375233589013918064796019>() -> ([72]);
store_temp<felt252>([72]) -> ([72]);
array_append<felt252>([71], [72]) -> ([73]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([73]) -> ([74]);
store_temp<Pedersen>([0]) -> ([75]);
store_temp<RangeCheck>([37]) -> ([76]);
store_temp<GasBuiltin>([38]) -> ([77]);
store_temp<System>([3]) -> ([78]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([74]) -> ([79]);
return([75], [76], [77], [78], [79]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<Unit>([33]) -> ();
drop<core::integer::u256>([21]) -> ();
drop<ContractAddress>([14]) -> ();
store_temp<System>([3]) -> ([82]);
function_call<user@core::starknet::use_system_implicit>([82]) -> ([80], [81]);
drop<Unit>([81]) -> ();
array_new<felt252>() -> ([83]);
felt252_const<7733229381460288120802334208475838166080759535023995805565484692595>() -> ([84]);
store_temp<felt252>([84]) -> ([84]);
array_append<felt252>([83], [84]) -> ([85]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([85]) -> ([86]);
store_temp<Pedersen>([0]) -> ([87]);
store_temp<RangeCheck>([16]) -> ([88]);
store_temp<GasBuiltin>([6]) -> ([89]);
store_temp<System>([80]) -> ([90]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([86]) -> ([91]);
return([87], [88], [89], [90], [91]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<Unit>([22]) -> ();
drop<core::array::Span::<core::felt252>>([17]) -> ();
drop<ContractAddress>([14]) -> ();
array_new<felt252>() -> ([92]);
felt252_const<1979706721653833758925397712865600297316042839304765459608024204080243>() -> ([93]);
store_temp<felt252>([93]) -> ([93]);
array_append<felt252>([92], [93]) -> ([94]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([94]) -> ([95]);
store_temp<Pedersen>([0]) -> ([96]);
store_temp<RangeCheck>([16]) -> ([97]);
store_temp<GasBuiltin>([6]) -> ([98]);
store_temp<System>([3]) -> ([99]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([95]) -> ([100]);
return([96], [97], [98], [99], [100]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<Unit>([15]) -> ();
drop<core::array::Span::<core::felt252>>([10]) -> ();
array_new<felt252>() -> ([101]);
felt252_const<1979706721653833758925397712865600297316042839304765459608024204080243>() -> ([102]);
store_temp<felt252>([102]) -> ([102]);
array_append<felt252>([101], [102]) -> ([103]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([103]) -> ([104]);
store_temp<Pedersen>([0]) -> ([105]);
store_temp<RangeCheck>([9]) -> ([106]);
store_temp<GasBuiltin>([6]) -> ([107]);
store_temp<System>([3]) -> ([108]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([104]) -> ([109]);
return([105], [106], [107], [108], [109]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<core::array::Span::<core::felt252>>([4]) -> ();
array_new<felt252>() -> ([110]);
felt252_const<375233589013918064796019>() -> ([111]);
store_temp<felt252>([111]) -> ([111]);
array_append<felt252>([110], [111]) -> ([112]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([112]) -> ([113]);
store_temp<Pedersen>([0]) -> ([114]);
store_temp<RangeCheck>([7]) -> ([115]);
store_temp<GasBuiltin>([8]) -> ([116]);
store_temp<System>([3]) -> ([117]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([113]) -> ([118]);
return([114], [115], [116], [117], [118]);
revoke_ap_tracking() -> ();
enable_ap_tracking() -> ();
withdraw_gas([1], [2]) { fallthrough([5], [6]) 1015([7], [8]) };
branch_align() -> ();
store_temp<RangeCheck>([5]) -> ([12]);
store_temp<core::array::Span::<core::felt252>>([4]) -> ([13]);
function_call<user@core::starknet::contract_address::ContractAddressSerde::deserialize>([12], [13]) -> ([9], [10], [11]);
enum_match<core::option::Option::<core::starknet::contract_address::ContractAddress>>([11]) { fallthrough([14]) 1000([15]) };
branch_align() -> ();
store_temp<RangeCheck>([9]) -> ([19]);
store_temp<core::array::Span::<core::felt252>>([10]) -> ([20]);
function_call<user@core::starknet::contract_address::ContractAddressSerde::deserialize>([19], [20]) -> ([16], [17], [18]);
enum_match<core::option::Option::<core::starknet::contract_address::ContractAddress>>([18]) { fallthrough([21]) 984([22]) };
branch_align() -> ();
store_temp<RangeCheck>([16]) -> ([26]);
store_temp<core::array::Span::<core::felt252>>([17]) -> ([27]);
function_call<user@core::integer::u256Serde::deserialize>([26], [27]) -> ([23], [24], [25]);
enum_match<core::option::Option::<core::integer::u256>>([25]) { fallthrough([28]) 967([29]) };
branch_align() -> ();
struct_deconstruct<core::array::Span::<core::felt252>>([24]) -> ([30]);
array_len<felt252>([30]) -> ([31]);
u32_const<0>() -> ([32]);
store_temp<u32>([31]) -> ([31]);
u32_eq([31], [32]) { fallthrough() 884() };
branch_align() -> ();
struct_construct<Unit>() -> ([33]);
enum_init<core::bool, 0>([33]) -> ([34]);
store_temp<core::bool>([34]) -> ([35]);
jump() { 888() };
branch_align() -> ();
struct_construct<Unit>() -> ([36]);
enum_init<core::bool, 1>([36]) -> ([37]);
store_temp<core::bool>([37]) -> ([35]);
bool_not_impl([35]) -> ([38]);
store_temp<core::bool>([38]) -> ([38]);
enum_match<core::bool>([38]) { fallthrough([39]) 947([40]) };
branch_align() -> ();
drop<Unit>([39]) -> ();
get_builtin_costs() -> ([41]);
store_temp<BuiltinCosts>([41]) -> ([41]);
withdraw_gas_all([23], [6], [41]) { fallthrough([42], [43]) 931([44], [45]) };
branch_align() -> ();
disable_ap_tracking() -> ();
function_call<user@erc20::erc20::ERC20::unsafe_new_storage>() -> ([46]);
store_temp<RangeCheck>([42]) -> ([52]);
store_temp<GasBuiltin>([43]) -> ([53]);
store_temp<Pedersen>([0]) -> ([54]);
store_temp<System>([3]) -> ([55]);
store_temp<erc20::erc20::ERC20::Storage>([46]) -> ([56]);
store_temp<ContractAddress>([14]) -> ([57]);
store_temp<ContractAddress>([21]) -> ([58]);
store_temp<core::integer::u256>([28]) -> ([59]);
function_call<user@erc20::erc20::ERC20::transfer_from>([52], [53], [54], [55], [56], [57], [58], [59]) -> ([47], [48], [49], [50], [51]);
enum_match<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([51]) { fallthrough([60]) 923([61]) };
branch_align() -> ();
drop<Tuple<erc20::erc20::ERC20::Storage, Unit>>([60]) -> ();
array_new<felt252>() -> ([62]);
snapshot_take<Array<felt252>>([62]) -> ([63], [64]);
drop<Array<felt252>>([63]) -> ();
struct_construct<core::array::Span::<core::felt252>>([64]) -> ([65]);
struct_construct<Tuple<core::array::Span::<core::felt252>>>([65]) -> ([66]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 0>([66]) -> ([67]);
store_temp<Pedersen>([49]) -> ([68]);
store_temp<RangeCheck>([47]) -> ([69]);
store_temp<GasBuiltin>([48]) -> ([70]);
store_temp<System>([50]) -> ([71]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([67]) -> ([72]);
return([68], [69], [70], [71], [72]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([61]) -> ([73]);
store_temp<Pedersen>([49]) -> ([74]);
store_temp<RangeCheck>([47]) -> ([75]);
store_temp<GasBuiltin>([48]) -> ([76]);
store_temp<System>([50]) -> ([77]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([73]) -> ([78]);
return([74], [75], [76], [77], [78]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<core::integer::u256>([28]) -> ();
drop<ContractAddress>([21]) -> ();
drop<ContractAddress>([14]) -> ();
array_new<felt252>() -> ([79]);
felt252_const<375233589013918064796019>() -> ([80]);
store_temp<felt252>([80]) -> ([80]);
array_append<felt252>([79], [80]) -> ([81]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([81]) -> ([82]);
store_temp<Pedersen>([0]) -> ([83]);
store_temp<RangeCheck>([44]) -> ([84]);
store_temp<GasBuiltin>([45]) -> ([85]);
store_temp<System>([3]) -> ([86]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([82]) -> ([87]);
return([83], [84], [85], [86], [87]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<Unit>([40]) -> ();
drop<core::integer::u256>([28]) -> ();
drop<ContractAddress>([21]) -> ();
drop<ContractAddress>([14]) -> ();
store_temp<System>([3]) -> ([90]);
function_call<user@core::starknet::use_system_implicit>([90]) -> ([88], [89]);
drop<Unit>([89]) -> ();
array_new<felt252>() -> ([91]);
felt252_const<7733229381460288120802334208475838166080759535023995805565484692595>() -> ([92]);
store_temp<felt252>([92]) -> ([92]);
array_append<felt252>([91], [92]) -> ([93]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([93]) -> ([94]);
store_temp<Pedersen>([0]) -> ([95]);
store_temp<RangeCheck>([23]) -> ([96]);
store_temp<GasBuiltin>([6]) -> ([97]);
store_temp<System>([88]) -> ([98]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([94]) -> ([99]);
return([95], [96], [97], [98], [99]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<Unit>([29]) -> ();
drop<core::array::Span::<core::felt252>>([24]) -> ();
drop<ContractAddress>([21]) -> ();
drop<ContractAddress>([14]) -> ();
array_new<felt252>() -> ([100]);
felt252_const<1979706721653833758925397712865600297316042839304765459608024204080243>() -> ([101]);
store_temp<felt252>([101]) -> ([101]);
array_append<felt252>([100], [101]) -> ([102]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([102]) -> ([103]);
store_temp<Pedersen>([0]) -> ([104]);
store_temp<RangeCheck>([23]) -> ([105]);
store_temp<GasBuiltin>([6]) -> ([106]);
store_temp<System>([3]) -> ([107]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([103]) -> ([108]);
return([104], [105], [106], [107], [108]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<Unit>([22]) -> ();
drop<ContractAddress>([14]) -> ();
drop<core::array::Span::<core::felt252>>([17]) -> ();
array_new<felt252>() -> ([109]);
felt252_const<1979706721653833758925397712865600297316042839304765459608024204080243>() -> ([110]);
store_temp<felt252>([110]) -> ([110]);
array_append<felt252>([109], [110]) -> ([111]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([111]) -> ([112]);
store_temp<Pedersen>([0]) -> ([113]);
store_temp<RangeCheck>([16]) -> ([114]);
store_temp<GasBuiltin>([6]) -> ([115]);
store_temp<System>([3]) -> ([116]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([112]) -> ([117]);
return([113], [114], [115], [116], [117]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<Unit>([15]) -> ();
drop<core::array::Span::<core::felt252>>([10]) -> ();
array_new<felt252>() -> ([118]);
felt252_const<1979706721653833758925397712865600297316042839304765459608024204080243>() -> ([119]);
store_temp<felt252>([119]) -> ([119]);
array_append<felt252>([118], [119]) -> ([120]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([120]) -> ([121]);
store_temp<Pedersen>([0]) -> ([122]);
store_temp<RangeCheck>([9]) -> ([123]);
store_temp<GasBuiltin>([6]) -> ([124]);
store_temp<System>([3]) -> ([125]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([121]) -> ([126]);
return([122], [123], [124], [125], [126]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<core::array::Span::<core::felt252>>([4]) -> ();
array_new<felt252>() -> ([127]);
felt252_const<375233589013918064796019>() -> ([128]);
store_temp<felt252>([128]) -> ([128]);
array_append<felt252>([127], [128]) -> ([129]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([129]) -> ([130]);
store_temp<Pedersen>([0]) -> ([131]);
store_temp<RangeCheck>([7]) -> ([132]);
store_temp<GasBuiltin>([8]) -> ([133]);
store_temp<System>([3]) -> ([134]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([130]) -> ([135]);
return([131], [132], [133], [134], [135]);
revoke_ap_tracking() -> ();
enable_ap_tracking() -> ();
withdraw_gas([1], [2]) { fallthrough([5], [6]) 1164([7], [8]) };
branch_align() -> ();
store_temp<RangeCheck>([5]) -> ([12]);
store_temp<core::array::Span::<core::felt252>>([4]) -> ([13]);
function_call<user@core::starknet::contract_address::ContractAddressSerde::deserialize>([12], [13]) -> ([9], [10], [11]);
enum_match<core::option::Option::<core::starknet::contract_address::ContractAddress>>([11]) { fallthrough([14]) 1149([15]) };
branch_align() -> ();
store_temp<RangeCheck>([9]) -> ([19]);
store_temp<core::array::Span::<core::felt252>>([10]) -> ([20]);
function_call<user@core::integer::u256Serde::deserialize>([19], [20]) -> ([16], [17], [18]);
enum_match<core::option::Option::<core::integer::u256>>([18]) { fallthrough([21]) 1133([22]) };
branch_align() -> ();
struct_deconstruct<core::array::Span::<core::felt252>>([17]) -> ([23]);
array_len<felt252>([23]) -> ([24]);
u32_const<0>() -> ([25]);
store_temp<u32>([24]) -> ([24]);
u32_eq([24], [25]) { fallthrough() 1053() };
branch_align() -> ();
struct_construct<Unit>() -> ([26]);
enum_init<core::bool, 0>([26]) -> ([27]);
store_temp<core::bool>([27]) -> ([28]);
jump() { 1057() };
branch_align() -> ();
struct_construct<Unit>() -> ([29]);
enum_init<core::bool, 1>([29]) -> ([30]);
store_temp<core::bool>([30]) -> ([28]);
bool_not_impl([28]) -> ([31]);
store_temp<core::bool>([31]) -> ([31]);
enum_match<core::bool>([31]) { fallthrough([32]) 1114([33]) };
branch_align() -> ();
drop<Unit>([32]) -> ();
get_builtin_costs() -> ([34]);
store_temp<BuiltinCosts>([34]) -> ([34]);
withdraw_gas_all([16], [6], [34]) { fallthrough([35], [36]) 1099([37], [38]) };
branch_align() -> ();
disable_ap_tracking() -> ();
function_call<user@erc20::erc20::ERC20::unsafe_new_storage>() -> ([39]);
store_temp<RangeCheck>([35]) -> ([45]);
store_temp<GasBuiltin>([36]) -> ([46]);
store_temp<Pedersen>([0]) -> ([47]);
store_temp<System>([3]) -> ([48]);
store_temp<erc20::erc20::ERC20::Storage>([39]) -> ([49]);
store_temp<ContractAddress>([14]) -> ([50]);
store_temp<core::integer::u256>([21]) -> ([51]);
function_call<user@erc20::erc20::ERC20::approve>([45], [46], [47], [48], [49], [50], [51]) -> ([40], [41], [42], [43], [44]);
enum_match<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([44]) { fallthrough([52]) 1091([53]) };
branch_align() -> ();
drop<Tuple<erc20::erc20::ERC20::Storage, Unit>>([52]) -> ();
array_new<felt252>() -> ([54]);
snapshot_take<Array<felt252>>([54]) -> ([55], [56]);
drop<Array<felt252>>([55]) -> ();
struct_construct<core::array::Span::<core::felt252>>([56]) -> ([57]);
struct_construct<Tuple<core::array::Span::<core::felt252>>>([57]) -> ([58]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 0>([58]) -> ([59]);
store_temp<Pedersen>([42]) -> ([60]);
store_temp<RangeCheck>([40]) -> ([61]);
store_temp<GasBuiltin>([41]) -> ([62]);
store_temp<System>([43]) -> ([63]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([59]) -> ([64]);
return([60], [61], [62], [63], [64]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([53]) -> ([65]);
store_temp<Pedersen>([42]) -> ([66]);
store_temp<RangeCheck>([40]) -> ([67]);
store_temp<GasBuiltin>([41]) -> ([68]);
store_temp<System>([43]) -> ([69]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([65]) -> ([70]);
return([66], [67], [68], [69], [70]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<core::integer::u256>([21]) -> ();
drop<ContractAddress>([14]) -> ();
array_new<felt252>() -> ([71]);
felt252_const<375233589013918064796019>() -> ([72]);
store_temp<felt252>([72]) -> ([72]);
array_append<felt252>([71], [72]) -> ([73]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([73]) -> ([74]);
store_temp<Pedersen>([0]) -> ([75]);
store_temp<RangeCheck>([37]) -> ([76]);
store_temp<GasBuiltin>([38]) -> ([77]);
store_temp<System>([3]) -> ([78]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([74]) -> ([79]);
return([75], [76], [77], [78], [79]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<Unit>([33]) -> ();
drop<core::integer::u256>([21]) -> ();
drop<ContractAddress>([14]) -> ();
store_temp<System>([3]) -> ([82]);
function_call<user@core::starknet::use_system_implicit>([82]) -> ([80], [81]);
drop<Unit>([81]) -> ();
array_new<felt252>() -> ([83]);
felt252_const<7733229381460288120802334208475838166080759535023995805565484692595>() -> ([84]);
store_temp<felt252>([84]) -> ([84]);
array_append<felt252>([83], [84]) -> ([85]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([85]) -> ([86]);
store_temp<Pedersen>([0]) -> ([87]);
store_temp<RangeCheck>([16]) -> ([88]);
store_temp<GasBuiltin>([6]) -> ([89]);
store_temp<System>([80]) -> ([90]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([86]) -> ([91]);
return([87], [88], [89], [90], [91]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<Unit>([22]) -> ();
drop<core::array::Span::<core::felt252>>([17]) -> ();
drop<ContractAddress>([14]) -> ();
array_new<felt252>() -> ([92]);
felt252_const<1979706721653833758925397712865600297316042839304765459608024204080243>() -> ([93]);
store_temp<felt252>([93]) -> ([93]);
array_append<felt252>([92], [93]) -> ([94]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([94]) -> ([95]);
store_temp<Pedersen>([0]) -> ([96]);
store_temp<RangeCheck>([16]) -> ([97]);
store_temp<GasBuiltin>([6]) -> ([98]);
store_temp<System>([3]) -> ([99]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([95]) -> ([100]);
return([96], [97], [98], [99], [100]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<Unit>([15]) -> ();
drop<core::array::Span::<core::felt252>>([10]) -> ();
array_new<felt252>() -> ([101]);
felt252_const<1979706721653833758925397712865600297316042839304765459608024204080243>() -> ([102]);
store_temp<felt252>([102]) -> ([102]);
array_append<felt252>([101], [102]) -> ([103]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([103]) -> ([104]);
store_temp<Pedersen>([0]) -> ([105]);
store_temp<RangeCheck>([9]) -> ([106]);
store_temp<GasBuiltin>([6]) -> ([107]);
store_temp<System>([3]) -> ([108]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([104]) -> ([109]);
return([105], [106], [107], [108], [109]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<core::array::Span::<core::felt252>>([4]) -> ();
array_new<felt252>() -> ([110]);
felt252_const<375233589013918064796019>() -> ([111]);
store_temp<felt252>([111]) -> ([111]);
array_append<felt252>([110], [111]) -> ([112]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([112]) -> ([113]);
store_temp<Pedersen>([0]) -> ([114]);
store_temp<RangeCheck>([7]) -> ([115]);
store_temp<GasBuiltin>([8]) -> ([116]);
store_temp<System>([3]) -> ([117]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([113]) -> ([118]);
return([114], [115], [116], [117], [118]);
revoke_ap_tracking() -> ();
enable_ap_tracking() -> ();
withdraw_gas([1], [2]) { fallthrough([5], [6]) 1313([7], [8]) };
branch_align() -> ();
store_temp<RangeCheck>([5]) -> ([12]);
store_temp<core::array::Span::<core::felt252>>([4]) -> ([13]);
function_call<user@core::starknet::contract_address::ContractAddressSerde::deserialize>([12], [13]) -> ([9], [10], [11]);
enum_match<core::option::Option::<core::starknet::contract_address::ContractAddress>>([11]) { fallthrough([14]) 1298([15]) };
branch_align() -> ();
store_temp<RangeCheck>([9]) -> ([19]);
store_temp<core::array::Span::<core::felt252>>([10]) -> ([20]);
function_call<user@core::integer::u256Serde::deserialize>([19], [20]) -> ([16], [17], [18]);
enum_match<core::option::Option::<core::integer::u256>>([18]) { fallthrough([21]) 1282([22]) };
branch_align() -> ();
struct_deconstruct<core::array::Span::<core::felt252>>([17]) -> ([23]);
array_len<felt252>([23]) -> ([24]);
u32_const<0>() -> ([25]);
store_temp<u32>([24]) -> ([24]);
u32_eq([24], [25]) { fallthrough() 1202() };
branch_align() -> ();
struct_construct<Unit>() -> ([26]);
enum_init<core::bool, 0>([26]) -> ([27]);
store_temp<core::bool>([27]) -> ([28]);
jump() { 1206() };
branch_align() -> ();
struct_construct<Unit>() -> ([29]);
enum_init<core::bool, 1>([29]) -> ([30]);
store_temp<core::bool>([30]) -> ([28]);
bool_not_impl([28]) -> ([31]);
store_temp<core::bool>([31]) -> ([31]);
enum_match<core::bool>([31]) { fallthrough([32]) 1263([33]) };
branch_align() -> ();
drop<Unit>([32]) -> ();
get_builtin_costs() -> ([34]);
store_temp<BuiltinCosts>([34]) -> ([34]);
withdraw_gas_all([16], [6], [34]) { fallthrough([35], [36]) 1248([37], [38]) };
branch_align() -> ();
disable_ap_tracking() -> ();
function_call<user@erc20::erc20::ERC20::unsafe_new_storage>() -> ([39]);
store_temp<RangeCheck>([35]) -> ([45]);
store_temp<GasBuiltin>([36]) -> ([46]);
store_temp<Pedersen>([0]) -> ([47]);
store_temp<System>([3]) -> ([48]);
store_temp<erc20::erc20::ERC20::Storage>([39]) -> ([49]);
store_temp<ContractAddress>([14]) -> ([50]);
store_temp<core::integer::u256>([21]) -> ([51]);
function_call<user@erc20::erc20::ERC20::increase_allowance>([45], [46], [47], [48], [49], [50], [51]) -> ([40], [41], [42], [43], [44]);
enum_match<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([44]) { fallthrough([52]) 1240([53]) };
branch_align() -> ();
drop<Tuple<erc20::erc20::ERC20::Storage, Unit>>([52]) -> ();
array_new<felt252>() -> ([54]);
snapshot_take<Array<felt252>>([54]) -> ([55], [56]);
drop<Array<felt252>>([55]) -> ();
struct_construct<core::array::Span::<core::felt252>>([56]) -> ([57]);
struct_construct<Tuple<core::array::Span::<core::felt252>>>([57]) -> ([58]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 0>([58]) -> ([59]);
store_temp<Pedersen>([42]) -> ([60]);
store_temp<RangeCheck>([40]) -> ([61]);
store_temp<GasBuiltin>([41]) -> ([62]);
store_temp<System>([43]) -> ([63]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([59]) -> ([64]);
return([60], [61], [62], [63], [64]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([53]) -> ([65]);
store_temp<Pedersen>([42]) -> ([66]);
store_temp<RangeCheck>([40]) -> ([67]);
store_temp<GasBuiltin>([41]) -> ([68]);
store_temp<System>([43]) -> ([69]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([65]) -> ([70]);
return([66], [67], [68], [69], [70]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<core::integer::u256>([21]) -> ();
drop<ContractAddress>([14]) -> ();
array_new<felt252>() -> ([71]);
felt252_const<375233589013918064796019>() -> ([72]);
store_temp<felt252>([72]) -> ([72]);
array_append<felt252>([71], [72]) -> ([73]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([73]) -> ([74]);
store_temp<Pedersen>([0]) -> ([75]);
store_temp<RangeCheck>([37]) -> ([76]);
store_temp<GasBuiltin>([38]) -> ([77]);
store_temp<System>([3]) -> ([78]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([74]) -> ([79]);
return([75], [76], [77], [78], [79]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<Unit>([33]) -> ();
drop<core::integer::u256>([21]) -> ();
drop<ContractAddress>([14]) -> ();
store_temp<System>([3]) -> ([82]);
function_call<user@core::starknet::use_system_implicit>([82]) -> ([80], [81]);
drop<Unit>([81]) -> ();
array_new<felt252>() -> ([83]);
felt252_const<7733229381460288120802334208475838166080759535023995805565484692595>() -> ([84]);
store_temp<felt252>([84]) -> ([84]);
array_append<felt252>([83], [84]) -> ([85]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([85]) -> ([86]);
store_temp<Pedersen>([0]) -> ([87]);
store_temp<RangeCheck>([16]) -> ([88]);
store_temp<GasBuiltin>([6]) -> ([89]);
store_temp<System>([80]) -> ([90]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([86]) -> ([91]);
return([87], [88], [89], [90], [91]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<Unit>([22]) -> ();
drop<core::array::Span::<core::felt252>>([17]) -> ();
drop<ContractAddress>([14]) -> ();
array_new<felt252>() -> ([92]);
felt252_const<1979706721653833758925397712865600297316042839304765459608024204080243>() -> ([93]);
store_temp<felt252>([93]) -> ([93]);
array_append<felt252>([92], [93]) -> ([94]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([94]) -> ([95]);
store_temp<Pedersen>([0]) -> ([96]);
store_temp<RangeCheck>([16]) -> ([97]);
store_temp<GasBuiltin>([6]) -> ([98]);
store_temp<System>([3]) -> ([99]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([95]) -> ([100]);
return([96], [97], [98], [99], [100]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<Unit>([15]) -> ();
drop<core::array::Span::<core::felt252>>([10]) -> ();
array_new<felt252>() -> ([101]);
felt252_const<1979706721653833758925397712865600297316042839304765459608024204080243>() -> ([102]);
store_temp<felt252>([102]) -> ([102]);
array_append<felt252>([101], [102]) -> ([103]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([103]) -> ([104]);
store_temp<Pedersen>([0]) -> ([105]);
store_temp<RangeCheck>([9]) -> ([106]);
store_temp<GasBuiltin>([6]) -> ([107]);
store_temp<System>([3]) -> ([108]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([104]) -> ([109]);
return([105], [106], [107], [108], [109]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<core::array::Span::<core::felt252>>([4]) -> ();
array_new<felt252>() -> ([110]);
felt252_const<375233589013918064796019>() -> ([111]);
store_temp<felt252>([111]) -> ([111]);
array_append<felt252>([110], [111]) -> ([112]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([112]) -> ([113]);
store_temp<Pedersen>([0]) -> ([114]);
store_temp<RangeCheck>([7]) -> ([115]);
store_temp<GasBuiltin>([8]) -> ([116]);
store_temp<System>([3]) -> ([117]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([113]) -> ([118]);
return([114], [115], [116], [117], [118]);
revoke_ap_tracking() -> ();
enable_ap_tracking() -> ();
withdraw_gas([1], [2]) { fallthrough([5], [6]) 1462([7], [8]) };
branch_align() -> ();
store_temp<RangeCheck>([5]) -> ([12]);
store_temp<core::array::Span::<core::felt252>>([4]) -> ([13]);
function_call<user@core::starknet::contract_address::ContractAddressSerde::deserialize>([12], [13]) -> ([9], [10], [11]);
enum_match<core::option::Option::<core::starknet::contract_address::ContractAddress>>([11]) { fallthrough([14]) 1447([15]) };
branch_align() -> ();
store_temp<RangeCheck>([9]) -> ([19]);
store_temp<core::array::Span::<core::felt252>>([10]) -> ([20]);
function_call<user@core::integer::u256Serde::deserialize>([19], [20]) -> ([16], [17], [18]);
enum_match<core::option::Option::<core::integer::u256>>([18]) { fallthrough([21]) 1431([22]) };
branch_align() -> ();
struct_deconstruct<core::array::Span::<core::felt252>>([17]) -> ([23]);
array_len<felt252>([23]) -> ([24]);
u32_const<0>() -> ([25]);
store_temp<u32>([24]) -> ([24]);
u32_eq([24], [25]) { fallthrough() 1351() };
branch_align() -> ();
struct_construct<Unit>() -> ([26]);
enum_init<core::bool, 0>([26]) -> ([27]);
store_temp<core::bool>([27]) -> ([28]);
jump() { 1355() };
branch_align() -> ();
struct_construct<Unit>() -> ([29]);
enum_init<core::bool, 1>([29]) -> ([30]);
store_temp<core::bool>([30]) -> ([28]);
bool_not_impl([28]) -> ([31]);
store_temp<core::bool>([31]) -> ([31]);
enum_match<core::bool>([31]) { fallthrough([32]) 1412([33]) };
branch_align() -> ();
drop<Unit>([32]) -> ();
get_builtin_costs() -> ([34]);
store_temp<BuiltinCosts>([34]) -> ([34]);
withdraw_gas_all([16], [6], [34]) { fallthrough([35], [36]) 1397([37], [38]) };
branch_align() -> ();
disable_ap_tracking() -> ();
function_call<user@erc20::erc20::ERC20::unsafe_new_storage>() -> ([39]);
store_temp<RangeCheck>([35]) -> ([45]);
store_temp<GasBuiltin>([36]) -> ([46]);
store_temp<Pedersen>([0]) -> ([47]);
store_temp<System>([3]) -> ([48]);
store_temp<erc20::erc20::ERC20::Storage>([39]) -> ([49]);
store_temp<ContractAddress>([14]) -> ([50]);
store_temp<core::integer::u256>([21]) -> ([51]);
function_call<user@erc20::erc20::ERC20::decrease_allowance>([45], [46], [47], [48], [49], [50], [51]) -> ([40], [41], [42], [43], [44]);
enum_match<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([44]) { fallthrough([52]) 1389([53]) };
branch_align() -> ();
drop<Tuple<erc20::erc20::ERC20::Storage, Unit>>([52]) -> ();
array_new<felt252>() -> ([54]);
snapshot_take<Array<felt252>>([54]) -> ([55], [56]);
drop<Array<felt252>>([55]) -> ();
struct_construct<core::array::Span::<core::felt252>>([56]) -> ([57]);
struct_construct<Tuple<core::array::Span::<core::felt252>>>([57]) -> ([58]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 0>([58]) -> ([59]);
store_temp<Pedersen>([42]) -> ([60]);
store_temp<RangeCheck>([40]) -> ([61]);
store_temp<GasBuiltin>([41]) -> ([62]);
store_temp<System>([43]) -> ([63]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([59]) -> ([64]);
return([60], [61], [62], [63], [64]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([53]) -> ([65]);
store_temp<Pedersen>([42]) -> ([66]);
store_temp<RangeCheck>([40]) -> ([67]);
store_temp<GasBuiltin>([41]) -> ([68]);
store_temp<System>([43]) -> ([69]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([65]) -> ([70]);
return([66], [67], [68], [69], [70]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<core::integer::u256>([21]) -> ();
drop<ContractAddress>([14]) -> ();
array_new<felt252>() -> ([71]);
felt252_const<375233589013918064796019>() -> ([72]);
store_temp<felt252>([72]) -> ([72]);
array_append<felt252>([71], [72]) -> ([73]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([73]) -> ([74]);
store_temp<Pedersen>([0]) -> ([75]);
store_temp<RangeCheck>([37]) -> ([76]);
store_temp<GasBuiltin>([38]) -> ([77]);
store_temp<System>([3]) -> ([78]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([74]) -> ([79]);
return([75], [76], [77], [78], [79]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<Unit>([33]) -> ();
drop<core::integer::u256>([21]) -> ();
drop<ContractAddress>([14]) -> ();
store_temp<System>([3]) -> ([82]);
function_call<user@core::starknet::use_system_implicit>([82]) -> ([80], [81]);
drop<Unit>([81]) -> ();
array_new<felt252>() -> ([83]);
felt252_const<7733229381460288120802334208475838166080759535023995805565484692595>() -> ([84]);
store_temp<felt252>([84]) -> ([84]);
array_append<felt252>([83], [84]) -> ([85]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([85]) -> ([86]);
store_temp<Pedersen>([0]) -> ([87]);
store_temp<RangeCheck>([16]) -> ([88]);
store_temp<GasBuiltin>([6]) -> ([89]);
store_temp<System>([80]) -> ([90]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([86]) -> ([91]);
return([87], [88], [89], [90], [91]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<Unit>([22]) -> ();
drop<core::array::Span::<core::felt252>>([17]) -> ();
drop<ContractAddress>([14]) -> ();
array_new<felt252>() -> ([92]);
felt252_const<1979706721653833758925397712865600297316042839304765459608024204080243>() -> ([93]);
store_temp<felt252>([93]) -> ([93]);
array_append<felt252>([92], [93]) -> ([94]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([94]) -> ([95]);
store_temp<Pedersen>([0]) -> ([96]);
store_temp<RangeCheck>([16]) -> ([97]);
store_temp<GasBuiltin>([6]) -> ([98]);
store_temp<System>([3]) -> ([99]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([95]) -> ([100]);
return([96], [97], [98], [99], [100]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<Unit>([15]) -> ();
drop<core::array::Span::<core::felt252>>([10]) -> ();
array_new<felt252>() -> ([101]);
felt252_const<1979706721653833758925397712865600297316042839304765459608024204080243>() -> ([102]);
store_temp<felt252>([102]) -> ([102]);
array_append<felt252>([101], [102]) -> ([103]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([103]) -> ([104]);
store_temp<Pedersen>([0]) -> ([105]);
store_temp<RangeCheck>([9]) -> ([106]);
store_temp<GasBuiltin>([6]) -> ([107]);
store_temp<System>([3]) -> ([108]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([104]) -> ([109]);
return([105], [106], [107], [108], [109]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<core::array::Span::<core::felt252>>([4]) -> ();
array_new<felt252>() -> ([110]);
felt252_const<375233589013918064796019>() -> ([111]);
store_temp<felt252>([111]) -> ([111]);
array_append<felt252>([110], [111]) -> ([112]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([112]) -> ([113]);
store_temp<Pedersen>([0]) -> ([114]);
store_temp<RangeCheck>([7]) -> ([115]);
store_temp<GasBuiltin>([8]) -> ([116]);
store_temp<System>([3]) -> ([117]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([113]) -> ([118]);
return([114], [115], [116], [117], [118]);
revoke_ap_tracking() -> ();
enable_ap_tracking() -> ();
withdraw_gas([1], [2]) { fallthrough([5], [6]) 1688([7], [8]) };
branch_align() -> ();
store_temp<core::array::Span::<core::felt252>>([4]) -> ([11]);
function_call<user@core::serde::Felt252Serde::deserialize>([11]) -> ([9], [10]);
store_temp<RangeCheck>([5]) -> ([5]);
enum_match<core::option::Option::<core::felt252>>([10]) { fallthrough([12]) 1673([13]) };
branch_align() -> ();
store_temp<core::array::Span::<core::felt252>>([9]) -> ([16]);
function_call<user@core::serde::Felt252Serde::deserialize>([16]) -> ([14], [15]);
enum_match<core::option::Option::<core::felt252>>([15]) { fallthrough([17]) 1657([18]) };
branch_align() -> ();
store_temp<RangeCheck>([5]) -> ([22]);
store_temp<core::array::Span::<core::felt252>>([14]) -> ([23]);
function_call<user@core::serde::U8Serde::deserialize>([22], [23]) -> ([19], [20], [21]);
enum_match<core::option::Option::<core::integer::u8>>([21]) { fallthrough([24]) 1640([25]) };
branch_align() -> ();
store_temp<RangeCheck>([19]) -> ([29]);
store_temp<core::array::Span::<core::felt252>>([20]) -> ([30]);
function_call<user@core::integer::u256Serde::deserialize>([29], [30]) -> ([26], [27], [28]);
enum_match<core::option::Option::<core::integer::u256>>([28]) { fallthrough([31]) 1622([32]) };
branch_align() -> ();
store_temp<RangeCheck>([26]) -> ([36]);
store_temp<core::array::Span::<core::felt252>>([27]) -> ([37]);
function_call<user@core::starknet::contract_address::ContractAddressSerde::deserialize>([36], [37]) -> ([33], [34], [35]);
enum_match<core::option::Option::<core::starknet::contract_address::ContractAddress>>([35]) { fallthrough([38]) 1603([39]) };
branch_align() -> ();
struct_deconstruct<core::array::Span::<core::felt252>>([34]) -> ([40]);
array_len<felt252>([40]) -> ([41]);
u32_const<0>() -> ([42]);
store_temp<u32>([41]) -> ([41]);
u32_eq([41], [42]) { fallthrough() 1514() };
branch_align() -> ();
struct_construct<Unit>() -> ([43]);
enum_init<core::bool, 0>([43]) -> ([44]);
store_temp<core::bool>([44]) -> ([45]);
jump() { 1518() };
branch_align() -> ();
struct_construct<Unit>() -> ([46]);
enum_init<core::bool, 1>([46]) -> ([47]);
store_temp<core::bool>([47]) -> ([45]);
bool_not_impl([45]) -> ([48]);
store_temp<core::bool>([48]) -> ([48]);
enum_match<core::bool>([48]) { fallthrough([49]) 1581([50]) };
branch_align() -> ();
drop<Unit>([49]) -> ();
get_builtin_costs() -> ([51]);
store_temp<BuiltinCosts>([51]) -> ([51]);
withdraw_gas_all([33], [6], [51]) { fallthrough([52], [53]) 1563([54], [55]) };
branch_align() -> ();
disable_ap_tracking() -> ();
function_call<user@erc20::erc20::ERC20::unsafe_new_storage>() -> ([56]);
store_temp<RangeCheck>([52]) -> ([62]);
store_temp<GasBuiltin>([53]) -> ([63]);
store_temp<Pedersen>([0]) -> ([64]);
store_temp<System>([3]) -> ([65]);
store_temp<erc20::erc20::ERC20::Storage>([56]) -> ([66]);
store_temp<felt252>([12]) -> ([67]);
store_temp<felt252>([17]) -> ([68]);
store_temp<u8>([24]) -> ([69]);
store_temp<core::integer::u256>([31]) -> ([70]);
store_temp<ContractAddress>([38]) -> ([71]);
function_call<user@erc20::erc20::ERC20::constructor>([62], [63], [64], [65], [66], [67], [68], [69], [70], [71]) -> ([57], [58], [59], [60], [61]);
enum_match<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([61]) { fallthrough([72]) 1555([73]) };
branch_align() -> ();
drop<Tuple<erc20::erc20::ERC20::Storage, Unit>>([72]) -> ();
array_new<felt252>() -> ([74]);
snapshot_take<Array<felt252>>([74]) -> ([75], [76]);
drop<Array<felt252>>([75]) -> ();
struct_construct<core::array::Span::<core::felt252>>([76]) -> ([77]);
struct_construct<Tuple<core::array::Span::<core::felt252>>>([77]) -> ([78]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 0>([78]) -> ([79]);
store_temp<Pedersen>([59]) -> ([80]);
store_temp<RangeCheck>([57]) -> ([81]);
store_temp<GasBuiltin>([58]) -> ([82]);
store_temp<System>([60]) -> ([83]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([79]) -> ([84]);
return([80], [81], [82], [83], [84]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([73]) -> ([85]);
store_temp<Pedersen>([59]) -> ([86]);
store_temp<RangeCheck>([57]) -> ([87]);
store_temp<GasBuiltin>([58]) -> ([88]);
store_temp<System>([60]) -> ([89]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([85]) -> ([90]);
return([86], [87], [88], [89], [90]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<ContractAddress>([38]) -> ();
drop<core::integer::u256>([31]) -> ();
drop<u8>([24]) -> ();
drop<felt252>([17]) -> ();
drop<felt252>([12]) -> ();
array_new<felt252>() -> ([91]);
felt252_const<375233589013918064796019>() -> ([92]);
store_temp<felt252>([92]) -> ([92]);
array_append<felt252>([91], [92]) -> ([93]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([93]) -> ([94]);
store_temp<Pedersen>([0]) -> ([95]);
store_temp<RangeCheck>([54]) -> ([96]);
store_temp<GasBuiltin>([55]) -> ([97]);
store_temp<System>([3]) -> ([98]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([94]) -> ([99]);
return([95], [96], [97], [98], [99]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<Unit>([50]) -> ();
drop<ContractAddress>([38]) -> ();
drop<core::integer::u256>([31]) -> ();
drop<u8>([24]) -> ();
drop<felt252>([17]) -> ();
drop<felt252>([12]) -> ();
store_temp<System>([3]) -> ([102]);
function_call<user@core::starknet::use_system_implicit>([102]) -> ([100], [101]);
drop<Unit>([101]) -> ();
array_new<felt252>() -> ([103]);
felt252_const<7733229381460288120802334208475838166080759535023995805565484692595>() -> ([104]);
store_temp<felt252>([104]) -> ([104]);
array_append<felt252>([103], [104]) -> ([105]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([105]) -> ([106]);
store_temp<Pedersen>([0]) -> ([107]);
store_temp<RangeCheck>([33]) -> ([108]);
store_temp<GasBuiltin>([6]) -> ([109]);
store_temp<System>([100]) -> ([110]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([106]) -> ([111]);
return([107], [108], [109], [110], [111]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<Unit>([39]) -> ();
drop<core::array::Span::<core::felt252>>([34]) -> ();
drop<core::integer::u256>([31]) -> ();
drop<u8>([24]) -> ();
drop<felt252>([17]) -> ();
drop<felt252>([12]) -> ();
array_new<felt252>() -> ([112]);
felt252_const<1979706721653833758925397712865600297316042839304765459608024204080243>() -> ([113]);
store_temp<felt252>([113]) -> ([113]);
array_append<felt252>([112], [113]) -> ([114]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([114]) -> ([115]);
store_temp<Pedersen>([0]) -> ([116]);
store_temp<RangeCheck>([33]) -> ([117]);
store_temp<GasBuiltin>([6]) -> ([118]);
store_temp<System>([3]) -> ([119]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([115]) -> ([120]);
return([116], [117], [118], [119], [120]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<Unit>([32]) -> ();
drop<u8>([24]) -> ();
drop<felt252>([17]) -> ();
drop<felt252>([12]) -> ();
drop<core::array::Span::<core::felt252>>([27]) -> ();
array_new<felt252>() -> ([121]);
felt252_const<1979706721653833758925397712865600297316042839304765459608024204080243>() -> ([122]);
store_temp<felt252>([122]) -> ([122]);
array_append<felt252>([121], [122]) -> ([123]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([123]) -> ([124]);
store_temp<Pedersen>([0]) -> ([125]);
store_temp<RangeCheck>([26]) -> ([126]);
store_temp<GasBuiltin>([6]) -> ([127]);
store_temp<System>([3]) -> ([128]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([124]) -> ([129]);
return([125], [126], [127], [128], [129]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<Unit>([25]) -> ();
drop<felt252>([17]) -> ();
drop<felt252>([12]) -> ();
drop<core::array::Span::<core::felt252>>([20]) -> ();
array_new<felt252>() -> ([130]);
felt252_const<1979706721653833758925397712865600297316042839304765459608024204080243>() -> ([131]);
store_temp<felt252>([131]) -> ([131]);
array_append<felt252>([130], [131]) -> ([132]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([132]) -> ([133]);
store_temp<Pedersen>([0]) -> ([134]);
store_temp<RangeCheck>([19]) -> ([135]);
store_temp<GasBuiltin>([6]) -> ([136]);
store_temp<System>([3]) -> ([137]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([133]) -> ([138]);
return([134], [135], [136], [137], [138]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<Unit>([18]) -> ();
drop<felt252>([12]) -> ();
drop<core::array::Span::<core::felt252>>([14]) -> ();
array_new<felt252>() -> ([139]);
felt252_const<1979706721653833758925397712865600297316042839304765459608024204080243>() -> ([140]);
store_temp<felt252>([140]) -> ([140]);
array_append<felt252>([139], [140]) -> ([141]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([141]) -> ([142]);
store_temp<Pedersen>([0]) -> ([143]);
store_temp<RangeCheck>([5]) -> ([144]);
store_temp<GasBuiltin>([6]) -> ([145]);
store_temp<System>([3]) -> ([146]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([142]) -> ([147]);
return([143], [144], [145], [146], [147]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<Unit>([13]) -> ();
drop<core::array::Span::<core::felt252>>([9]) -> ();
array_new<felt252>() -> ([148]);
felt252_const<1979706721653833758925397712865600297316042839304765459608024204080243>() -> ([149]);
store_temp<felt252>([149]) -> ([149]);
array_append<felt252>([148], [149]) -> ([150]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([150]) -> ([151]);
store_temp<Pedersen>([0]) -> ([152]);
store_temp<RangeCheck>([5]) -> ([153]);
store_temp<GasBuiltin>([6]) -> ([154]);
store_temp<System>([3]) -> ([155]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([151]) -> ([156]);
return([152], [153], [154], [155], [156]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<core::array::Span::<core::felt252>>([4]) -> ();
array_new<felt252>() -> ([157]);
felt252_const<375233589013918064796019>() -> ([158]);
store_temp<felt252>([158]) -> ([158]);
array_append<felt252>([157], [158]) -> ([159]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([159]) -> ([160]);
store_temp<Pedersen>([0]) -> ([161]);
store_temp<RangeCheck>([7]) -> ([162]);
store_temp<GasBuiltin>([8]) -> ([163]);
store_temp<System>([3]) -> ([164]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([160]) -> ([165]);
return([161], [162], [163], [164], [165]);
struct_construct<erc20::erc20::ERC20::name::Storage>() -> ([0]);
struct_construct<erc20::erc20::ERC20::symbol::Storage>() -> ([1]);
struct_construct<erc20::erc20::ERC20::decimals::Storage>() -> ([2]);
struct_construct<erc20::erc20::ERC20::total_supply::Storage>() -> ([3]);
struct_construct<erc20::erc20::ERC20::balances::Storage>() -> ([4]);
struct_construct<erc20::erc20::ERC20::allowances::Storage>() -> ([5]);
struct_construct<erc20::erc20::ERC20::Storage>([0], [1], [2], [3], [4], [5]) -> ([6]);
store_temp<erc20::erc20::ERC20::Storage>([6]) -> ([7]);
return([7]);
struct_deconstruct<erc20::erc20::ERC20::Storage>([2]) -> ([3], [4], [5], [6], [7], [8]);
drop<erc20::erc20::ERC20::symbol::Storage>([4]) -> ();
drop<erc20::erc20::ERC20::decimals::Storage>([5]) -> ();
drop<erc20::erc20::ERC20::total_supply::Storage>([6]) -> ();
drop<erc20::erc20::ERC20::balances::Storage>([7]) -> ();
drop<erc20::erc20::ERC20::allowances::Storage>([8]) -> ();
store_temp<GasBuiltin>([0]) -> ([12]);
store_temp<System>([1]) -> ([13]);
store_temp<erc20::erc20::ERC20::name::Storage>([3]) -> ([14]);
function_call<user@erc20::erc20::ERC20::name::StorageImpl::read>([12], [13], [14]) -> ([9], [10], [11]);
enum_match<core::PanicResult::<(core::felt252,)>>([11]) { fallthrough([15]) 1730([16]) };
branch_align() -> ();
struct_deconstruct<Tuple<felt252>>([15]) -> ([17]);
struct_construct<Tuple<felt252>>([17]) -> ([18]);
enum_init<core::PanicResult::<(core::felt252,)>, 0>([18]) -> ([19]);
store_temp<GasBuiltin>([9]) -> ([20]);
store_temp<System>([10]) -> ([21]);
store_temp<core::PanicResult::<(core::felt252,)>>([19]) -> ([22]);
return([20], [21], [22]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::felt252,)>, 1>([16]) -> ([23]);
store_temp<GasBuiltin>([9]) -> ([24]);
store_temp<System>([10]) -> ([25]);
store_temp<core::PanicResult::<(core::felt252,)>>([23]) -> ([26]);
return([24], [25], [26]);
rename<felt252>([0]) -> ([2]);
array_append<felt252>([1], [2]) -> ([3]);
struct_construct<Unit>() -> ([4]);
store_temp<Array<felt252>>([3]) -> ([5]);
store_temp<Unit>([4]) -> ([6]);
return([5], [6]);
struct_construct<Unit>() -> ([1]);
store_temp<System>([0]) -> ([2]);
store_temp<Unit>([1]) -> ([3]);
return([2], [3]);
struct_deconstruct<erc20::erc20::ERC20::Storage>([2]) -> ([3], [4], [5], [6], [7], [8]);
drop<erc20::erc20::ERC20::name::Storage>([3]) -> ();
drop<erc20::erc20::ERC20::decimals::Storage>([5]) -> ();
drop<erc20::erc20::ERC20::total_supply::Storage>([6]) -> ();
drop<erc20::erc20::ERC20::balances::Storage>([7]) -> ();
drop<erc20::erc20::ERC20::allowances::Storage>([8]) -> ();
store_temp<GasBuiltin>([0]) -> ([12]);
store_temp<System>([1]) -> ([13]);
store_temp<erc20::erc20::ERC20::symbol::Storage>([4]) -> ([14]);
function_call<user@erc20::erc20::ERC20::symbol::StorageImpl::read>([12], [13], [14]) -> ([9], [10], [11]);
enum_match<core::PanicResult::<(core::felt252,)>>([11]) { fallthrough([15]) 1765([16]) };
branch_align() -> ();
struct_deconstruct<Tuple<felt252>>([15]) -> ([17]);
struct_construct<Tuple<felt252>>([17]) -> ([18]);
enum_init<core::PanicResult::<(core::felt252,)>, 0>([18]) -> ([19]);
store_temp<GasBuiltin>([9]) -> ([20]);
store_temp<System>([10]) -> ([21]);
store_temp<core::PanicResult::<(core::felt252,)>>([19]) -> ([22]);
return([20], [21], [22]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::felt252,)>, 1>([16]) -> ([23]);
store_temp<GasBuiltin>([9]) -> ([24]);
store_temp<System>([10]) -> ([25]);
store_temp<core::PanicResult::<(core::felt252,)>>([23]) -> ([26]);
return([24], [25], [26]);
struct_deconstruct<erc20::erc20::ERC20::Storage>([3]) -> ([4], [5], [6], [7], [8], [9]);
drop<erc20::erc20::ERC20::name::Storage>([4]) -> ();
drop<erc20::erc20::ERC20::symbol::Storage>([5]) -> ();
drop<erc20::erc20::ERC20::total_supply::Storage>([7]) -> ();
drop<erc20::erc20::ERC20::balances::Storage>([8]) -> ();
drop<erc20::erc20::ERC20::allowances::Storage>([9]) -> ();
store_temp<RangeCheck>([0]) -> ([14]);
store_temp<GasBuiltin>([1]) -> ([15]);
store_temp<System>([2]) -> ([16]);
store_temp<erc20::erc20::ERC20::decimals::Storage>([6]) -> ([17]);
function_call<user@erc20::erc20::ERC20::decimals::StorageImpl::read>([14], [15], [16], [17]) -> ([10], [11], [12], [13]);
enum_match<core::PanicResult::<(core::integer::u8,)>>([13]) { fallthrough([18]) 1792([19]) };
branch_align() -> ();
struct_deconstruct<Tuple<u8>>([18]) -> ([20]);
struct_construct<Tuple<u8>>([20]) -> ([21]);
enum_init<core::PanicResult::<(core::integer::u8,)>, 0>([21]) -> ([22]);
store_temp<RangeCheck>([10]) -> ([23]);
store_temp<GasBuiltin>([11]) -> ([24]);
store_temp<System>([12]) -> ([25]);
store_temp<core::PanicResult::<(core::integer::u8,)>>([22]) -> ([26]);
return([23], [24], [25], [26]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::integer::u8,)>, 1>([19]) -> ([27]);
store_temp<RangeCheck>([10]) -> ([28]);
store_temp<GasBuiltin>([11]) -> ([29]);
store_temp<System>([12]) -> ([30]);
store_temp<core::PanicResult::<(core::integer::u8,)>>([27]) -> ([31]);
return([28], [29], [30], [31]);
rename<u8>([0]) -> ([2]);
u8_to_felt252([2]) -> ([3]);
dup<felt252>([3]) -> ([4], [5]);
drop<felt252>([4]) -> ();
store_temp<felt252>([5]) -> ([8]);
store_temp<Array<felt252>>([1]) -> ([9]);
function_call<user@core::serde::Felt252Serde::serialize>([8], [9]) -> ([6], [7]);
drop<Unit>([7]) -> ();
struct_construct<Unit>() -> ([10]);
store_temp<Array<felt252>>([6]) -> ([11]);
store_temp<Unit>([10]) -> ([12]);
return([11], [12]);
struct_deconstruct<erc20::erc20::ERC20::Storage>([3]) -> ([4], [5], [6], [7], [8], [9]);
drop<erc20::erc20::ERC20::name::Storage>([4]) -> ();
drop<erc20::erc20::ERC20::symbol::Storage>([5]) -> ();
drop<erc20::erc20::ERC20::decimals::Storage>([6]) -> ();
drop<erc20::erc20::ERC20::balances::Storage>([8]) -> ();
drop<erc20::erc20::ERC20::allowances::Storage>([9]) -> ();
store_temp<RangeCheck>([0]) -> ([14]);
store_temp<GasBuiltin>([1]) -> ([15]);
store_temp<System>([2]) -> ([16]);
store_temp<erc20::erc20::ERC20::total_supply::Storage>([7]) -> ([17]);
function_call<user@erc20::erc20::ERC20::total_supply::StorageImpl::read>([14], [15], [16], [17]) -> ([10], [11], [12], [13]);
enum_match<core::PanicResult::<(core::integer::u256,)>>([13]) { fallthrough([18]) 1832([19]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::integer::u256>>([18]) -> ([20]);
struct_construct<Tuple<core::integer::u256>>([20]) -> ([21]);
enum_init<core::PanicResult::<(core::integer::u256,)>, 0>([21]) -> ([22]);
store_temp<RangeCheck>([10]) -> ([23]);
store_temp<GasBuiltin>([11]) -> ([24]);
store_temp<System>([12]) -> ([25]);
store_temp<core::PanicResult::<(core::integer::u256,)>>([22]) -> ([26]);
return([23], [24], [25], [26]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::integer::u256,)>, 1>([19]) -> ([27]);
store_temp<RangeCheck>([10]) -> ([28]);
store_temp<GasBuiltin>([11]) -> ([29]);
store_temp<System>([12]) -> ([30]);
store_temp<core::PanicResult::<(core::integer::u256,)>>([27]) -> ([31]);
return([28], [29], [30], [31]);
dup<core::integer::u256>([0]) -> ([0], [2]);
struct_deconstruct<core::integer::u256>([2]) -> ([3], [4]);
drop<u128>([4]) -> ();
store_temp<u128>([3]) -> ([7]);
store_temp<Array<felt252>>([1]) -> ([8]);
function_call<user@core::serde::U128Serde::serialize>([7], [8]) -> ([5], [6]);
drop<Unit>([6]) -> ();
struct_deconstruct<core::integer::u256>([0]) -> ([9], [10]);
drop<u128>([9]) -> ();
store_temp<u128>([10]) -> ([13]);
store_temp<Array<felt252>>([5]) -> ([14]);
function_call<user@core::serde::U128Serde::serialize>([13], [14]) -> ([11], [12]);
rename<Array<felt252>>([11]) -> ([15]);
rename<Unit>([12]) -> ([16]);
return([15], [16]);
store_temp<core::array::Span::<core::felt252>>([1]) -> ([4]);
function_call<user@core::serde::Felt252Serde::deserialize>([4]) -> ([2], [3]);
enum_match<core::option::Option::<core::felt252>>([3]) { fallthrough([5]) 1872([6]) };
branch_align() -> ();
contract_address_try_from_felt252([0], [5]) { fallthrough([7], [8]) 1865([9]) };
branch_align() -> ();
enum_init<core::option::Option::<core::starknet::contract_address::ContractAddress>, 0>([8]) -> ([10]);
store_temp<RangeCheck>([7]) -> ([11]);
store_temp<core::array::Span::<core::felt252>>([2]) -> ([12]);
store_temp<core::option::Option::<core::starknet::contract_address::ContractAddress>>([10]) -> ([13]);
return([11], [12], [13]);
branch_align() -> ();
struct_construct<Unit>() -> ([14]);
enum_init<core::option::Option::<core::starknet::contract_address::ContractAddress>, 1>([14]) -> ([15]);
store_temp<RangeCheck>([9]) -> ([16]);
store_temp<core::array::Span::<core::felt252>>([2]) -> ([17]);
store_temp<core::option::Option::<core::starknet::contract_address::ContractAddress>>([15]) -> ([18]);
return([16], [17], [18]);
branch_align() -> ();
enum_init<core::option::Option::<core::starknet::contract_address::ContractAddress>, 1>([6]) -> ([19]);
store_temp<RangeCheck>([0]) -> ([20]);
store_temp<core::array::Span::<core::felt252>>([2]) -> ([21]);
store_temp<core::option::Option::<core::starknet::contract_address::ContractAddress>>([19]) -> ([22]);
return([20], [21], [22]);
struct_deconstruct<erc20::erc20::ERC20::Storage>([4]) -> ([6], [7], [8], [9], [10], [11]);
drop<erc20::erc20::ERC20::name::Storage>([6]) -> ();
drop<erc20::erc20::ERC20::symbol::Storage>([7]) -> ();
drop<erc20::erc20::ERC20::decimals::Storage>([8]) -> ();
drop<erc20::erc20::ERC20::total_supply::Storage>([9]) -> ();
drop<erc20::erc20::ERC20::allowances::Storage>([11]) -> ();
store_temp<RangeCheck>([0]) -> ([17]);
store_temp<GasBuiltin>([1]) -> ([18]);
store_temp<Pedersen>([2]) -> ([19]);
store_temp<System>([3]) -> ([20]);
store_temp<erc20::erc20::ERC20::balances::Storage>([10]) -> ([21]);
store_temp<ContractAddress>([5]) -> ([22]);
function_call<user@erc20::erc20::ERC20::balances::StorageImpl::read>([17], [18], [19], [20], [21], [22]) -> ([12], [13], [14], [15], [16]);
enum_match<core::PanicResult::<(core::integer::u256,)>>([16]) { fallthrough([23]) 1902([24]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::integer::u256>>([23]) -> ([25]);
struct_construct<Tuple<core::integer::u256>>([25]) -> ([26]);
enum_init<core::PanicResult::<(core::integer::u256,)>, 0>([26]) -> ([27]);
store_temp<RangeCheck>([12]) -> ([28]);
store_temp<GasBuiltin>([13]) -> ([29]);
store_temp<Pedersen>([14]) -> ([30]);
store_temp<System>([15]) -> ([31]);
store_temp<core::PanicResult::<(core::integer::u256,)>>([27]) -> ([32]);
return([28], [29], [30], [31], [32]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::integer::u256,)>, 1>([24]) -> ([33]);
store_temp<RangeCheck>([12]) -> ([34]);
store_temp<GasBuiltin>([13]) -> ([35]);
store_temp<Pedersen>([14]) -> ([36]);
store_temp<System>([15]) -> ([37]);
store_temp<core::PanicResult::<(core::integer::u256,)>>([33]) -> ([38]);
return([34], [35], [36], [37], [38]);
struct_deconstruct<erc20::erc20::ERC20::Storage>([4]) -> ([7], [8], [9], [10], [11], [12]);
drop<erc20::erc20::ERC20::name::Storage>([7]) -> ();
drop<erc20::erc20::ERC20::symbol::Storage>([8]) -> ();
drop<erc20::erc20::ERC20::decimals::Storage>([9]) -> ();
drop<erc20::erc20::ERC20::total_supply::Storage>([10]) -> ();
drop<erc20::erc20::ERC20::balances::Storage>([11]) -> ();
struct_construct<Tuple<ContractAddress, ContractAddress>>([5], [6]) -> ([13]);
store_temp<RangeCheck>([0]) -> ([19]);
store_temp<GasBuiltin>([1]) -> ([20]);
store_temp<Pedersen>([2]) -> ([21]);
store_temp<System>([3]) -> ([22]);
store_temp<erc20::erc20::ERC20::allowances::Storage>([12]) -> ([23]);
store_temp<Tuple<ContractAddress, ContractAddress>>([13]) -> ([24]);
function_call<user@erc20::erc20::ERC20::allowances::StorageImpl::read>([19], [20], [21], [22], [23], [24]) -> ([14], [15], [16], [17], [18]);
enum_match<core::PanicResult::<(core::integer::u256,)>>([18]) { fallthrough([25]) 1935([26]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::integer::u256>>([25]) -> ([27]);
struct_construct<Tuple<core::integer::u256>>([27]) -> ([28]);
enum_init<core::PanicResult::<(core::integer::u256,)>, 0>([28]) -> ([29]);
store_temp<RangeCheck>([14]) -> ([30]);
store_temp<GasBuiltin>([15]) -> ([31]);
store_temp<Pedersen>([16]) -> ([32]);
store_temp<System>([17]) -> ([33]);
store_temp<core::PanicResult::<(core::integer::u256,)>>([29]) -> ([34]);
return([30], [31], [32], [33], [34]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::integer::u256,)>, 1>([26]) -> ([35]);
store_temp<RangeCheck>([14]) -> ([36]);
store_temp<GasBuiltin>([15]) -> ([37]);
store_temp<Pedersen>([16]) -> ([38]);
store_temp<System>([17]) -> ([39]);
store_temp<core::PanicResult::<(core::integer::u256,)>>([35]) -> ([40]);
return([36], [37], [38], [39], [40]);
store_temp<RangeCheck>([0]) -> ([5]);
store_temp<core::array::Span::<core::felt252>>([1]) -> ([6]);
function_call<user@core::serde::U128Serde::deserialize>([5], [6]) -> ([2], [3], [4]);
enum_match<core::option::Option::<core::integer::u128>>([4]) { fallthrough([7]) 1966([8]) };
branch_align() -> ();
store_temp<RangeCheck>([2]) -> ([12]);
store_temp<core::array::Span::<core::felt252>>([3]) -> ([13]);
function_call<user@core::serde::U128Serde::deserialize>([12], [13]) -> ([9], [10], [11]);
enum_match<core::option::Option::<core::integer::u128>>([11]) { fallthrough([14]) 1959([15]) };
branch_align() -> ();
struct_construct<core::integer::u256>([7], [14]) -> ([16]);
enum_init<core::option::Option::<core::integer::u256>, 0>([16]) -> ([17]);
store_temp<RangeCheck>([9]) -> ([18]);
store_temp<core::array::Span::<core::felt252>>([10]) -> ([19]);
store_temp<core::option::Option::<core::integer::u256>>([17]) -> ([20]);
return([18], [19], [20]);
branch_align() -> ();
drop<u128>([7]) -> ();
enum_init<core::option::Option::<core::integer::u256>, 1>([15]) -> ([21]);
store_temp<RangeCheck>([9]) -> ([22]);
store_temp<core::array::Span::<core::felt252>>([10]) -> ([23]);
store_temp<core::option::Option::<core::integer::u256>>([21]) -> ([24]);
return([22], [23], [24]);
branch_align() -> ();
enum_init<core::option::Option::<core::integer::u256>, 1>([8]) -> ([25]);
store_temp<RangeCheck>([2]) -> ([26]);
store_temp<core::array::Span::<core::felt252>>([3]) -> ([27]);
store_temp<core::option::Option::<core::integer::u256>>([25]) -> ([28]);
return([26], [27], [28]);
store_temp<GasBuiltin>([1]) -> ([10]);
store_temp<System>([3]) -> ([11]);
function_call<user@core::starknet::info::get_caller_address>([10], [11]) -> ([7], [8], [9]);
enum_match<core::PanicResult::<(core::starknet::contract_address::ContractAddress,)>>([9]) { fallthrough([12]) 2008([13]) };
branch_align() -> ();
struct_deconstruct<Tuple<ContractAddress>>([12]) -> ([14]);
store_temp<RangeCheck>([0]) -> ([20]);
store_temp<GasBuiltin>([7]) -> ([21]);
store_temp<Pedersen>([2]) -> ([22]);
store_temp<System>([8]) -> ([23]);
store_temp<erc20::erc20::ERC20::Storage>([4]) -> ([24]);
store_temp<ContractAddress>([14]) -> ([25]);
store_temp<ContractAddress>([5]) -> ([26]);
store_temp<core::integer::u256>([6]) -> ([27]);
function_call<user@erc20::erc20::ERC20::StorageImpl::transfer_helper>([20], [21], [22], [23], [24], [25], [26], [27]) -> ([15], [16], [17], [18], [19]);
enum_match<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([19]) { fallthrough([28]) 2000([29]) };
branch_align() -> ();
struct_deconstruct<Tuple<erc20::erc20::ERC20::Storage, Unit>>([28]) -> ([30], [31]);
drop<Unit>([31]) -> ();
struct_construct<Unit>() -> ([32]);
struct_construct<Tuple<erc20::erc20::ERC20::Storage, Unit>>([30], [32]) -> ([33]);
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 0>([33]) -> ([34]);
store_temp<RangeCheck>([15]) -> ([35]);
store_temp<GasBuiltin>([16]) -> ([36]);
store_temp<Pedersen>([17]) -> ([37]);
store_temp<System>([18]) -> ([38]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([34]) -> ([39]);
return([35], [36], [37], [38], [39]);
branch_align() -> ();
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 1>([29]) -> ([40]);
store_temp<RangeCheck>([15]) -> ([41]);
store_temp<GasBuiltin>([16]) -> ([42]);
store_temp<Pedersen>([17]) -> ([43]);
store_temp<System>([18]) -> ([44]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([40]) -> ([45]);
return([41], [42], [43], [44], [45]);
branch_align() -> ();
drop<core::integer::u256>([6]) -> ();
drop<ContractAddress>([5]) -> ();
drop<erc20::erc20::ERC20::Storage>([4]) -> ();
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 1>([13]) -> ([46]);
store_temp<RangeCheck>([0]) -> ([47]);
store_temp<GasBuiltin>([7]) -> ([48]);
store_temp<Pedersen>([2]) -> ([49]);
store_temp<System>([8]) -> ([50]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([46]) -> ([51]);
return([47], [48], [49], [50], [51]);
store_temp<GasBuiltin>([1]) -> ([11]);
store_temp<System>([3]) -> ([12]);
function_call<user@core::starknet::info::get_caller_address>([11], [12]) -> ([8], [9], [10]);
enum_match<core::PanicResult::<(core::starknet::contract_address::ContractAddress,)>>([10]) { fallthrough([13]) 2081([14]) };
branch_align() -> ();
struct_deconstruct<Tuple<ContractAddress>>([13]) -> ([15]);
store_temp<RangeCheck>([0]) -> ([21]);
store_temp<GasBuiltin>([8]) -> ([22]);
store_temp<Pedersen>([2]) -> ([23]);
store_temp<System>([9]) -> ([24]);
store_temp<erc20::erc20::ERC20::Storage>([4]) -> ([25]);
dup<ContractAddress>([5]) -> ([5], [26]);
store_temp<ContractAddress>([26]) -> ([26]);
store_temp<ContractAddress>([15]) -> ([27]);
dup<core::integer::u256>([7]) -> ([7], [28]);
store_temp<core::integer::u256>([28]) -> ([28]);
function_call<user@erc20::erc20::ERC20::StorageImpl::spend_allowance>([21], [22], [23], [24], [25], [26], [27], [28]) -> ([16], [17], [18], [19], [20]);
enum_match<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([20]) { fallthrough([29]) 2070([30]) };
branch_align() -> ();
struct_deconstruct<Tuple<erc20::erc20::ERC20::Storage, Unit>>([29]) -> ([31], [32]);
drop<Unit>([32]) -> ();
store_temp<RangeCheck>([16]) -> ([38]);
store_temp<GasBuiltin>([17]) -> ([39]);
store_temp<Pedersen>([18]) -> ([40]);
store_temp<System>([19]) -> ([41]);
store_temp<erc20::erc20::ERC20::Storage>([31]) -> ([42]);
store_temp<ContractAddress>([5]) -> ([43]);
store_temp<ContractAddress>([6]) -> ([44]);
store_temp<core::integer::u256>([7]) -> ([45]);
function_call<user@erc20::erc20::ERC20::StorageImpl::transfer_helper>([38], [39], [40], [41], [42], [43], [44], [45]) -> ([33], [34], [35], [36], [37]);
enum_match<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([37]) { fallthrough([46]) 2062([47]) };
branch_align() -> ();
struct_deconstruct<Tuple<erc20::erc20::ERC20::Storage, Unit>>([46]) -> ([48], [49]);
drop<Unit>([49]) -> ();
struct_construct<Unit>() -> ([50]);
struct_construct<Tuple<erc20::erc20::ERC20::Storage, Unit>>([48], [50]) -> ([51]);
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 0>([51]) -> ([52]);
store_temp<RangeCheck>([33]) -> ([53]);
store_temp<GasBuiltin>([34]) -> ([54]);
store_temp<Pedersen>([35]) -> ([55]);
store_temp<System>([36]) -> ([56]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([52]) -> ([57]);
return([53], [54], [55], [56], [57]);
branch_align() -> ();
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 1>([47]) -> ([58]);
store_temp<RangeCheck>([33]) -> ([59]);
store_temp<GasBuiltin>([34]) -> ([60]);
store_temp<Pedersen>([35]) -> ([61]);
store_temp<System>([36]) -> ([62]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([58]) -> ([63]);
return([59], [60], [61], [62], [63]);
branch_align() -> ();
drop<core::integer::u256>([7]) -> ();
drop<ContractAddress>([6]) -> ();
drop<ContractAddress>([5]) -> ();
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 1>([30]) -> ([64]);
store_temp<RangeCheck>([16]) -> ([65]);
store_temp<GasBuiltin>([17]) -> ([66]);
store_temp<Pedersen>([18]) -> ([67]);
store_temp<System>([19]) -> ([68]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([64]) -> ([69]);
return([65], [66], [67], [68], [69]);
branch_align() -> ();
drop<core::integer::u256>([7]) -> ();
drop<ContractAddress>([6]) -> ();
drop<ContractAddress>([5]) -> ();
drop<erc20::erc20::ERC20::Storage>([4]) -> ();
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 1>([14]) -> ([70]);
store_temp<RangeCheck>([0]) -> ([71]);
store_temp<GasBuiltin>([8]) -> ([72]);
store_temp<Pedersen>([2]) -> ([73]);
store_temp<System>([9]) -> ([74]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([70]) -> ([75]);
return([71], [72], [73], [74], [75]);
store_temp<GasBuiltin>([1]) -> ([10]);
store_temp<System>([3]) -> ([11]);
function_call<user@core::starknet::info::get_caller_address>([10], [11]) -> ([7], [8], [9]);
enum_match<core::PanicResult::<(core::starknet::contract_address::ContractAddress,)>>([9]) { fallthrough([12]) 2129([13]) };
branch_align() -> ();
struct_deconstruct<Tuple<ContractAddress>>([12]) -> ([14]);
store_temp<RangeCheck>([0]) -> ([20]);
store_temp<GasBuiltin>([7]) -> ([21]);
store_temp<Pedersen>([2]) -> ([22]);
store_temp<System>([8]) -> ([23]);
store_temp<erc20::erc20::ERC20::Storage>([4]) -> ([24]);
store_temp<ContractAddress>([14]) -> ([25]);
store_temp<ContractAddress>([5]) -> ([26]);
store_temp<core::integer::u256>([6]) -> ([27]);
function_call<user@erc20::erc20::ERC20::StorageImpl::approve_helper>([20], [21], [22], [23], [24], [25], [26], [27]) -> ([15], [16], [17], [18], [19]);
enum_match<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([19]) { fallthrough([28]) 2121([29]) };
branch_align() -> ();
struct_deconstruct<Tuple<erc20::erc20::ERC20::Storage, Unit>>([28]) -> ([30], [31]);
drop<Unit>([31]) -> ();
struct_construct<Unit>() -> ([32]);
struct_construct<Tuple<erc20::erc20::ERC20::Storage, Unit>>([30], [32]) -> ([33]);
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 0>([33]) -> ([34]);
store_temp<RangeCheck>([15]) -> ([35]);
store_temp<GasBuiltin>([16]) -> ([36]);
store_temp<Pedersen>([17]) -> ([37]);
store_temp<System>([18]) -> ([38]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([34]) -> ([39]);
return([35], [36], [37], [38], [39]);
branch_align() -> ();
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 1>([29]) -> ([40]);
store_temp<RangeCheck>([15]) -> ([41]);
store_temp<GasBuiltin>([16]) -> ([42]);
store_temp<Pedersen>([17]) -> ([43]);
store_temp<System>([18]) -> ([44]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([40]) -> ([45]);
return([41], [42], [43], [44], [45]);
branch_align() -> ();
drop<core::integer::u256>([6]) -> ();
drop<ContractAddress>([5]) -> ();
drop<erc20::erc20::ERC20::Storage>([4]) -> ();
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 1>([13]) -> ([46]);
store_temp<RangeCheck>([0]) -> ([47]);
store_temp<GasBuiltin>([7]) -> ([48]);
store_temp<Pedersen>([2]) -> ([49]);
store_temp<System>([8]) -> ([50]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([46]) -> ([51]);
return([47], [48], [49], [50], [51]);
store_temp<GasBuiltin>([1]) -> ([10]);
store_temp<System>([3]) -> ([11]);
function_call<user@core::starknet::info::get_caller_address>([10], [11]) -> ([7], [8], [9]);
enum_match<core::PanicResult::<(core::starknet::contract_address::ContractAddress,)>>([9]) { fallthrough([12]) 2232([13]) };
branch_align() -> ();
struct_deconstruct<Tuple<ContractAddress>>([12]) -> ([14]);
struct_deconstruct<erc20::erc20::ERC20::Storage>([4]) -> ([15], [16], [17], [18], [19], [20]);
dup<erc20::erc20::ERC20::allowances::Storage>([20]) -> ([21], [22]);
dup<ContractAddress>([14]) -> ([14], [23]);
dup<ContractAddress>([5]) -> ([5], [24]);
struct_construct<Tuple<ContractAddress, ContractAddress>>([23], [24]) -> ([25]);
store_temp<RangeCheck>([0]) -> ([31]);
store_temp<GasBuiltin>([7]) -> ([32]);
store_temp<Pedersen>([2]) -> ([33]);
store_temp<System>([8]) -> ([34]);
store_temp<erc20::erc20::ERC20::allowances::Storage>([22]) -> ([35]);
store_temp<Tuple<ContractAddress, ContractAddress>>([25]) -> ([36]);
function_call<user@erc20::erc20::ERC20::allowances::StorageImpl::read>([31], [32], [33], [34], [35], [36]) -> ([26], [27], [28], [29], [30]);
enum_match<core::PanicResult::<(core::integer::u256,)>>([30]) { fallthrough([37]) 2215([38]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::integer::u256>>([37]) -> ([39]);
store_temp<RangeCheck>([26]) -> ([42]);
store_temp<core::integer::u256>([39]) -> ([43]);
store_temp<core::integer::u256>([6]) -> ([44]);
function_call<user@core::integer::U256Add::add>([42], [43], [44]) -> ([40], [41]);
enum_match<core::PanicResult::<(core::integer::u256,)>>([41]) { fallthrough([45]) 2199([46]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::integer::u256>>([45]) -> ([47]);
struct_construct<erc20::erc20::ERC20::Storage>([15], [16], [17], [18], [19], [21]) -> ([48]);
store_temp<RangeCheck>([40]) -> ([54]);
store_temp<GasBuiltin>([27]) -> ([55]);
store_temp<Pedersen>([28]) -> ([56]);
store_temp<System>([29]) -> ([57]);
store_temp<erc20::erc20::ERC20::Storage>([48]) -> ([58]);
store_temp<ContractAddress>([14]) -> ([59]);
store_temp<ContractAddress>([5]) -> ([60]);
store_temp<core::integer::u256>([47]) -> ([61]);
function_call<user@erc20::erc20::ERC20::StorageImpl::approve_helper>([54], [55], [56], [57], [58], [59], [60], [61]) -> ([49], [50], [51], [52], [53]);
enum_match<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([53]) { fallthrough([62]) 2191([63]) };
branch_align() -> ();
struct_deconstruct<Tuple<erc20::erc20::ERC20::Storage, Unit>>([62]) -> ([64], [65]);
drop<Unit>([65]) -> ();
struct_construct<Unit>() -> ([66]);
struct_construct<Tuple<erc20::erc20::ERC20::Storage, Unit>>([64], [66]) -> ([67]);
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 0>([67]) -> ([68]);
store_temp<RangeCheck>([49]) -> ([69]);
store_temp<GasBuiltin>([50]) -> ([70]);
store_temp<Pedersen>([51]) -> ([71]);
store_temp<System>([52]) -> ([72]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([68]) -> ([73]);
return([69], [70], [71], [72], [73]);
branch_align() -> ();
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 1>([63]) -> ([74]);
store_temp<RangeCheck>([49]) -> ([75]);
store_temp<GasBuiltin>([50]) -> ([76]);
store_temp<Pedersen>([51]) -> ([77]);
store_temp<System>([52]) -> ([78]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([74]) -> ([79]);
return([75], [76], [77], [78], [79]);
branch_align() -> ();
drop<erc20::erc20::ERC20::name::Storage>([15]) -> ();
drop<ContractAddress>([5]) -> ();
drop<ContractAddress>([14]) -> ();
drop<erc20::erc20::ERC20::allowances::Storage>([21]) -> ();
drop<erc20::erc20::ERC20::balances::Storage>([19]) -> ();
drop<erc20::erc20::ERC20::total_supply::Storage>([18]) -> ();
drop<erc20::erc20::ERC20::decimals::Storage>([17]) -> ();
drop<erc20::erc20::ERC20::symbol::Storage>([16]) -> ();
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 1>([46]) -> ([80]);
store_temp<RangeCheck>([40]) -> ([81]);
store_temp<GasBuiltin>([27]) -> ([82]);
store_temp<Pedersen>([28]) -> ([83]);
store_temp<System>([29]) -> ([84]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([80]) -> ([85]);
return([81], [82], [83], [84], [85]);
branch_align() -> ();
drop<erc20::erc20::ERC20::name::Storage>([15]) -> ();
drop<ContractAddress>([5]) -> ();
drop<ContractAddress>([14]) -> ();
drop<erc20::erc20::ERC20::symbol::Storage>([16]) -> ();
drop<erc20::erc20::ERC20::allowances::Storage>([21]) -> ();
drop<erc20::erc20::ERC20::balances::Storage>([19]) -> ();
drop<erc20::erc20::ERC20::total_supply::Storage>([18]) -> ();
drop<erc20::erc20::ERC20::decimals::Storage>([17]) -> ();
drop<core::integer::u256>([6]) -> ();
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 1>([38]) -> ([86]);
store_temp<RangeCheck>([26]) -> ([87]);
store_temp<GasBuiltin>([27]) -> ([88]);
store_temp<Pedersen>([28]) -> ([89]);
store_temp<System>([29]) -> ([90]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([86]) -> ([91]);
return([87], [88], [89], [90], [91]);
branch_align() -> ();
drop<ContractAddress>([5]) -> ();
drop<erc20::erc20::ERC20::Storage>([4]) -> ();
drop<core::integer::u256>([6]) -> ();
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 1>([13]) -> ([92]);
store_temp<RangeCheck>([0]) -> ([93]);
store_temp<GasBuiltin>([7]) -> ([94]);
store_temp<Pedersen>([2]) -> ([95]);
store_temp<System>([8]) -> ([96]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([92]) -> ([97]);
return([93], [94], [95], [96], [97]);
store_temp<GasBuiltin>([1]) -> ([10]);
store_temp<System>([3]) -> ([11]);
function_call<user@core::starknet::info::get_caller_address>([10], [11]) -> ([7], [8], [9]);
enum_match<core::PanicResult::<(core::starknet::contract_address::ContractAddress,)>>([9]) { fallthrough([12]) 2335([13]) };
branch_align() -> ();
struct_deconstruct<Tuple<ContractAddress>>([12]) -> ([14]);
struct_deconstruct<erc20::erc20::ERC20::Storage>([4]) -> ([15], [16], [17], [18], [19], [20]);
dup<erc20::erc20::ERC20::allowances::Storage>([20]) -> ([21], [22]);
dup<ContractAddress>([14]) -> ([14], [23]);
dup<ContractAddress>([5]) -> ([5], [24]);
struct_construct<Tuple<ContractAddress, ContractAddress>>([23], [24]) -> ([25]);
store_temp<RangeCheck>([0]) -> ([31]);
store_temp<GasBuiltin>([7]) -> ([32]);
store_temp<Pedersen>([2]) -> ([33]);
store_temp<System>([8]) -> ([34]);
store_temp<erc20::erc20::ERC20::allowances::Storage>([22]) -> ([35]);
store_temp<Tuple<ContractAddress, ContractAddress>>([25]) -> ([36]);
function_call<user@erc20::erc20::ERC20::allowances::StorageImpl::read>([31], [32], [33], [34], [35], [36]) -> ([26], [27], [28], [29], [30]);
enum_match<core::PanicResult::<(core::integer::u256,)>>([30]) { fallthrough([37]) 2318([38]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::integer::u256>>([37]) -> ([39]);
store_temp<RangeCheck>([26]) -> ([42]);
store_temp<core::integer::u256>([39]) -> ([43]);
store_temp<core::integer::u256>([6]) -> ([44]);
function_call<user@core::integer::U256Sub::sub>([42], [43], [44]) -> ([40], [41]);
enum_match<core::PanicResult::<(core::integer::u256,)>>([41]) { fallthrough([45]) 2302([46]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::integer::u256>>([45]) -> ([47]);
struct_construct<erc20::erc20::ERC20::Storage>([15], [16], [17], [18], [19], [21]) -> ([48]);
store_temp<RangeCheck>([40]) -> ([54]);
store_temp<GasBuiltin>([27]) -> ([55]);
store_temp<Pedersen>([28]) -> ([56]);
store_temp<System>([29]) -> ([57]);
store_temp<erc20::erc20::ERC20::Storage>([48]) -> ([58]);
store_temp<ContractAddress>([14]) -> ([59]);
store_temp<ContractAddress>([5]) -> ([60]);
store_temp<core::integer::u256>([47]) -> ([61]);
function_call<user@erc20::erc20::ERC20::StorageImpl::approve_helper>([54], [55], [56], [57], [58], [59], [60], [61]) -> ([49], [50], [51], [52], [53]);
enum_match<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([53]) { fallthrough([62]) 2294([63]) };
branch_align() -> ();
struct_deconstruct<Tuple<erc20::erc20::ERC20::Storage, Unit>>([62]) -> ([64], [65]);
drop<Unit>([65]) -> ();
struct_construct<Unit>() -> ([66]);
struct_construct<Tuple<erc20::erc20::ERC20::Storage, Unit>>([64], [66]) -> ([67]);
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 0>([67]) -> ([68]);
store_temp<RangeCheck>([49]) -> ([69]);
store_temp<GasBuiltin>([50]) -> ([70]);
store_temp<Pedersen>([51]) -> ([71]);
store_temp<System>([52]) -> ([72]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([68]) -> ([73]);
return([69], [70], [71], [72], [73]);
branch_align() -> ();
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 1>([63]) -> ([74]);
store_temp<RangeCheck>([49]) -> ([75]);
store_temp<GasBuiltin>([50]) -> ([76]);
store_temp<Pedersen>([51]) -> ([77]);
store_temp<System>([52]) -> ([78]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([74]) -> ([79]);
return([75], [76], [77], [78], [79]);
branch_align() -> ();
drop<erc20::erc20::ERC20::name::Storage>([15]) -> ();
drop<ContractAddress>([5]) -> ();
drop<ContractAddress>([14]) -> ();
drop<erc20::erc20::ERC20::allowances::Storage>([21]) -> ();
drop<erc20::erc20::ERC20::balances::Storage>([19]) -> ();
drop<erc20::erc20::ERC20::total_supply::Storage>([18]) -> ();
drop<erc20::erc20::ERC20::decimals::Storage>([17]) -> ();
drop<erc20::erc20::ERC20::symbol::Storage>([16]) -> ();
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 1>([46]) -> ([80]);
store_temp<RangeCheck>([40]) -> ([81]);
store_temp<GasBuiltin>([27]) -> ([82]);
store_temp<Pedersen>([28]) -> ([83]);
store_temp<System>([29]) -> ([84]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([80]) -> ([85]);
return([81], [82], [83], [84], [85]);
branch_align() -> ();
drop<erc20::erc20::ERC20::name::Storage>([15]) -> ();
drop<ContractAddress>([5]) -> ();
drop<ContractAddress>([14]) -> ();
drop<erc20::erc20::ERC20::symbol::Storage>([16]) -> ();
drop<erc20::erc20::ERC20::allowances::Storage>([21]) -> ();
drop<erc20::erc20::ERC20::balances::Storage>([19]) -> ();
drop<erc20::erc20::ERC20::total_supply::Storage>([18]) -> ();
drop<erc20::erc20::ERC20::decimals::Storage>([17]) -> ();
drop<core::integer::u256>([6]) -> ();
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 1>([38]) -> ([86]);
store_temp<RangeCheck>([26]) -> ([87]);
store_temp<GasBuiltin>([27]) -> ([88]);
store_temp<Pedersen>([28]) -> ([89]);
store_temp<System>([29]) -> ([90]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([86]) -> ([91]);
return([87], [88], [89], [90], [91]);
branch_align() -> ();
drop<ContractAddress>([5]) -> ();
drop<erc20::erc20::ERC20::Storage>([4]) -> ();
drop<core::integer::u256>([6]) -> ();
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 1>([13]) -> ([92]);
store_temp<RangeCheck>([0]) -> ([93]);
store_temp<GasBuiltin>([7]) -> ([94]);
store_temp<Pedersen>([2]) -> ([95]);
store_temp<System>([8]) -> ([96]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([92]) -> ([97]);
return([93], [94], [95], [96], [97]);
struct_deconstruct<core::array::Span::<core::felt252>>([0]) -> ([1]);
array_snapshot_pop_front<felt252>([1]) { fallthrough([2], [3]) 2353([4]) };
branch_align() -> ();
enum_init<core::option::Option::<core::box::Box::<@core::felt252>>, 0>([3]) -> ([5]);
store_temp<Snapshot<Array<felt252>>>([2]) -> ([6]);
store_temp<core::option::Option::<core::box::Box::<@core::felt252>>>([5]) -> ([7]);
jump() { 2358() };
branch_align() -> ();
struct_construct<Unit>() -> ([8]);
enum_init<core::option::Option::<core::box::Box::<@core::felt252>>, 1>([8]) -> ([9]);
store_temp<Snapshot<Array<felt252>>>([4]) -> ([6]);
store_temp<core::option::Option::<core::box::Box::<@core::felt252>>>([9]) -> ([7]);
struct_construct<core::array::Span::<core::felt252>>([6]) -> ([10]);
store_temp<core::array::Span::<core::felt252>>([10]) -> ([10]);
enum_match<core::option::Option::<core::box::Box::<@core::felt252>>>([7]) { fallthrough([11]) 2369([12]) };
branch_align() -> ();
unbox<felt252>([11]) -> ([13]);
store_temp<felt252>([13]) -> ([13]);
rename<felt252>([13]) -> ([14]);
enum_init<core::option::Option::<core::felt252>, 0>([14]) -> ([15]);
store_temp<core::array::Span::<core::felt252>>([10]) -> ([16]);
store_temp<core::option::Option::<core::felt252>>([15]) -> ([17]);
return([16], [17]);
branch_align() -> ();
drop<Unit>([12]) -> ();
struct_construct<Unit>() -> ([18]);
enum_init<core::option::Option::<core::felt252>, 1>([18]) -> ([19]);
store_temp<core::array::Span::<core::felt252>>([10]) -> ([20]);
store_temp<core::option::Option::<core::felt252>>([19]) -> ([21]);
return([20], [21]);
struct_deconstruct<core::array::Span::<core::felt252>>([1]) -> ([2]);
array_snapshot_pop_front<felt252>([2]) { fallthrough([3], [4]) 2383([5]) };
branch_align() -> ();
enum_init<core::option::Option::<core::box::Box::<@core::felt252>>, 0>([4]) -> ([6]);
store_temp<Snapshot<Array<felt252>>>([3]) -> ([7]);
store_temp<core::option::Option::<core::box::Box::<@core::felt252>>>([6]) -> ([8]);
jump() { 2388() };
branch_align() -> ();
struct_construct<Unit>() -> ([9]);
enum_init<core::option::Option::<core::box::Box::<@core::felt252>>, 1>([9]) -> ([10]);
store_temp<Snapshot<Array<felt252>>>([5]) -> ([7]);
store_temp<core::option::Option::<core::box::Box::<@core::felt252>>>([10]) -> ([8]);
struct_construct<core::array::Span::<core::felt252>>([7]) -> ([11]);
store_temp<core::array::Span::<core::felt252>>([11]) -> ([11]);
enum_match<core::option::Option::<core::box::Box::<@core::felt252>>>([8]) { fallthrough([12]) 2411([13]) };
branch_align() -> ();
unbox<felt252>([12]) -> ([14]);
store_temp<felt252>([14]) -> ([14]);
rename<felt252>([14]) -> ([15]);
store_temp<RangeCheck>([0]) -> ([18]);
store_temp<felt252>([15]) -> ([19]);
function_call<user@core::integer::Felt252TryIntoU8::try_into>([18], [19]) -> ([16], [17]);
enum_match<core::option::Option::<core::integer::u8>>([17]) { fallthrough([20]) 2405([21]) };
branch_align() -> ();
enum_init<core::option::Option::<core::integer::u8>, 0>([20]) -> ([22]);
store_temp<RangeCheck>([16]) -> ([23]);
store_temp<core::array::Span::<core::felt252>>([11]) -> ([24]);
store_temp<core::option::Option::<core::integer::u8>>([22]) -> ([25]);
return([23], [24], [25]);
branch_align() -> ();
enum_init<core::option::Option::<core::integer::u8>, 1>([21]) -> ([26]);
store_temp<RangeCheck>([16]) -> ([27]);
store_temp<core::array::Span::<core::felt252>>([11]) -> ([28]);
store_temp<core::option::Option::<core::integer::u8>>([26]) -> ([29]);
return([27], [28], [29]);
branch_align() -> ();
drop<Unit>([13]) -> ();
struct_construct<Unit>() -> ([30]);
enum_init<core::option::Option::<core::integer::u8>, 1>([30]) -> ([31]);
store_temp<RangeCheck>([0]) -> ([32]);
store_temp<core::array::Span::<core::felt252>>([11]) -> ([33]);
store_temp<core::option::Option::<core::integer::u8>>([31]) -> ([34]);
return([32], [33], [34]);
struct_deconstruct<erc20::erc20::ERC20::Storage>([4]) -> ([10], [11], [12], [13], [14], [15]);
store_temp<GasBuiltin>([1]) -> ([19]);
store_temp<System>([3]) -> ([20]);
store_temp<erc20::erc20::ERC20::name::Storage>([10]) -> ([21]);
store_temp<felt252>([5]) -> ([22]);
function_call<user@erc20::erc20::ERC20::name::StorageImpl::write>([19], [20], [21], [22]) -> ([16], [17], [18]);
enum_match<core::PanicResult::<(erc20::erc20::ERC20::name::Storage, ())>>([18]) { fallthrough([23]) 2606([24]) };
branch_align() -> ();
struct_deconstruct<Tuple<erc20::erc20::ERC20::name::Storage, Unit>>([23]) -> ([25], [26]);
drop<Unit>([26]) -> ();
store_temp<GasBuiltin>([16]) -> ([30]);
store_temp<System>([17]) -> ([31]);
store_temp<erc20::erc20::ERC20::symbol::Storage>([11]) -> ([32]);
store_temp<felt252>([6]) -> ([33]);
function_call<user@erc20::erc20::ERC20::symbol::StorageImpl::write>([30], [31], [32], [33]) -> ([27], [28], [29]);
enum_match<core::PanicResult::<(erc20::erc20::ERC20::symbol::Storage, ())>>([29]) { fallthrough([34]) 2590([35]) };
branch_align() -> ();
struct_deconstruct<Tuple<erc20::erc20::ERC20::symbol::Storage, Unit>>([34]) -> ([36], [37]);
drop<Unit>([37]) -> ();
store_temp<GasBuiltin>([27]) -> ([41]);
store_temp<System>([28]) -> ([42]);
store_temp<erc20::erc20::ERC20::decimals::Storage>([12]) -> ([43]);
store_temp<u8>([7]) -> ([44]);
function_call<user@erc20::erc20::ERC20::decimals::StorageImpl::write>([41], [42], [43], [44]) -> ([38], [39], [40]);
enum_match<core::PanicResult::<(erc20::erc20::ERC20::decimals::Storage, ())>>([40]) { fallthrough([45]) 2575([46]) };
branch_align() -> ();
struct_deconstruct<Tuple<erc20::erc20::ERC20::decimals::Storage, Unit>>([45]) -> ([47], [48]);
drop<Unit>([48]) -> ();
dup<ContractAddress>([9]) -> ([9], [50]);
contract_address_to_felt252([50]) -> ([49]);
felt252_const<0>() -> ([51]);
felt252_sub([49], [51]) -> ([52]);
store_temp<felt252>([52]) -> ([52]);
felt252_is_zero([52]) { fallthrough() 2458([53]) };
branch_align() -> ();
struct_construct<Unit>() -> ([54]);
enum_init<core::bool, 1>([54]) -> ([55]);
store_temp<core::bool>([55]) -> ([56]);
jump() { 2463() };
branch_align() -> ();
drop<NonZero<felt252>>([53]) -> ();
struct_construct<Unit>() -> ([57]);
enum_init<core::bool, 0>([57]) -> ([58]);
store_temp<core::bool>([58]) -> ([56]);
bool_not_impl([56]) -> ([59]);
felt252_const<7300388948442106731950660484798539862217172507820428101544021685107>() -> ([60]);
store_temp<core::bool>([59]) -> ([62]);
store_temp<felt252>([60]) -> ([63]);
function_call<user@core::assert>([62], [63]) -> ([61]);
enum_match<core::PanicResult::<((),)>>([61]) { fallthrough([64]) 2559([65]) };
branch_align() -> ();
drop<Tuple<Unit>>([64]) -> ();
store_temp<GasBuiltin>([38]) -> ([69]);
store_temp<System>([39]) -> ([70]);
store_temp<erc20::erc20::ERC20::total_supply::Storage>([13]) -> ([71]);
dup<core::integer::u256>([8]) -> ([8], [72]);
store_temp<core::integer::u256>([72]) -> ([72]);
function_call<user@erc20::erc20::ERC20::total_supply::StorageImpl::write>([69], [70], [71], [72]) -> ([66], [67], [68]);
enum_match<core::PanicResult::<(erc20::erc20::ERC20::total_supply::Storage, ())>>([68]) { fallthrough([73]) 2544([74]) };
branch_align() -> ();
struct_deconstruct<Tuple<erc20::erc20::ERC20::total_supply::Storage, Unit>>([73]) -> ([75], [76]);
drop<Unit>([76]) -> ();
store_temp<RangeCheck>([0]) -> ([82]);
store_temp<GasBuiltin>([66]) -> ([83]);
store_temp<Pedersen>([2]) -> ([84]);
store_temp<System>([67]) -> ([85]);
store_temp<erc20::erc20::ERC20::balances::Storage>([14]) -> ([86]);
dup<ContractAddress>([9]) -> ([9], [87]);
store_temp<ContractAddress>([87]) -> ([87]);
dup<core::integer::u256>([8]) -> ([8], [88]);
store_temp<core::integer::u256>([88]) -> ([88]);
function_call<user@erc20::erc20::ERC20::balances::StorageImpl::write>([82], [83], [84], [85], [86], [87], [88]) -> ([77], [78], [79], [80], [81]);
enum_match<core::PanicResult::<(erc20::erc20::ERC20::balances::Storage, ())>>([81]) { fallthrough([89]) 2529([90]) };
branch_align() -> ();
struct_deconstruct<Tuple<erc20::erc20::ERC20::balances::Storage, Unit>>([89]) -> ([91], [92]);
drop<Unit>([92]) -> ();
contract_address_const<0>() -> ([93]);
store_temp<GasBuiltin>([78]) -> ([97]);
store_temp<System>([80]) -> ([98]);
store_temp<ContractAddress>([93]) -> ([99]);
store_temp<ContractAddress>([9]) -> ([100]);
store_temp<core::integer::u256>([8]) -> ([101]);
function_call<user@erc20::erc20::ERC20::Transfer>([97], [98], [99], [100], [101]) -> ([94], [95], [96]);
enum_match<core::PanicResult::<((),)>>([96]) { fallthrough([102]) 2515([103]) };
branch_align() -> ();
drop<Tuple<Unit>>([102]) -> ();
struct_construct<erc20::erc20::ERC20::Storage>([25], [36], [47], [75], [91], [15]) -> ([104]);
struct_construct<Unit>() -> ([105]);
struct_construct<Tuple<erc20::erc20::ERC20::Storage, Unit>>([104], [105]) -> ([106]);
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 0>([106]) -> ([107]);
store_temp<RangeCheck>([77]) -> ([108]);
store_temp<GasBuiltin>([94]) -> ([109]);
store_temp<Pedersen>([79]) -> ([110]);
store_temp<System>([95]) -> ([111]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([107]) -> ([112]);
return([108], [109], [110], [111], [112]);
branch_align() -> ();
drop<erc20::erc20::ERC20::allowances::Storage>([15]) -> ();
drop<erc20::erc20::ERC20::balances::Storage>([91]) -> ();
drop<erc20::erc20::ERC20::total_supply::Storage>([75]) -> ();
drop<erc20::erc20::ERC20::decimals::Storage>([47]) -> ();
drop<erc20::erc20::ERC20::symbol::Storage>([36]) -> ();
drop<erc20::erc20::ERC20::name::Storage>([25]) -> ();
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 1>([103]) -> ([113]);
store_temp<RangeCheck>([77]) -> ([114]);
store_temp<GasBuiltin>([94]) -> ([115]);
store_temp<Pedersen>([79]) -> ([116]);
store_temp<System>([95]) -> ([117]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([113]) -> ([118]);
return([114], [115], [116], [117], [118]);
branch_align() -> ();
drop<erc20::erc20::ERC20::name::Storage>([25]) -> ();
drop<erc20::erc20::ERC20::symbol::Storage>([36]) -> ();
drop<erc20::erc20::ERC20::allowances::Storage>([15]) -> ();
drop<erc20::erc20::ERC20::total_supply::Storage>([75]) -> ();
drop<erc20::erc20::ERC20::decimals::Storage>([47]) -> ();
drop<core::integer::u256>([8]) -> ();
drop<ContractAddress>([9]) -> ();
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 1>([90]) -> ([119]);
store_temp<RangeCheck>([77]) -> ([120]);
store_temp<GasBuiltin>([78]) -> ([121]);
store_temp<Pedersen>([79]) -> ([122]);
store_temp<System>([80]) -> ([123]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([119]) -> ([124]);
return([120], [121], [122], [123], [124]);
branch_align() -> ();
drop<erc20::erc20::ERC20::decimals::Storage>([47]) -> ();
drop<erc20::erc20::ERC20::name::Storage>([25]) -> ();
drop<ContractAddress>([9]) -> ();
drop<erc20::erc20::ERC20::symbol::Storage>([36]) -> ();
drop<erc20::erc20::ERC20::allowances::Storage>([15]) -> ();
drop<core::integer::u256>([8]) -> ();
drop<erc20::erc20::ERC20::balances::Storage>([14]) -> ();
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 1>([74]) -> ([125]);
store_temp<RangeCheck>([0]) -> ([126]);
store_temp<GasBuiltin>([66]) -> ([127]);
store_temp<Pedersen>([2]) -> ([128]);
store_temp<System>([67]) -> ([129]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([125]) -> ([130]);
return([126], [127], [128], [129], [130]);
branch_align() -> ();
drop<erc20::erc20::ERC20::decimals::Storage>([47]) -> ();
drop<erc20::erc20::ERC20::name::Storage>([25]) -> ();
drop<ContractAddress>([9]) -> ();
drop<erc20::erc20::ERC20::symbol::Storage>([36]) -> ();
drop<erc20::erc20::ERC20::allowances::Storage>([15]) -> ();
drop<core::integer::u256>([8]) -> ();
drop<erc20::erc20::ERC20::balances::Storage>([14]) -> ();
drop<erc20::erc20::ERC20::total_supply::Storage>([13]) -> ();
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 1>([65]) -> ([131]);
store_temp<RangeCheck>([0]) -> ([132]);
store_temp<GasBuiltin>([38]) -> ([133]);
store_temp<Pedersen>([2]) -> ([134]);
store_temp<System>([39]) -> ([135]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([131]) -> ([136]);
return([132], [133], [134], [135], [136]);
branch_align() -> ();
drop<erc20::erc20::ERC20::name::Storage>([25]) -> ();
drop<ContractAddress>([9]) -> ();
drop<erc20::erc20::ERC20::symbol::Storage>([36]) -> ();
drop<erc20::erc20::ERC20::allowances::Storage>([15]) -> ();
drop<core::integer::u256>([8]) -> ();
drop<erc20::erc20::ERC20::balances::Storage>([14]) -> ();
drop<erc20::erc20::ERC20::total_supply::Storage>([13]) -> ();
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 1>([46]) -> ([137]);
store_temp<RangeCheck>([0]) -> ([138]);
store_temp<GasBuiltin>([38]) -> ([139]);
store_temp<Pedersen>([2]) -> ([140]);
store_temp<System>([39]) -> ([141]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([137]) -> ([142]);
return([138], [139], [140], [141], [142]);
branch_align() -> ();
drop<erc20::erc20::ERC20::total_supply::Storage>([13]) -> ();
drop<erc20::erc20::ERC20::name::Storage>([25]) -> ();
drop<ContractAddress>([9]) -> ();
drop<erc20::erc20::ERC20::allowances::Storage>([15]) -> ();
drop<core::integer::u256>([8]) -> ();
drop<erc20::erc20::ERC20::balances::Storage>([14]) -> ();
drop<u8>([7]) -> ();
drop<erc20::erc20::ERC20::decimals::Storage>([12]) -> ();
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 1>([35]) -> ([143]);
store_temp<RangeCheck>([0]) -> ([144]);
store_temp<GasBuiltin>([27]) -> ([145]);
store_temp<Pedersen>([2]) -> ([146]);
store_temp<System>([28]) -> ([147]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([143]) -> ([148]);
return([144], [145], [146], [147], [148]);
branch_align() -> ();
drop<erc20::erc20::ERC20::total_supply::Storage>([13]) -> ();
drop<ContractAddress>([9]) -> ();
drop<erc20::erc20::ERC20::decimals::Storage>([12]) -> ();
drop<erc20::erc20::ERC20::allowances::Storage>([15]) -> ();
drop<core::integer::u256>([8]) -> ();
drop<erc20::erc20::ERC20::balances::Storage>([14]) -> ();
drop<u8>([7]) -> ();
drop<felt252>([6]) -> ();
drop<erc20::erc20::ERC20::symbol::Storage>([11]) -> ();
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 1>([24]) -> ([149]);
store_temp<RangeCheck>([0]) -> ([150]);
store_temp<GasBuiltin>([16]) -> ([151]);
store_temp<Pedersen>([2]) -> ([152]);
store_temp<System>([17]) -> ([153]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([149]) -> ([154]);
return([150], [151], [152], [153], [154]);
drop<erc20::erc20::ERC20::name::Storage>([2]) -> ();
storage_base_address_const<1528802474226268325865027367859591458315299653151958663884057507666229546336>() -> ([3]);
storage_address_from_base([3]) -> ([4]);
u32_const<0>() -> ([5]);
store_temp<u32>([5]) -> ([5]);
store_temp<StorageAddress>([4]) -> ([4]);
storage_read_syscall([0], [1], [5], [4]) { fallthrough([6], [7], [8]) 2636([9], [10], [11]) };
branch_align() -> ();
enum_init<core::result::Result::<core::felt252, core::array::Array::<core::felt252>>, 0>([8]) -> ([12]);
store_temp<GasBuiltin>([6]) -> ([13]);
store_temp<System>([7]) -> ([14]);
store_temp<core::result::Result::<core::felt252, core::array::Array::<core::felt252>>>([12]) -> ([15]);
jump() { 2641() };
branch_align() -> ();
enum_init<core::result::Result::<core::felt252, core::array::Array::<core::felt252>>, 1>([11]) -> ([16]);
store_temp<GasBuiltin>([9]) -> ([13]);
store_temp<System>([10]) -> ([14]);
store_temp<core::result::Result::<core::felt252, core::array::Array::<core::felt252>>>([16]) -> ([15]);
rename<core::result::Result::<core::felt252, core::array::Array::<core::felt252>>>([15]) -> ([18]);
function_call<user@core::starknet::SyscallResultTraitImpl::<core::felt252>::unwrap_syscall>([18]) -> ([17]);
enum_match<core::PanicResult::<(core::felt252,)>>([17]) { fallthrough([19]) 2652([20]) };
branch_align() -> ();
struct_deconstruct<Tuple<felt252>>([19]) -> ([21]);
struct_construct<Tuple<felt252>>([21]) -> ([22]);
enum_init<core::PanicResult::<(core::felt252,)>, 0>([22]) -> ([23]);
store_temp<GasBuiltin>([13]) -> ([24]);
store_temp<System>([14]) -> ([25]);
store_temp<core::PanicResult::<(core::felt252,)>>([23]) -> ([26]);
return([24], [25], [26]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::felt252,)>, 1>([20]) -> ([27]);
store_temp<GasBuiltin>([13]) -> ([28]);
store_temp<System>([14]) -> ([29]);
store_temp<core::PanicResult::<(core::felt252,)>>([27]) -> ([30]);
return([28], [29], [30]);
drop<erc20::erc20::ERC20::symbol::Storage>([2]) -> ();
storage_base_address_const<944713526212149105522785400348068751682982210605126537021911324578866405028>() -> ([3]);
storage_address_from_base([3]) -> ([4]);
u32_const<0>() -> ([5]);
store_temp<u32>([5]) -> ([5]);
store_temp<StorageAddress>([4]) -> ([4]);
storage_read_syscall([0], [1], [5], [4]) { fallthrough([6], [7], [8]) 2671([9], [10], [11]) };
branch_align() -> ();
enum_init<core::result::Result::<core::felt252, core::array::Array::<core::felt252>>, 0>([8]) -> ([12]);
store_temp<GasBuiltin>([6]) -> ([13]);
store_temp<System>([7]) -> ([14]);
store_temp<core::result::Result::<core::felt252, core::array::Array::<core::felt252>>>([12]) -> ([15]);
jump() { 2676() };
branch_align() -> ();
enum_init<core::result::Result::<core::felt252, core::array::Array::<core::felt252>>, 1>([11]) -> ([16]);
store_temp<GasBuiltin>([9]) -> ([13]);
store_temp<System>([10]) -> ([14]);
store_temp<core::result::Result::<core::felt252, core::array::Array::<core::felt252>>>([16]) -> ([15]);
rename<core::result::Result::<core::felt252, core::array::Array::<core::felt252>>>([15]) -> ([18]);
function_call<user@core::starknet::SyscallResultTraitImpl::<core::felt252>::unwrap_syscall>([18]) -> ([17]);
enum_match<core::PanicResult::<(core::felt252,)>>([17]) { fallthrough([19]) 2687([20]) };
branch_align() -> ();
struct_deconstruct<Tuple<felt252>>([19]) -> ([21]);
struct_construct<Tuple<felt252>>([21]) -> ([22]);
enum_init<core::PanicResult::<(core::felt252,)>, 0>([22]) -> ([23]);
store_temp<GasBuiltin>([13]) -> ([24]);
store_temp<System>([14]) -> ([25]);
store_temp<core::PanicResult::<(core::felt252,)>>([23]) -> ([26]);
return([24], [25], [26]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::felt252,)>, 1>([20]) -> ([27]);
store_temp<GasBuiltin>([13]) -> ([28]);
store_temp<System>([14]) -> ([29]);
store_temp<core::PanicResult::<(core::felt252,)>>([27]) -> ([30]);
return([28], [29], [30]);
drop<erc20::erc20::ERC20::decimals::Storage>([3]) -> ();
storage_base_address_const<134830404806214277570220174593674215737759987247891306080029841794115377321>() -> ([4]);
u32_const<0>() -> ([5]);
store_temp<RangeCheck>([0]) -> ([10]);
store_temp<GasBuiltin>([1]) -> ([11]);
store_temp<System>([2]) -> ([12]);
store_temp<u32>([5]) -> ([13]);
store_temp<StorageBaseAddress>([4]) -> ([14]);
function_call<user@core::starknet::storage_access::StorageAccessU8::read>([10], [11], [12], [13], [14]) -> ([6], [7], [8], [9]);
enum_match<core::PanicResult::<(core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>,)>>([9]) { fallthrough([15]) 2724([16]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>>>([15]) -> ([17]);
store_temp<core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>>([17]) -> ([19]);
function_call<user@core::starknet::SyscallResultTraitImpl::<core::integer::u8>::unwrap_syscall>([19]) -> ([18]);
enum_match<core::PanicResult::<(core::integer::u8,)>>([18]) { fallthrough([20]) 2717([21]) };
branch_align() -> ();
struct_deconstruct<Tuple<u8>>([20]) -> ([22]);
struct_construct<Tuple<u8>>([22]) -> ([23]);
enum_init<core::PanicResult::<(core::integer::u8,)>, 0>([23]) -> ([24]);
store_temp<RangeCheck>([6]) -> ([25]);
store_temp<GasBuiltin>([7]) -> ([26]);
store_temp<System>([8]) -> ([27]);
store_temp<core::PanicResult::<(core::integer::u8,)>>([24]) -> ([28]);
return([25], [26], [27], [28]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::integer::u8,)>, 1>([21]) -> ([29]);
store_temp<RangeCheck>([6]) -> ([30]);
store_temp<GasBuiltin>([7]) -> ([31]);
store_temp<System>([8]) -> ([32]);
store_temp<core::PanicResult::<(core::integer::u8,)>>([29]) -> ([33]);
return([30], [31], [32], [33]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::integer::u8,)>, 1>([16]) -> ([34]);
store_temp<RangeCheck>([6]) -> ([35]);
store_temp<GasBuiltin>([7]) -> ([36]);
store_temp<System>([8]) -> ([37]);
store_temp<core::PanicResult::<(core::integer::u8,)>>([34]) -> ([38]);
return([35], [36], [37], [38]);
drop<erc20::erc20::ERC20::total_supply::Storage>([3]) -> ();
storage_base_address_const<603278275252936218847294002513349627170936020082667936993356353388973422646>() -> ([4]);
u32_const<0>() -> ([5]);
store_temp<RangeCheck>([0]) -> ([10]);
store_temp<GasBuiltin>([1]) -> ([11]);
store_temp<System>([2]) -> ([12]);
store_temp<u32>([5]) -> ([13]);
store_temp<StorageBaseAddress>([4]) -> ([14]);
function_call<user@core::starknet::storage_access::StorageAccessU256::read>([10], [11], [12], [13], [14]) -> ([6], [7], [8], [9]);
enum_match<core::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>>([9]) { fallthrough([15]) 2762([16]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>>>([15]) -> ([17]);
store_temp<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>>([17]) -> ([19]);
function_call<user@core::starknet::SyscallResultTraitImpl::<core::integer::u256>::unwrap_syscall>([19]) -> ([18]);
enum_match<core::PanicResult::<(core::integer::u256,)>>([18]) { fallthrough([20]) 2755([21]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::integer::u256>>([20]) -> ([22]);
struct_construct<Tuple<core::integer::u256>>([22]) -> ([23]);
enum_init<core::PanicResult::<(core::integer::u256,)>, 0>([23]) -> ([24]);
store_temp<RangeCheck>([6]) -> ([25]);
store_temp<GasBuiltin>([7]) -> ([26]);
store_temp<System>([8]) -> ([27]);
store_temp<core::PanicResult::<(core::integer::u256,)>>([24]) -> ([28]);
return([25], [26], [27], [28]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::integer::u256,)>, 1>([21]) -> ([29]);
store_temp<RangeCheck>([6]) -> ([30]);
store_temp<GasBuiltin>([7]) -> ([31]);
store_temp<System>([8]) -> ([32]);
store_temp<core::PanicResult::<(core::integer::u256,)>>([29]) -> ([33]);
return([30], [31], [32], [33]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::integer::u256,)>, 1>([16]) -> ([34]);
store_temp<RangeCheck>([6]) -> ([35]);
store_temp<GasBuiltin>([7]) -> ([36]);
store_temp<System>([8]) -> ([37]);
store_temp<core::PanicResult::<(core::integer::u256,)>>([34]) -> ([38]);
return([35], [36], [37], [38]);
rename<u128>([0]) -> ([2]);
u128_to_felt252([2]) -> ([3]);
dup<felt252>([3]) -> ([4], [5]);
drop<felt252>([4]) -> ();
store_temp<felt252>([5]) -> ([8]);
store_temp<Array<felt252>>([1]) -> ([9]);
function_call<user@core::serde::Felt252Serde::serialize>([8], [9]) -> ([6], [7]);
drop<Unit>([7]) -> ();
struct_construct<Unit>() -> ([10]);
store_temp<Array<felt252>>([6]) -> ([11]);
store_temp<Unit>([10]) -> ([12]);
return([11], [12]);
store_temp<RangeCheck>([0]) -> ([9]);
store_temp<Pedersen>([2]) -> ([10]);
store_temp<erc20::erc20::ERC20::balances::Storage>([4]) -> ([11]);
store_temp<ContractAddress>([5]) -> ([12]);
function_call<user@erc20::erc20::ERC20::balances::StorageImpl::address>([9], [10], [11], [12]) -> ([6], [7], [8]);
u32_const<0>() -> ([13]);
store_temp<RangeCheck>([6]) -> ([18]);
store_temp<GasBuiltin>([1]) -> ([19]);
store_temp<System>([3]) -> ([20]);
store_temp<u32>([13]) -> ([21]);
store_temp<StorageBaseAddress>([8]) -> ([22]);
function_call<user@core::starknet::storage_access::StorageAccessU256::read>([18], [19], [20], [21], [22]) -> ([14], [15], [16], [17]);
enum_match<core::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>>([17]) { fallthrough([23]) 2817([24]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>>>([23]) -> ([25]);
store_temp<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>>([25]) -> ([27]);
function_call<user@core::starknet::SyscallResultTraitImpl::<core::integer::u256>::unwrap_syscall>([27]) -> ([26]);
enum_match<core::PanicResult::<(core::integer::u256,)>>([26]) { fallthrough([28]) 2809([29]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::integer::u256>>([28]) -> ([30]);
struct_construct<Tuple<core::integer::u256>>([30]) -> ([31]);
enum_init<core::PanicResult::<(core::integer::u256,)>, 0>([31]) -> ([32]);
store_temp<RangeCheck>([14]) -> ([33]);
store_temp<GasBuiltin>([15]) -> ([34]);
store_temp<Pedersen>([7]) -> ([35]);
store_temp<System>([16]) -> ([36]);
store_temp<core::PanicResult::<(core::integer::u256,)>>([32]) -> ([37]);
return([33], [34], [35], [36], [37]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::integer::u256,)>, 1>([29]) -> ([38]);
store_temp<RangeCheck>([14]) -> ([39]);
store_temp<GasBuiltin>([15]) -> ([40]);
store_temp<Pedersen>([7]) -> ([41]);
store_temp<System>([16]) -> ([42]);
store_temp<core::PanicResult::<(core::integer::u256,)>>([38]) -> ([43]);
return([39], [40], [41], [42], [43]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::integer::u256,)>, 1>([24]) -> ([44]);
store_temp<RangeCheck>([14]) -> ([45]);
store_temp<GasBuiltin>([15]) -> ([46]);
store_temp<Pedersen>([7]) -> ([47]);
store_temp<System>([16]) -> ([48]);
store_temp<core::PanicResult::<(core::integer::u256,)>>([44]) -> ([49]);
return([45], [46], [47], [48], [49]);
store_temp<RangeCheck>([0]) -> ([9]);
store_temp<Pedersen>([2]) -> ([10]);
store_temp<erc20::erc20::ERC20::allowances::Storage>([4]) -> ([11]);
store_temp<Tuple<ContractAddress, ContractAddress>>([5]) -> ([12]);
function_call<user@erc20::erc20::ERC20::allowances::StorageImpl::address>([9], [10], [11], [12]) -> ([6], [7], [8]);
u32_const<0>() -> ([13]);
store_temp<RangeCheck>([6]) -> ([18]);
store_temp<GasBuiltin>([1]) -> ([19]);
store_temp<System>([3]) -> ([20]);
store_temp<u32>([13]) -> ([21]);
store_temp<StorageBaseAddress>([8]) -> ([22]);
function_call<user@core::starknet::storage_access::StorageAccessU256::read>([18], [19], [20], [21], [22]) -> ([14], [15], [16], [17]);
enum_match<core::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>>([17]) { fallthrough([23]) 2861([24]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>>>([23]) -> ([25]);
store_temp<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>>([25]) -> ([27]);
function_call<user@core::starknet::SyscallResultTraitImpl::<core::integer::u256>::unwrap_syscall>([27]) -> ([26]);
enum_match<core::PanicResult::<(core::integer::u256,)>>([26]) { fallthrough([28]) 2853([29]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::integer::u256>>([28]) -> ([30]);
struct_construct<Tuple<core::integer::u256>>([30]) -> ([31]);
enum_init<core::PanicResult::<(core::integer::u256,)>, 0>([31]) -> ([32]);
store_temp<RangeCheck>([14]) -> ([33]);
store_temp<GasBuiltin>([15]) -> ([34]);
store_temp<Pedersen>([7]) -> ([35]);
store_temp<System>([16]) -> ([36]);
store_temp<core::PanicResult::<(core::integer::u256,)>>([32]) -> ([37]);
return([33], [34], [35], [36], [37]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::integer::u256,)>, 1>([29]) -> ([38]);
store_temp<RangeCheck>([14]) -> ([39]);
store_temp<GasBuiltin>([15]) -> ([40]);
store_temp<Pedersen>([7]) -> ([41]);
store_temp<System>([16]) -> ([42]);
store_temp<core::PanicResult::<(core::integer::u256,)>>([38]) -> ([43]);
return([39], [40], [41], [42], [43]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::integer::u256,)>, 1>([24]) -> ([44]);
store_temp<RangeCheck>([14]) -> ([45]);
store_temp<GasBuiltin>([15]) -> ([46]);
store_temp<Pedersen>([7]) -> ([47]);
store_temp<System>([16]) -> ([48]);
store_temp<core::PanicResult::<(core::integer::u256,)>>([44]) -> ([49]);
return([45], [46], [47], [48], [49]);
struct_deconstruct<core::array::Span::<core::felt252>>([1]) -> ([2]);
array_snapshot_pop_front<felt252>([2]) { fallthrough([3], [4]) 2876([5]) };
branch_align() -> ();
enum_init<core::option::Option::<core::box::Box::<@core::felt252>>, 0>([4]) -> ([6]);
store_temp<Snapshot<Array<felt252>>>([3]) -> ([7]);
store_temp<core::option::Option::<core::box::Box::<@core::felt252>>>([6]) -> ([8]);
jump() { 2881() };
branch_align() -> ();
struct_construct<Unit>() -> ([9]);
enum_init<core::option::Option::<core::box::Box::<@core::felt252>>, 1>([9]) -> ([10]);
store_temp<Snapshot<Array<felt252>>>([5]) -> ([7]);
store_temp<core::option::Option::<core::box::Box::<@core::felt252>>>([10]) -> ([8]);
struct_construct<core::array::Span::<core::felt252>>([7]) -> ([11]);
store_temp<core::array::Span::<core::felt252>>([11]) -> ([11]);
enum_match<core::option::Option::<core::box::Box::<@core::felt252>>>([8]) { fallthrough([12]) 2904([13]) };
branch_align() -> ();
unbox<felt252>([12]) -> ([14]);
store_temp<felt252>([14]) -> ([14]);
rename<felt252>([14]) -> ([15]);
store_temp<RangeCheck>([0]) -> ([18]);
store_temp<felt252>([15]) -> ([19]);
function_call<user@core::integer::u128_try_from_felt252>([18], [19]) -> ([16], [17]);
enum_match<core::option::Option::<core::integer::u128>>([17]) { fallthrough([20]) 2898([21]) };
branch_align() -> ();
enum_init<core::option::Option::<core::integer::u128>, 0>([20]) -> ([22]);
store_temp<RangeCheck>([16]) -> ([23]);
store_temp<core::array::Span::<core::felt252>>([11]) -> ([24]);
store_temp<core::option::Option::<core::integer::u128>>([22]) -> ([25]);
return([23], [24], [25]);
branch_align() -> ();
enum_init<core::option::Option::<core::integer::u128>, 1>([21]) -> ([26]);
store_temp<RangeCheck>([16]) -> ([27]);
store_temp<core::array::Span::<core::felt252>>([11]) -> ([28]);
store_temp<core::option::Option::<core::integer::u128>>([26]) -> ([29]);
return([27], [28], [29]);
branch_align() -> ();
drop<Unit>([13]) -> ();
struct_construct<Unit>() -> ([30]);
enum_init<core::option::Option::<core::integer::u128>, 1>([30]) -> ([31]);
store_temp<RangeCheck>([0]) -> ([32]);
store_temp<core::array::Span::<core::felt252>>([11]) -> ([33]);
store_temp<core::option::Option::<core::integer::u128>>([31]) -> ([34]);
return([32], [33], [34]);
store_temp<GasBuiltin>([0]) -> ([5]);
store_temp<System>([1]) -> ([6]);
function_call<user@core::starknet::info::get_execution_info>([5], [6]) -> ([2], [3], [4]);
enum_match<core::PanicResult::<(core::box::Box::<core::starknet::info::ExecutionInfo>,)>>([4]) { fallthrough([7]) 2930([8]) };
branch_align() -> ();
struct_deconstruct<Tuple<Box<core::starknet::info::ExecutionInfo>>>([7]) -> ([9]);
unbox<core::starknet::info::ExecutionInfo>([9]) -> ([10]);
struct_deconstruct<core::starknet::info::ExecutionInfo>([10]) -> ([11], [12], [13], [14], [15]);
drop<Box<core::starknet::info::BlockInfo>>([11]) -> ();
drop<Box<core::starknet::info::TxInfo>>([12]) -> ();
drop<ContractAddress>([14]) -> ();
drop<felt252>([15]) -> ();
struct_construct<Tuple<ContractAddress>>([13]) -> ([16]);
enum_init<core::PanicResult::<(core::starknet::contract_address::ContractAddress,)>, 0>([16]) -> ([17]);
store_temp<GasBuiltin>([2]) -> ([18]);
store_temp<System>([3]) -> ([19]);
store_temp<core::PanicResult::<(core::starknet::contract_address::ContractAddress,)>>([17]) -> ([20]);
return([18], [19], [20]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::starknet::contract_address::ContractAddress,)>, 1>([8]) -> ([21]);
store_temp<GasBuiltin>([2]) -> ([22]);
store_temp<System>([3]) -> ([23]);
store_temp<core::PanicResult::<(core::starknet::contract_address::ContractAddress,)>>([21]) -> ([24]);
return([22], [23], [24]);
dup<ContractAddress>([5]) -> ([5], [9]);
contract_address_to_felt252([9]) -> ([8]);
felt252_const<0>() -> ([10]);
felt252_sub([8], [10]) -> ([11]);
store_temp<felt252>([11]) -> ([11]);
felt252_is_zero([11]) { fallthrough() 2947([12]) };
branch_align() -> ();
struct_construct<Unit>() -> ([13]);
enum_init<core::bool, 1>([13]) -> ([14]);
store_temp<core::bool>([14]) -> ([15]);
jump() { 2952() };
branch_align() -> ();
drop<NonZero<felt252>>([12]) -> ();
struct_construct<Unit>() -> ([16]);
enum_init<core::bool, 0>([16]) -> ([17]);
store_temp<core::bool>([17]) -> ([15]);
bool_not_impl([15]) -> ([18]);
felt252_const<25936191677694277552149992725516921697451103245639728>() -> ([19]);
store_temp<core::bool>([18]) -> ([21]);
store_temp<felt252>([19]) -> ([22]);
function_call<user@core::assert>([21], [22]) -> ([20]);
enum_match<core::PanicResult::<((),)>>([20]) { fallthrough([23]) 3196([24]) };
branch_align() -> ();
drop<Tuple<Unit>>([23]) -> ();
dup<ContractAddress>([6]) -> ([6], [26]);
contract_address_to_felt252([26]) -> ([25]);
felt252_const<0>() -> ([27]);
felt252_sub([25], [27]) -> ([28]);
store_temp<felt252>([28]) -> ([28]);
felt252_is_zero([28]) { fallthrough() 2971([29]) };
branch_align() -> ();
struct_construct<Unit>() -> ([30]);
enum_init<core::bool, 1>([30]) -> ([31]);
store_temp<core::bool>([31]) -> ([32]);
jump() { 2976() };
branch_align() -> ();
drop<NonZero<felt252>>([29]) -> ();
struct_construct<Unit>() -> ([33]);
enum_init<core::bool, 0>([33]) -> ([34]);
store_temp<core::bool>([34]) -> ([32]);
bool_not_impl([32]) -> ([35]);
felt252_const<395754877894504967531585582359572169455970492464>() -> ([36]);
store_temp<core::bool>([35]) -> ([38]);
store_temp<felt252>([36]) -> ([39]);
function_call<user@core::assert>([38], [39]) -> ([37]);
enum_match<core::PanicResult::<((),)>>([37]) { fallthrough([40]) 3184([41]) };
branch_align() -> ();
drop<Tuple<Unit>>([40]) -> ();
struct_deconstruct<erc20::erc20::ERC20::Storage>([4]) -> ([42], [43], [44], [45], [46], [47]);
dup<erc20::erc20::ERC20::balances::Storage>([46]) -> ([48], [49]);
store_temp<RangeCheck>([0]) -> ([55]);
store_temp<GasBuiltin>([1]) -> ([56]);
store_temp<Pedersen>([2]) -> ([57]);
store_temp<System>([3]) -> ([58]);
store_temp<erc20::erc20::ERC20::balances::Storage>([49]) -> ([59]);
dup<ContractAddress>([5]) -> ([5], [60]);
store_temp<ContractAddress>([60]) -> ([60]);
function_call<user@erc20::erc20::ERC20::balances::StorageImpl::read>([55], [56], [57], [58], [59], [60]) -> ([50], [51], [52], [53], [54]);
enum_match<core::PanicResult::<(core::integer::u256,)>>([54]) { fallthrough([61]) 3167([62]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::integer::u256>>([61]) -> ([63]);
store_temp<RangeCheck>([50]) -> ([66]);
store_temp<core::integer::u256>([63]) -> ([67]);
dup<core::integer::u256>([7]) -> ([7], [68]);
store_temp<core::integer::u256>([68]) -> ([68]);
function_call<user@core::integer::U256Sub::sub>([66], [67], [68]) -> ([64], [65]);
enum_match<core::PanicResult::<(core::integer::u256,)>>([65]) { fallthrough([69]) 3150([70]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::integer::u256>>([69]) -> ([71]);
store_temp<RangeCheck>([64]) -> ([77]);
store_temp<GasBuiltin>([51]) -> ([78]);
store_temp<Pedersen>([52]) -> ([79]);
store_temp<System>([53]) -> ([80]);
store_temp<erc20::erc20::ERC20::balances::Storage>([48]) -> ([81]);
dup<ContractAddress>([5]) -> ([5], [82]);
store_temp<ContractAddress>([82]) -> ([82]);
store_temp<core::integer::u256>([71]) -> ([83]);
function_call<user@erc20::erc20::ERC20::balances::StorageImpl::write>([77], [78], [79], [80], [81], [82], [83]) -> ([72], [73], [74], [75], [76]);
enum_match<core::PanicResult::<(erc20::erc20::ERC20::balances::Storage, ())>>([76]) { fallthrough([84]) 3134([85]) };
branch_align() -> ();
struct_deconstruct<Tuple<erc20::erc20::ERC20::balances::Storage, Unit>>([84]) -> ([86], [87]);
drop<Unit>([87]) -> ();
dup<erc20::erc20::ERC20::balances::Storage>([86]) -> ([88], [89]);
store_temp<RangeCheck>([72]) -> ([95]);
store_temp<GasBuiltin>([73]) -> ([96]);
store_temp<Pedersen>([74]) -> ([97]);
store_temp<System>([75]) -> ([98]);
store_temp<erc20::erc20::ERC20::balances::Storage>([89]) -> ([99]);
dup<ContractAddress>([6]) -> ([6], [100]);
store_temp<ContractAddress>([100]) -> ([100]);
function_call<user@erc20::erc20::ERC20::balances::StorageImpl::read>([95], [96], [97], [98], [99], [100]) -> ([90], [91], [92], [93], [94]);
enum_match<core::PanicResult::<(core::integer::u256,)>>([94]) { fallthrough([101]) 3117([102]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::integer::u256>>([101]) -> ([103]);
store_temp<RangeCheck>([90]) -> ([106]);
store_temp<core::integer::u256>([103]) -> ([107]);
dup<core::integer::u256>([7]) -> ([7], [108]);
store_temp<core::integer::u256>([108]) -> ([108]);
function_call<user@core::integer::U256Add::add>([106], [107], [108]) -> ([104], [105]);
enum_match<core::PanicResult::<(core::integer::u256,)>>([105]) { fallthrough([109]) 3100([110]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::integer::u256>>([109]) -> ([111]);
store_temp<RangeCheck>([104]) -> ([117]);
store_temp<GasBuiltin>([91]) -> ([118]);
store_temp<Pedersen>([92]) -> ([119]);
store_temp<System>([93]) -> ([120]);
store_temp<erc20::erc20::ERC20::balances::Storage>([88]) -> ([121]);
dup<ContractAddress>([6]) -> ([6], [122]);
store_temp<ContractAddress>([122]) -> ([122]);
store_temp<core::integer::u256>([111]) -> ([123]);
function_call<user@erc20::erc20::ERC20::balances::StorageImpl::write>([117], [118], [119], [120], [121], [122], [123]) -> ([112], [113], [114], [115], [116]);
enum_match<core::PanicResult::<(erc20::erc20::ERC20::balances::Storage, ())>>([116]) { fallthrough([124]) 3084([125]) };
branch_align() -> ();
struct_deconstruct<Tuple<erc20::erc20::ERC20::balances::Storage, Unit>>([124]) -> ([126], [127]);
drop<Unit>([127]) -> ();
store_temp<GasBuiltin>([113]) -> ([131]);
store_temp<System>([115]) -> ([132]);
store_temp<ContractAddress>([5]) -> ([133]);
store_temp<ContractAddress>([6]) -> ([134]);
store_temp<core::integer::u256>([7]) -> ([135]);
function_call<user@erc20::erc20::ERC20::Transfer>([131], [132], [133], [134], [135]) -> ([128], [129], [130]);
enum_match<core::PanicResult::<((),)>>([130]) { fallthrough([136]) 3070([137]) };
branch_align() -> ();
drop<Tuple<Unit>>([136]) -> ();
struct_construct<erc20::erc20::ERC20::Storage>([42], [43], [44], [45], [126], [47]) -> ([138]);
struct_construct<Unit>() -> ([139]);
struct_construct<Tuple<erc20::erc20::ERC20::Storage, Unit>>([138], [139]) -> ([140]);
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 0>([140]) -> ([141]);
store_temp<RangeCheck>([112]) -> ([142]);
store_temp<GasBuiltin>([128]) -> ([143]);
store_temp<Pedersen>([114]) -> ([144]);
store_temp<System>([129]) -> ([145]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([141]) -> ([146]);
return([142], [143], [144], [145], [146]);
branch_align() -> ();
drop<erc20::erc20::ERC20::allowances::Storage>([47]) -> ();
drop<erc20::erc20::ERC20::balances::Storage>([126]) -> ();
drop<erc20::erc20::ERC20::total_supply::Storage>([45]) -> ();
drop<erc20::erc20::ERC20::decimals::Storage>([44]) -> ();
drop<erc20::erc20::ERC20::symbol::Storage>([43]) -> ();
drop<erc20::erc20::ERC20::name::Storage>([42]) -> ();
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 1>([137]) -> ([147]);
store_temp<RangeCheck>([112]) -> ([148]);
store_temp<GasBuiltin>([128]) -> ([149]);
store_temp<Pedersen>([114]) -> ([150]);
store_temp<System>([129]) -> ([151]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([147]) -> ([152]);
return([148], [149], [150], [151], [152]);
branch_align() -> ();
drop<erc20::erc20::ERC20::name::Storage>([42]) -> ();
drop<erc20::erc20::ERC20::symbol::Storage>([43]) -> ();
drop<erc20::erc20::ERC20::allowances::Storage>([47]) -> ();
drop<erc20::erc20::ERC20::total_supply::Storage>([45]) -> ();
drop<erc20::erc20::ERC20::decimals::Storage>([44]) -> ();
drop<core::integer::u256>([7]) -> ();
drop<ContractAddress>([6]) -> ();
drop<ContractAddress>([5]) -> ();
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 1>([125]) -> ([153]);
store_temp<RangeCheck>([112]) -> ([154]);
store_temp<GasBuiltin>([113]) -> ([155]);
store_temp<Pedersen>([114]) -> ([156]);
store_temp<System>([115]) -> ([157]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([153]) -> ([158]);
return([154], [155], [156], [157], [158]);
branch_align() -> ();
drop<core::integer::u256>([7]) -> ();
drop<erc20::erc20::ERC20::name::Storage>([42]) -> ();
drop<ContractAddress>([5]) -> ();
drop<erc20::erc20::ERC20::symbol::Storage>([43]) -> ();
drop<erc20::erc20::ERC20::allowances::Storage>([47]) -> ();
drop<ContractAddress>([6]) -> ();
drop<erc20::erc20::ERC20::total_supply::Storage>([45]) -> ();
drop<erc20::erc20::ERC20::decimals::Storage>([44]) -> ();
drop<erc20::erc20::ERC20::balances::Storage>([88]) -> ();
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 1>([110]) -> ([159]);
store_temp<RangeCheck>([104]) -> ([160]);
store_temp<GasBuiltin>([91]) -> ([161]);
store_temp<Pedersen>([92]) -> ([162]);
store_temp<System>([93]) -> ([163]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([159]) -> ([164]);
return([160], [161], [162], [163], [164]);
branch_align() -> ();
drop<core::integer::u256>([7]) -> ();
drop<erc20::erc20::ERC20::name::Storage>([42]) -> ();
drop<ContractAddress>([5]) -> ();
drop<erc20::erc20::ERC20::symbol::Storage>([43]) -> ();
drop<erc20::erc20::ERC20::allowances::Storage>([47]) -> ();
drop<ContractAddress>([6]) -> ();
drop<erc20::erc20::ERC20::total_supply::Storage>([45]) -> ();
drop<erc20::erc20::ERC20::decimals::Storage>([44]) -> ();
drop<erc20::erc20::ERC20::balances::Storage>([88]) -> ();
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 1>([102]) -> ([165]);
store_temp<RangeCheck>([90]) -> ([166]);
store_temp<GasBuiltin>([91]) -> ([167]);
store_temp<Pedersen>([92]) -> ([168]);
store_temp<System>([93]) -> ([169]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([165]) -> ([170]);
return([166], [167], [168], [169], [170]);
branch_align() -> ();
drop<core::integer::u256>([7]) -> ();
drop<erc20::erc20::ERC20::name::Storage>([42]) -> ();
drop<ContractAddress>([5]) -> ();
drop<erc20::erc20::ERC20::symbol::Storage>([43]) -> ();
drop<erc20::erc20::ERC20::allowances::Storage>([47]) -> ();
drop<ContractAddress>([6]) -> ();
drop<erc20::erc20::ERC20::total_supply::Storage>([45]) -> ();
drop<erc20::erc20::ERC20::decimals::Storage>([44]) -> ();
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 1>([85]) -> ([171]);
store_temp<RangeCheck>([72]) -> ([172]);
store_temp<GasBuiltin>([73]) -> ([173]);
store_temp<Pedersen>([74]) -> ([174]);
store_temp<System>([75]) -> ([175]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([171]) -> ([176]);
return([172], [173], [174], [175], [176]);
branch_align() -> ();
drop<core::integer::u256>([7]) -> ();
drop<erc20::erc20::ERC20::name::Storage>([42]) -> ();
drop<ContractAddress>([5]) -> ();
drop<erc20::erc20::ERC20::symbol::Storage>([43]) -> ();
drop<erc20::erc20::ERC20::allowances::Storage>([47]) -> ();
drop<ContractAddress>([6]) -> ();
drop<erc20::erc20::ERC20::total_supply::Storage>([45]) -> ();
drop<erc20::erc20::ERC20::decimals::Storage>([44]) -> ();
drop<erc20::erc20::ERC20::balances::Storage>([48]) -> ();
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 1>([70]) -> ([177]);
store_temp<RangeCheck>([64]) -> ([178]);
store_temp<GasBuiltin>([51]) -> ([179]);
store_temp<Pedersen>([52]) -> ([180]);
store_temp<System>([53]) -> ([181]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([177]) -> ([182]);
return([178], [179], [180], [181], [182]);
branch_align() -> ();
drop<core::integer::u256>([7]) -> ();
drop<erc20::erc20::ERC20::name::Storage>([42]) -> ();
drop<ContractAddress>([5]) -> ();
drop<erc20::erc20::ERC20::symbol::Storage>([43]) -> ();
drop<erc20::erc20::ERC20::allowances::Storage>([47]) -> ();
drop<ContractAddress>([6]) -> ();
drop<erc20::erc20::ERC20::total_supply::Storage>([45]) -> ();
drop<erc20::erc20::ERC20::decimals::Storage>([44]) -> ();
drop<erc20::erc20::ERC20::balances::Storage>([48]) -> ();
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 1>([62]) -> ([183]);
store_temp<RangeCheck>([50]) -> ([184]);
store_temp<GasBuiltin>([51]) -> ([185]);
store_temp<Pedersen>([52]) -> ([186]);
store_temp<System>([53]) -> ([187]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([183]) -> ([188]);
return([184], [185], [186], [187], [188]);
branch_align() -> ();
drop<core::integer::u256>([7]) -> ();
drop<ContractAddress>([5]) -> ();
drop<ContractAddress>([6]) -> ();
drop<erc20::erc20::ERC20::Storage>([4]) -> ();
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 1>([41]) -> ([189]);
store_temp<RangeCheck>([0]) -> ([190]);
store_temp<GasBuiltin>([1]) -> ([191]);
store_temp<Pedersen>([2]) -> ([192]);
store_temp<System>([3]) -> ([193]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([189]) -> ([194]);
return([190], [191], [192], [193], [194]);
branch_align() -> ();
drop<core::integer::u256>([7]) -> ();
drop<ContractAddress>([5]) -> ();
drop<ContractAddress>([6]) -> ();
drop<erc20::erc20::ERC20::Storage>([4]) -> ();
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 1>([24]) -> ([195]);
store_temp<RangeCheck>([0]) -> ([196]);
store_temp<GasBuiltin>([1]) -> ([197]);
store_temp<Pedersen>([2]) -> ([198]);
store_temp<System>([3]) -> ([199]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([195]) -> ([200]);
return([196], [197], [198], [199], [200]);
struct_deconstruct<erc20::erc20::ERC20::Storage>([4]) -> ([8], [9], [10], [11], [12], [13]);
dup<erc20::erc20::ERC20::allowances::Storage>([13]) -> ([14], [15]);
dup<ContractAddress>([5]) -> ([5], [16]);
dup<ContractAddress>([6]) -> ([6], [17]);
struct_construct<Tuple<ContractAddress, ContractAddress>>([16], [17]) -> ([18]);
store_temp<RangeCheck>([0]) -> ([24]);
store_temp<GasBuiltin>([1]) -> ([25]);
store_temp<Pedersen>([2]) -> ([26]);
store_temp<System>([3]) -> ([27]);
store_temp<erc20::erc20::ERC20::allowances::Storage>([15]) -> ([28]);
store_temp<Tuple<ContractAddress, ContractAddress>>([18]) -> ([29]);
function_call<user@erc20::erc20::ERC20::allowances::StorageImpl::read>([24], [25], [26], [27], [28], [29]) -> ([19], [20], [21], [22], [23]);
enum_match<core::PanicResult::<(core::integer::u256,)>>([23]) { fallthrough([30]) 3338([31]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::integer::u256>>([30]) -> ([32]);
struct_deconstruct<core::integer::u256>([32]) -> ([33], [34]);
u128_const<340282366920938463463374607431768211455>() -> ([35]);
dup<u128>([33]) -> ([33], [36]);
store_temp<u128>([35]) -> ([35]);
dup<u128>([35]) -> ([35], [37]);
u128_eq([36], [37]) { fallthrough() 3234() };
branch_align() -> ();
struct_construct<Unit>() -> ([38]);
enum_init<core::bool, 0>([38]) -> ([39]);
store_temp<core::bool>([39]) -> ([40]);
jump() { 3238() };
branch_align() -> ();
struct_construct<Unit>() -> ([41]);
enum_init<core::bool, 1>([41]) -> ([42]);
store_temp<core::bool>([42]) -> ([40]);
dup<u128>([34]) -> ([34], [43]);
u128_eq([43], [35]) { fallthrough() 3245() };
branch_align() -> ();
struct_construct<Unit>() -> ([44]);
enum_init<core::bool, 0>([44]) -> ([45]);
store_temp<core::bool>([45]) -> ([46]);
jump() { 3249() };
branch_align() -> ();
struct_construct<Unit>() -> ([47]);
enum_init<core::bool, 1>([47]) -> ([48]);
store_temp<core::bool>([48]) -> ([46]);
bool_and_impl([40], [46]) -> ([49]);
store_temp<core::bool>([49]) -> ([49]);
bool_not_impl([49]) -> ([50]);
dup<erc20::erc20::ERC20::name::Storage>([8]) -> ([8], [51]);
dup<erc20::erc20::ERC20::symbol::Storage>([9]) -> ([9], [52]);
dup<erc20::erc20::ERC20::decimals::Storage>([10]) -> ([10], [53]);
dup<erc20::erc20::ERC20::total_supply::Storage>([11]) -> ([11], [54]);
dup<erc20::erc20::ERC20::balances::Storage>([12]) -> ([12], [55]);
dup<erc20::erc20::ERC20::allowances::Storage>([14]) -> ([14], [56]);
struct_construct<erc20::erc20::ERC20::Storage>([51], [52], [53], [54], [55], [56]) -> ([57]);
drop<erc20::erc20::ERC20::Storage>([57]) -> ();
store_temp<core::bool>([50]) -> ([50]);
enum_match<core::bool>([50]) { fallthrough([58]) 3276([59]) };
branch_align() -> ();
drop<Unit>([58]) -> ();
drop<ContractAddress>([6]) -> ();
drop<ContractAddress>([5]) -> ();
drop<core::integer::u256>([7]) -> ();
drop<u128>([34]) -> ();
drop<u128>([33]) -> ();
struct_construct<erc20::erc20::ERC20::Storage>([8], [9], [10], [11], [12], [14]) -> ([60]);
store_temp<RangeCheck>([19]) -> ([61]);
store_temp<GasBuiltin>([20]) -> ([62]);
store_temp<Pedersen>([21]) -> ([63]);
store_temp<System>([22]) -> ([64]);
store_temp<erc20::erc20::ERC20::Storage>([60]) -> ([65]);
jump() { 3305() };
branch_align() -> ();
drop<Unit>([59]) -> ();
struct_construct<core::integer::u256>([33], [34]) -> ([66]);
store_temp<RangeCheck>([19]) -> ([69]);
store_temp<core::integer::u256>([66]) -> ([70]);
store_temp<core::integer::u256>([7]) -> ([71]);
function_call<user@core::integer::U256Sub::sub>([69], [70], [71]) -> ([67], [68]);
enum_match<core::PanicResult::<(core::integer::u256,)>>([68]) { fallthrough([72]) 3322([73]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::integer::u256>>([72]) -> ([74]);
struct_construct<erc20::erc20::ERC20::Storage>([8], [9], [10], [11], [12], [14]) -> ([75]);
store_temp<RangeCheck>([67]) -> ([81]);
store_temp<GasBuiltin>([20]) -> ([82]);
store_temp<Pedersen>([21]) -> ([83]);
store_temp<System>([22]) -> ([84]);
store_temp<erc20::erc20::ERC20::Storage>([75]) -> ([85]);
store_temp<ContractAddress>([5]) -> ([86]);
store_temp<ContractAddress>([6]) -> ([87]);
store_temp<core::integer::u256>([74]) -> ([88]);
function_call<user@erc20::erc20::ERC20::StorageImpl::approve_helper>([81], [82], [83], [84], [85], [86], [87], [88]) -> ([76], [77], [78], [79], [80]);
enum_match<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([80]) { fallthrough([89]) 3314([90]) };
branch_align() -> ();
struct_deconstruct<Tuple<erc20::erc20::ERC20::Storage, Unit>>([89]) -> ([91], [92]);
drop<Unit>([92]) -> ();
store_temp<RangeCheck>([76]) -> ([61]);
store_temp<GasBuiltin>([77]) -> ([62]);
store_temp<Pedersen>([78]) -> ([63]);
store_temp<System>([79]) -> ([64]);
store_temp<erc20::erc20::ERC20::Storage>([91]) -> ([65]);
struct_construct<Unit>() -> ([93]);
struct_construct<Tuple<erc20::erc20::ERC20::Storage, Unit>>([65], [93]) -> ([94]);
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 0>([94]) -> ([95]);
store_temp<RangeCheck>([61]) -> ([96]);
store_temp<GasBuiltin>([62]) -> ([97]);
store_temp<Pedersen>([63]) -> ([98]);
store_temp<System>([64]) -> ([99]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([95]) -> ([100]);
return([96], [97], [98], [99], [100]);
branch_align() -> ();
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 1>([90]) -> ([101]);
store_temp<RangeCheck>([76]) -> ([102]);
store_temp<GasBuiltin>([77]) -> ([103]);
store_temp<Pedersen>([78]) -> ([104]);
store_temp<System>([79]) -> ([105]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([101]) -> ([106]);
return([102], [103], [104], [105], [106]);
branch_align() -> ();
drop<erc20::erc20::ERC20::name::Storage>([8]) -> ();
drop<ContractAddress>([6]) -> ();
drop<ContractAddress>([5]) -> ();
drop<erc20::erc20::ERC20::allowances::Storage>([14]) -> ();
drop<erc20::erc20::ERC20::balances::Storage>([12]) -> ();
drop<erc20::erc20::ERC20::total_supply::Storage>([11]) -> ();
drop<erc20::erc20::ERC20::decimals::Storage>([10]) -> ();
drop<erc20::erc20::ERC20::symbol::Storage>([9]) -> ();
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 1>([73]) -> ([107]);
store_temp<RangeCheck>([67]) -> ([108]);
store_temp<GasBuiltin>([20]) -> ([109]);
store_temp<Pedersen>([21]) -> ([110]);
store_temp<System>([22]) -> ([111]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([107]) -> ([112]);
return([108], [109], [110], [111], [112]);
branch_align() -> ();
drop<erc20::erc20::ERC20::allowances::Storage>([14]) -> ();
drop<erc20::erc20::ERC20::balances::Storage>([12]) -> ();
drop<erc20::erc20::ERC20::total_supply::Storage>([11]) -> ();
drop<erc20::erc20::ERC20::decimals::Storage>([10]) -> ();
drop<erc20::erc20::ERC20::symbol::Storage>([9]) -> ();
drop<erc20::erc20::ERC20::name::Storage>([8]) -> ();
drop<ContractAddress>([6]) -> ();
drop<ContractAddress>([5]) -> ();
drop<core::integer::u256>([7]) -> ();
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 1>([31]) -> ([113]);
store_temp<RangeCheck>([19]) -> ([114]);
store_temp<GasBuiltin>([20]) -> ([115]);
store_temp<Pedersen>([21]) -> ([116]);
store_temp<System>([22]) -> ([117]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([113]) -> ([118]);
return([114], [115], [116], [117], [118]);
dup<ContractAddress>([6]) -> ([6], [9]);
contract_address_to_felt252([9]) -> ([8]);
felt252_const<0>() -> ([10]);
felt252_sub([8], [10]) -> ([11]);
store_temp<felt252>([11]) -> ([11]);
felt252_is_zero([11]) { fallthrough() 3366([12]) };
branch_align() -> ();
struct_construct<Unit>() -> ([13]);
enum_init<core::bool, 1>([13]) -> ([14]);
store_temp<core::bool>([14]) -> ([15]);
jump() { 3371() };
branch_align() -> ();
drop<NonZero<felt252>>([12]) -> ();
struct_construct<Unit>() -> ([16]);
enum_init<core::bool, 0>([16]) -> ([17]);
store_temp<core::bool>([17]) -> ([15]);
bool_not_impl([15]) -> ([18]);
felt252_const<101313248740993271302566317381896466254801065025584>() -> ([19]);
store_temp<core::bool>([18]) -> ([21]);
store_temp<felt252>([19]) -> ([22]);
function_call<user@core::assert>([21], [22]) -> ([20]);
enum_match<core::PanicResult::<((),)>>([20]) { fallthrough([23]) 3445([24]) };
branch_align() -> ();
drop<Tuple<Unit>>([23]) -> ();
dup<ContractAddress>([5]) -> ([5], [25]);
dup<ContractAddress>([6]) -> ([6], [26]);
struct_construct<Tuple<ContractAddress, ContractAddress>>([25], [26]) -> ([27]);
struct_deconstruct<erc20::erc20::ERC20::Storage>([4]) -> ([28], [29], [30], [31], [32], [33]);
store_temp<RangeCheck>([0]) -> ([39]);
store_temp<GasBuiltin>([1]) -> ([40]);
store_temp<Pedersen>([2]) -> ([41]);
store_temp<System>([3]) -> ([42]);
store_temp<erc20::erc20::ERC20::allowances::Storage>([33]) -> ([43]);
store_temp<Tuple<ContractAddress, ContractAddress>>([27]) -> ([44]);
dup<core::integer::u256>([7]) -> ([7], [45]);
store_temp<core::integer::u256>([45]) -> ([45]);
function_call<user@erc20::erc20::ERC20::allowances::StorageImpl::write>([39], [40], [41], [42], [43], [44], [45]) -> ([34], [35], [36], [37], [38]);
enum_match<core::PanicResult::<(erc20::erc20::ERC20::allowances::Storage, ())>>([38]) { fallthrough([46]) 3429([47]) };
branch_align() -> ();
struct_deconstruct<Tuple<erc20::erc20::ERC20::allowances::Storage, Unit>>([46]) -> ([48], [49]);
drop<Unit>([49]) -> ();
store_temp<GasBuiltin>([35]) -> ([53]);
store_temp<System>([37]) -> ([54]);
store_temp<ContractAddress>([5]) -> ([55]);
store_temp<ContractAddress>([6]) -> ([56]);
store_temp<core::integer::u256>([7]) -> ([57]);
function_call<user@erc20::erc20::ERC20::Approval>([53], [54], [55], [56], [57]) -> ([50], [51], [52]);
enum_match<core::PanicResult::<((),)>>([52]) { fallthrough([58]) 3415([59]) };
branch_align() -> ();
drop<Tuple<Unit>>([58]) -> ();
struct_construct<erc20::erc20::ERC20::Storage>([28], [29], [30], [31], [32], [48]) -> ([60]);
struct_construct<Unit>() -> ([61]);
struct_construct<Tuple<erc20::erc20::ERC20::Storage, Unit>>([60], [61]) -> ([62]);
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 0>([62]) -> ([63]);
store_temp<RangeCheck>([34]) -> ([64]);
store_temp<GasBuiltin>([50]) -> ([65]);
store_temp<Pedersen>([36]) -> ([66]);
store_temp<System>([51]) -> ([67]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([63]) -> ([68]);
return([64], [65], [66], [67], [68]);
branch_align() -> ();
drop<erc20::erc20::ERC20::allowances::Storage>([48]) -> ();
drop<erc20::erc20::ERC20::balances::Storage>([32]) -> ();
drop<erc20::erc20::ERC20::total_supply::Storage>([31]) -> ();
drop<erc20::erc20::ERC20::decimals::Storage>([30]) -> ();
drop<erc20::erc20::ERC20::symbol::Storage>([29]) -> ();
drop<erc20::erc20::ERC20::name::Storage>([28]) -> ();
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 1>([59]) -> ([69]);
store_temp<RangeCheck>([34]) -> ([70]);
store_temp<GasBuiltin>([50]) -> ([71]);
store_temp<Pedersen>([36]) -> ([72]);
store_temp<System>([51]) -> ([73]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([69]) -> ([74]);
return([70], [71], [72], [73], [74]);
branch_align() -> ();
drop<erc20::erc20::ERC20::name::Storage>([28]) -> ();
drop<erc20::erc20::ERC20::symbol::Storage>([29]) -> ();
drop<erc20::erc20::ERC20::balances::Storage>([32]) -> ();
drop<erc20::erc20::ERC20::total_supply::Storage>([31]) -> ();
drop<erc20::erc20::ERC20::decimals::Storage>([30]) -> ();
drop<core::integer::u256>([7]) -> ();
drop<ContractAddress>([6]) -> ();
drop<ContractAddress>([5]) -> ();
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 1>([47]) -> ([75]);
store_temp<RangeCheck>([34]) -> ([76]);
store_temp<GasBuiltin>([35]) -> ([77]);
store_temp<Pedersen>([36]) -> ([78]);
store_temp<System>([37]) -> ([79]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([75]) -> ([80]);
return([76], [77], [78], [79], [80]);
branch_align() -> ();
drop<core::integer::u256>([7]) -> ();
drop<ContractAddress>([5]) -> ();
drop<ContractAddress>([6]) -> ();
drop<erc20::erc20::ERC20::Storage>([4]) -> ();
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 1>([24]) -> ([81]);
store_temp<RangeCheck>([0]) -> ([82]);
store_temp<GasBuiltin>([1]) -> ([83]);
store_temp<Pedersen>([2]) -> ([84]);
store_temp<System>([3]) -> ([85]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([81]) -> ([86]);
return([82], [83], [84], [85], [86]);
store_temp<RangeCheck>([0]) -> ([5]);
store_temp<core::integer::u256>([1]) -> ([6]);
store_temp<core::integer::u256>([2]) -> ([7]);
function_call<user@core::integer::u256_checked_add>([5], [6], [7]) -> ([3], [4]);
enum_match<core::option::Option::<core::integer::u256>>([4]) { fallthrough([8]) 3468([9]) };
branch_align() -> ();
struct_construct<Tuple<core::integer::u256>>([8]) -> ([10]);
enum_init<core::PanicResult::<(core::integer::u256,)>, 0>([10]) -> ([11]);
store_temp<RangeCheck>([3]) -> ([12]);
store_temp<core::PanicResult::<(core::integer::u256,)>>([11]) -> ([13]);
return([12], [13]);
branch_align() -> ();
drop<Unit>([9]) -> ();
array_new<felt252>() -> ([14]);
felt252_const<39879774624079483812136948410799859986295>() -> ([15]);
store_temp<felt252>([15]) -> ([15]);
array_append<felt252>([14], [15]) -> ([16]);
enum_init<core::PanicResult::<(core::integer::u256,)>, 1>([16]) -> ([17]);
store_temp<RangeCheck>([3]) -> ([18]);
store_temp<core::PanicResult::<(core::integer::u256,)>>([17]) -> ([19]);
return([18], [19]);
store_temp<RangeCheck>([0]) -> ([5]);
store_temp<core::integer::u256>([1]) -> ([6]);
store_temp<core::integer::u256>([2]) -> ([7]);
function_call<user@core::integer::u256_checked_sub>([5], [6], [7]) -> ([3], [4]);
enum_match<core::option::Option::<core::integer::u256>>([4]) { fallthrough([8]) 3489([9]) };
branch_align() -> ();
struct_construct<Tuple<core::integer::u256>>([8]) -> ([10]);
enum_init<core::PanicResult::<(core::integer::u256,)>, 0>([10]) -> ([11]);
store_temp<RangeCheck>([3]) -> ([12]);
store_temp<core::PanicResult::<(core::integer::u256,)>>([11]) -> ([13]);
return([12], [13]);
branch_align() -> ();
drop<Unit>([9]) -> ();
array_new<felt252>() -> ([14]);
felt252_const<39879774624085075084607933104993585622903>() -> ([15]);
store_temp<felt252>([15]) -> ([15]);
array_append<felt252>([14], [15]) -> ([16]);
enum_init<core::PanicResult::<(core::integer::u256,)>, 1>([16]) -> ([17]);
store_temp<RangeCheck>([3]) -> ([18]);
store_temp<core::PanicResult::<(core::integer::u256,)>>([17]) -> ([19]);
return([18], [19]);
u8_try_from_felt252([0], [1]) { fallthrough([2], [3]) 3505([4]) };
branch_align() -> ();
enum_init<core::option::Option::<core::integer::u8>, 0>([3]) -> ([5]);
store_temp<RangeCheck>([2]) -> ([6]);
store_temp<core::option::Option::<core::integer::u8>>([5]) -> ([7]);
jump() { 3510() };
branch_align() -> ();
struct_construct<Unit>() -> ([8]);
enum_init<core::option::Option::<core::integer::u8>, 1>([8]) -> ([9]);
store_temp<RangeCheck>([4]) -> ([6]);
store_temp<core::option::Option::<core::integer::u8>>([9]) -> ([7]);
rename<RangeCheck>([6]) -> ([10]);
rename<core::option::Option::<core::integer::u8>>([7]) -> ([11]);
return([10], [11]);
dup<erc20::erc20::ERC20::name::Storage>([2]) -> ([4], [5]);
drop<erc20::erc20::ERC20::name::Storage>([5]) -> ();
storage_base_address_const<1528802474226268325865027367859591458315299653151958663884057507666229546336>() -> ([6]);
storage_address_from_base([6]) -> ([7]);
u32_const<0>() -> ([8]);
store_temp<u32>([8]) -> ([8]);
store_temp<StorageAddress>([7]) -> ([7]);
storage_write_syscall([0], [1], [8], [7], [3]) { fallthrough([9], [10]) 3528([11], [12], [13]) };
branch_align() -> ();
struct_construct<Unit>() -> ([14]);
enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 0>([14]) -> ([15]);
store_temp<GasBuiltin>([9]) -> ([16]);
store_temp<System>([10]) -> ([17]);
store_temp<core::result::Result::<(), core::array::Array::<core::felt252>>>([15]) -> ([18]);
jump() { 3533() };
branch_align() -> ();
enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 1>([13]) -> ([19]);
store_temp<GasBuiltin>([11]) -> ([16]);
store_temp<System>([12]) -> ([17]);
store_temp<core::result::Result::<(), core::array::Array::<core::felt252>>>([19]) -> ([18]);
rename<core::result::Result::<(), core::array::Array::<core::felt252>>>([18]) -> ([21]);
function_call<user@core::starknet::SyscallResultTraitImpl::<()>::unwrap_syscall>([21]) -> ([20]);
enum_match<core::PanicResult::<((),)>>([20]) { fallthrough([22]) 3544([23]) };
branch_align() -> ();
struct_deconstruct<Tuple<Unit>>([22]) -> ([24]);
struct_construct<Tuple<erc20::erc20::ERC20::name::Storage, Unit>>([4], [24]) -> ([25]);
enum_init<core::PanicResult::<(erc20::erc20::ERC20::name::Storage, ())>, 0>([25]) -> ([26]);
store_temp<GasBuiltin>([16]) -> ([27]);
store_temp<System>([17]) -> ([28]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::name::Storage, ())>>([26]) -> ([29]);
return([27], [28], [29]);
branch_align() -> ();
drop<erc20::erc20::ERC20::name::Storage>([4]) -> ();
enum_init<core::PanicResult::<(erc20::erc20::ERC20::name::Storage, ())>, 1>([23]) -> ([30]);
store_temp<GasBuiltin>([16]) -> ([31]);
store_temp<System>([17]) -> ([32]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::name::Storage, ())>>([30]) -> ([33]);
return([31], [32], [33]);
dup<erc20::erc20::ERC20::symbol::Storage>([2]) -> ([4], [5]);
drop<erc20::erc20::ERC20::symbol::Storage>([5]) -> ();
storage_base_address_const<944713526212149105522785400348068751682982210605126537021911324578866405028>() -> ([6]);
storage_address_from_base([6]) -> ([7]);
u32_const<0>() -> ([8]);
store_temp<u32>([8]) -> ([8]);
store_temp<StorageAddress>([7]) -> ([7]);
storage_write_syscall([0], [1], [8], [7], [3]) { fallthrough([9], [10]) 3566([11], [12], [13]) };
branch_align() -> ();
struct_construct<Unit>() -> ([14]);
enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 0>([14]) -> ([15]);
store_temp<GasBuiltin>([9]) -> ([16]);
store_temp<System>([10]) -> ([17]);
store_temp<core::result::Result::<(), core::array::Array::<core::felt252>>>([15]) -> ([18]);
jump() { 3571() };
branch_align() -> ();
enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 1>([13]) -> ([19]);
store_temp<GasBuiltin>([11]) -> ([16]);
store_temp<System>([12]) -> ([17]);
store_temp<core::result::Result::<(), core::array::Array::<core::felt252>>>([19]) -> ([18]);
rename<core::result::Result::<(), core::array::Array::<core::felt252>>>([18]) -> ([21]);
function_call<user@core::starknet::SyscallResultTraitImpl::<()>::unwrap_syscall>([21]) -> ([20]);
enum_match<core::PanicResult::<((),)>>([20]) { fallthrough([22]) 3582([23]) };
branch_align() -> ();
struct_deconstruct<Tuple<Unit>>([22]) -> ([24]);
struct_construct<Tuple<erc20::erc20::ERC20::symbol::Storage, Unit>>([4], [24]) -> ([25]);
enum_init<core::PanicResult::<(erc20::erc20::ERC20::symbol::Storage, ())>, 0>([25]) -> ([26]);
store_temp<GasBuiltin>([16]) -> ([27]);
store_temp<System>([17]) -> ([28]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::symbol::Storage, ())>>([26]) -> ([29]);
return([27], [28], [29]);
branch_align() -> ();
drop<erc20::erc20::ERC20::symbol::Storage>([4]) -> ();
enum_init<core::PanicResult::<(erc20::erc20::ERC20::symbol::Storage, ())>, 1>([23]) -> ([30]);
store_temp<GasBuiltin>([16]) -> ([31]);
store_temp<System>([17]) -> ([32]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::symbol::Storage, ())>>([30]) -> ([33]);
return([31], [32], [33]);
dup<erc20::erc20::ERC20::decimals::Storage>([2]) -> ([4], [5]);
drop<erc20::erc20::ERC20::decimals::Storage>([5]) -> ();
storage_base_address_const<134830404806214277570220174593674215737759987247891306080029841794115377321>() -> ([6]);
u8_to_felt252([3]) -> ([7]);
storage_address_from_base([6]) -> ([8]);
u32_const<0>() -> ([9]);
store_temp<u32>([9]) -> ([9]);
store_temp<StorageAddress>([8]) -> ([8]);
storage_write_syscall([0], [1], [9], [8], [7]) { fallthrough([10], [11]) 3605([12], [13], [14]) };
branch_align() -> ();
struct_construct<Unit>() -> ([15]);
enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 0>([15]) -> ([16]);
store_temp<GasBuiltin>([10]) -> ([17]);
store_temp<System>([11]) -> ([18]);
store_temp<core::result::Result::<(), core::array::Array::<core::felt252>>>([16]) -> ([19]);
jump() { 3610() };
branch_align() -> ();
enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 1>([14]) -> ([20]);
store_temp<GasBuiltin>([12]) -> ([17]);
store_temp<System>([13]) -> ([18]);
store_temp<core::result::Result::<(), core::array::Array::<core::felt252>>>([20]) -> ([19]);
rename<core::result::Result::<(), core::array::Array::<core::felt252>>>([19]) -> ([22]);
function_call<user@core::starknet::SyscallResultTraitImpl::<()>::unwrap_syscall>([22]) -> ([21]);
enum_match<core::PanicResult::<((),)>>([21]) { fallthrough([23]) 3621([24]) };
branch_align() -> ();
struct_deconstruct<Tuple<Unit>>([23]) -> ([25]);
struct_construct<Tuple<erc20::erc20::ERC20::decimals::Storage, Unit>>([4], [25]) -> ([26]);
enum_init<core::PanicResult::<(erc20::erc20::ERC20::decimals::Storage, ())>, 0>([26]) -> ([27]);
store_temp<GasBuiltin>([17]) -> ([28]);
store_temp<System>([18]) -> ([29]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::decimals::Storage, ())>>([27]) -> ([30]);
return([28], [29], [30]);
branch_align() -> ();
drop<erc20::erc20::ERC20::decimals::Storage>([4]) -> ();
enum_init<core::PanicResult::<(erc20::erc20::ERC20::decimals::Storage, ())>, 1>([24]) -> ([31]);
store_temp<GasBuiltin>([17]) -> ([32]);
store_temp<System>([18]) -> ([33]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::decimals::Storage, ())>>([31]) -> ([34]);
return([32], [33], [34]);
bool_not_impl([0]) -> ([2]);
store_temp<core::bool>([2]) -> ([2]);
enum_match<core::bool>([2]) { fallthrough([3]) 3639([4]) };
branch_align() -> ();
drop<Unit>([3]) -> ();
drop<felt252>([1]) -> ();
struct_construct<Unit>() -> ([5]);
struct_construct<Tuple<Unit>>([5]) -> ([6]);
enum_init<core::PanicResult::<((),)>, 0>([6]) -> ([7]);
store_temp<core::PanicResult::<((),)>>([7]) -> ([8]);
return([8]);
branch_align() -> ();
drop<Unit>([4]) -> ();
array_new<felt252>() -> ([9]);
array_append<felt252>([9], [1]) -> ([10]);
enum_init<core::PanicResult::<((),)>, 1>([10]) -> ([11]);
store_temp<core::PanicResult::<((),)>>([11]) -> ([12]);
return([12]);
dup<erc20::erc20::ERC20::total_supply::Storage>([2]) -> ([4], [5]);
drop<erc20::erc20::ERC20::total_supply::Storage>([5]) -> ();
storage_base_address_const<603278275252936218847294002513349627170936020082667936993356353388973422646>() -> ([6]);
u32_const<0>() -> ([7]);
store_temp<GasBuiltin>([0]) -> ([11]);
store_temp<System>([1]) -> ([12]);
store_temp<u32>([7]) -> ([13]);
store_temp<StorageBaseAddress>([6]) -> ([14]);
store_temp<core::integer::u256>([3]) -> ([15]);
function_call<user@core::starknet::storage_access::StorageAccessU256::write>([11], [12], [13], [14], [15]) -> ([8], [9], [10]);
rename<core::result::Result::<(), core::array::Array::<core::felt252>>>([10]) -> ([17]);
function_call<user@core::starknet::SyscallResultTraitImpl::<()>::unwrap_syscall>([17]) -> ([16]);
enum_match<core::PanicResult::<((),)>>([16]) { fallthrough([18]) 3667([19]) };
branch_align() -> ();
struct_deconstruct<Tuple<Unit>>([18]) -> ([20]);
struct_construct<Tuple<erc20::erc20::ERC20::total_supply::Storage, Unit>>([4], [20]) -> ([21]);
enum_init<core::PanicResult::<(erc20::erc20::ERC20::total_supply::Storage, ())>, 0>([21]) -> ([22]);
store_temp<GasBuiltin>([8]) -> ([23]);
store_temp<System>([9]) -> ([24]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::total_supply::Storage, ())>>([22]) -> ([25]);
return([23], [24], [25]);
branch_align() -> ();
drop<erc20::erc20::ERC20::total_supply::Storage>([4]) -> ();
enum_init<core::PanicResult::<(erc20::erc20::ERC20::total_supply::Storage, ())>, 1>([19]) -> ([26]);
store_temp<GasBuiltin>([8]) -> ([27]);
store_temp<System>([9]) -> ([28]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::total_supply::Storage, ())>>([26]) -> ([29]);
return([27], [28], [29]);
dup<erc20::erc20::ERC20::balances::Storage>([4]) -> ([7], [8]);
store_temp<RangeCheck>([0]) -> ([12]);
store_temp<Pedersen>([2]) -> ([13]);
store_temp<erc20::erc20::ERC20::balances::Storage>([8]) -> ([14]);
store_temp<ContractAddress>([5]) -> ([15]);
function_call<user@erc20::erc20::ERC20::balances::StorageImpl::address>([12], [13], [14], [15]) -> ([9], [10], [11]);
u32_const<0>() -> ([16]);
store_temp<GasBuiltin>([1]) -> ([20]);
store_temp<System>([3]) -> ([21]);
store_temp<u32>([16]) -> ([22]);
store_temp<StorageBaseAddress>([11]) -> ([23]);
store_temp<core::integer::u256>([6]) -> ([24]);
function_call<user@core::starknet::storage_access::StorageAccessU256::write>([20], [21], [22], [23], [24]) -> ([17], [18], [19]);
rename<core::result::Result::<(), core::array::Array::<core::felt252>>>([19]) -> ([26]);
function_call<user@core::starknet::SyscallResultTraitImpl::<()>::unwrap_syscall>([26]) -> ([25]);
enum_match<core::PanicResult::<((),)>>([25]) { fallthrough([27]) 3700([28]) };
branch_align() -> ();
struct_deconstruct<Tuple<Unit>>([27]) -> ([29]);
struct_construct<Tuple<erc20::erc20::ERC20::balances::Storage, Unit>>([7], [29]) -> ([30]);
enum_init<core::PanicResult::<(erc20::erc20::ERC20::balances::Storage, ())>, 0>([30]) -> ([31]);
store_temp<RangeCheck>([9]) -> ([32]);
store_temp<GasBuiltin>([17]) -> ([33]);
store_temp<Pedersen>([10]) -> ([34]);
store_temp<System>([18]) -> ([35]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::balances::Storage, ())>>([31]) -> ([36]);
return([32], [33], [34], [35], [36]);
branch_align() -> ();
drop<erc20::erc20::ERC20::balances::Storage>([7]) -> ();
enum_init<core::PanicResult::<(erc20::erc20::ERC20::balances::Storage, ())>, 1>([28]) -> ([37]);
store_temp<RangeCheck>([9]) -> ([38]);
store_temp<GasBuiltin>([17]) -> ([39]);
store_temp<Pedersen>([10]) -> ([40]);
store_temp<System>([18]) -> ([41]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::balances::Storage, ())>>([37]) -> ([42]);
return([38], [39], [40], [41], [42]);
array_new<felt252>() -> ([5]);
felt252_const<271746229759260285552388728919865295615886751538523744128730118297934206697>() -> ([6]);
store_temp<felt252>([6]) -> ([6]);
array_append<felt252>([5], [6]) -> ([7]);
array_new<felt252>() -> ([8]);
dup<ContractAddress>([2]) -> ([9], [10]);
drop<ContractAddress>([9]) -> ();
store_temp<ContractAddress>([10]) -> ([13]);
store_temp<Array<felt252>>([8]) -> ([14]);
function_call<user@core::starknet::contract_address::ContractAddressSerde::serialize>([13], [14]) -> ([11], [12]);
drop<Unit>([12]) -> ();
dup<ContractAddress>([3]) -> ([15], [16]);
drop<ContractAddress>([15]) -> ();
store_temp<ContractAddress>([16]) -> ([19]);
store_temp<Array<felt252>>([11]) -> ([20]);
function_call<user@core::starknet::contract_address::ContractAddressSerde::serialize>([19], [20]) -> ([17], [18]);
drop<Unit>([18]) -> ();
dup<core::integer::u256>([4]) -> ([21], [22]);
drop<core::integer::u256>([21]) -> ();
store_temp<core::integer::u256>([22]) -> ([25]);
store_temp<Array<felt252>>([17]) -> ([26]);
function_call<user@core::integer::u256Serde::serialize>([25], [26]) -> ([23], [24]);
drop<Unit>([24]) -> ();
snapshot_take<Array<felt252>>([7]) -> ([27], [28]);
drop<Array<felt252>>([27]) -> ();
struct_construct<core::array::Span::<core::felt252>>([28]) -> ([29]);
snapshot_take<Array<felt252>>([23]) -> ([30], [31]);
drop<Array<felt252>>([30]) -> ();
struct_construct<core::array::Span::<core::felt252>>([31]) -> ([32]);
store_temp<core::array::Span::<core::felt252>>([29]) -> ([29]);
store_temp<core::array::Span::<core::felt252>>([32]) -> ([32]);
emit_event_syscall([0], [1], [29], [32]) { fallthrough([33], [34]) 3748([35], [36], [37]) };
branch_align() -> ();
struct_construct<Unit>() -> ([38]);
enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 0>([38]) -> ([39]);
store_temp<GasBuiltin>([33]) -> ([40]);
store_temp<System>([34]) -> ([41]);
store_temp<core::result::Result::<(), core::array::Array::<core::felt252>>>([39]) -> ([42]);
jump() { 3753() };
branch_align() -> ();
enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 1>([37]) -> ([43]);
store_temp<GasBuiltin>([35]) -> ([40]);
store_temp<System>([36]) -> ([41]);
store_temp<core::result::Result::<(), core::array::Array::<core::felt252>>>([43]) -> ([42]);
rename<core::result::Result::<(), core::array::Array::<core::felt252>>>([42]) -> ([45]);
function_call<user@core::starknet::SyscallResultTraitImpl::<()>::unwrap_syscall>([45]) -> ([44]);
enum_match<core::PanicResult::<((),)>>([44]) { fallthrough([46]) 3764([47]) };
branch_align() -> ();
struct_deconstruct<Tuple<Unit>>([46]) -> ([48]);
struct_construct<Tuple<Unit>>([48]) -> ([49]);
enum_init<core::PanicResult::<((),)>, 0>([49]) -> ([50]);
store_temp<GasBuiltin>([40]) -> ([51]);
store_temp<System>([41]) -> ([52]);
store_temp<core::PanicResult::<((),)>>([50]) -> ([53]);
return([51], [52], [53]);
branch_align() -> ();
enum_init<core::PanicResult::<((),)>, 1>([47]) -> ([54]);
store_temp<GasBuiltin>([40]) -> ([55]);
store_temp<System>([41]) -> ([56]);
store_temp<core::PanicResult::<((),)>>([54]) -> ([57]);
return([55], [56], [57]);
enum_match<core::result::Result::<core::felt252, core::array::Array::<core::felt252>>>([0]) { fallthrough([1]) 3776([2]) };
branch_align() -> ();
struct_construct<Tuple<felt252>>([1]) -> ([3]);
enum_init<core::PanicResult::<(core::felt252,)>, 0>([3]) -> ([4]);
store_temp<core::PanicResult::<(core::felt252,)>>([4]) -> ([5]);
return([5]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::felt252,)>, 1>([2]) -> ([6]);
store_temp<core::PanicResult::<(core::felt252,)>>([6]) -> ([7]);
return([7]);
storage_address_from_base([4]) -> ([5]);
storage_read_syscall([1], [2], [3], [5]) { fallthrough([6], [7], [8]) 3810([9], [10], [11]) };
branch_align() -> ();
store_temp<RangeCheck>([0]) -> ([14]);
store_temp<felt252>([8]) -> ([15]);
function_call<user@core::integer::Felt252TryIntoU8::try_into>([14], [15]) -> ([12], [13]);
store_temp<GasBuiltin>([6]) -> ([6]);
store_temp<System>([7]) -> ([7]);
enum_match<core::option::Option::<core::integer::u8>>([13]) { fallthrough([16]) 3798([17]) };
branch_align() -> ();
enum_init<core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>, 0>([16]) -> ([18]);
struct_construct<Tuple<core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>>>([18]) -> ([19]);
enum_init<core::PanicResult::<(core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>,)>, 0>([19]) -> ([20]);
store_temp<RangeCheck>([12]) -> ([21]);
store_temp<GasBuiltin>([6]) -> ([22]);
store_temp<System>([7]) -> ([23]);
store_temp<core::PanicResult::<(core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>,)>>([20]) -> ([24]);
return([21], [22], [23], [24]);
branch_align() -> ();
drop<Unit>([17]) -> ();
array_new<felt252>() -> ([25]);
felt252_const<2046306368138969050899942931452836379425163887498684822840>() -> ([26]);
store_temp<felt252>([26]) -> ([26]);
array_append<felt252>([25], [26]) -> ([27]);
enum_init<core::PanicResult::<(core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>,)>, 1>([27]) -> ([28]);
store_temp<RangeCheck>([12]) -> ([29]);
store_temp<GasBuiltin>([6]) -> ([30]);
store_temp<System>([7]) -> ([31]);
store_temp<core::PanicResult::<(core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>,)>>([28]) -> ([32]);
return([29], [30], [31], [32]);
branch_align() -> ();
enum_init<core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>, 1>([11]) -> ([33]);
struct_construct<Tuple<core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>>>([33]) -> ([34]);
enum_init<core::PanicResult::<(core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>,)>, 0>([34]) -> ([35]);
store_temp<RangeCheck>([0]) -> ([36]);
store_temp<GasBuiltin>([9]) -> ([37]);
store_temp<System>([10]) -> ([38]);
store_temp<core::PanicResult::<(core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>,)>>([35]) -> ([39]);
return([36], [37], [38], [39]);
enum_match<core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>>([0]) { fallthrough([1]) 3825([2]) };
branch_align() -> ();
struct_construct<Tuple<u8>>([1]) -> ([3]);
enum_init<core::PanicResult::<(core::integer::u8,)>, 0>([3]) -> ([4]);
store_temp<core::PanicResult::<(core::integer::u8,)>>([4]) -> ([5]);
return([5]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::integer::u8,)>, 1>([2]) -> ([6]);
store_temp<core::PanicResult::<(core::integer::u8,)>>([6]) -> ([7]);
return([7]);
store_temp<RangeCheck>([0]) -> ([9]);
store_temp<GasBuiltin>([1]) -> ([10]);
store_temp<System>([2]) -> ([11]);
dup<u32>([3]) -> ([3], [12]);
store_temp<u32>([12]) -> ([12]);
dup<StorageBaseAddress>([4]) -> ([4], [13]);
store_temp<StorageBaseAddress>([13]) -> ([13]);
function_call<user@core::starknet::storage_access::StorageAccessU128::read>([9], [10], [11], [12], [13]) -> ([5], [6], [7], [8]);
enum_match<core::PanicResult::<(core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>,)>>([8]) { fallthrough([14]) 3897([15]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>>>([14]) -> ([16]);
enum_match<core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>>([16]) { fallthrough([17]) 3886([18]) };
branch_align() -> ();
u8_const<1>() -> ([19]);
storage_address_from_base_and_offset([4], [19]) -> ([20]);
store_temp<StorageAddress>([20]) -> ([20]);
storage_read_syscall([6], [7], [3], [20]) { fallthrough([21], [22], [23]) 3876([24], [25], [26]) };
branch_align() -> ();
store_temp<RangeCheck>([5]) -> ([29]);
store_temp<felt252>([23]) -> ([30]);
function_call<user@core::integer::u128_try_from_felt252>([29], [30]) -> ([27], [28]);
store_temp<GasBuiltin>([21]) -> ([21]);
store_temp<System>([22]) -> ([22]);
enum_match<core::option::Option::<core::integer::u128>>([28]) { fallthrough([31]) 3863([32]) };
branch_align() -> ();
struct_construct<core::integer::u256>([17], [31]) -> ([33]);
enum_init<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>, 0>([33]) -> ([34]);
struct_construct<Tuple<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>>>([34]) -> ([35]);
enum_init<core::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>, 0>([35]) -> ([36]);
store_temp<RangeCheck>([27]) -> ([37]);
store_temp<GasBuiltin>([21]) -> ([38]);
store_temp<System>([22]) -> ([39]);
store_temp<core::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>>([36]) -> ([40]);
return([37], [38], [39], [40]);
branch_align() -> ();
drop<Unit>([32]) -> ();
drop<u128>([17]) -> ();
array_new<felt252>() -> ([41]);
felt252_const<8788818928753408456771414258856301896042245023813903268884264400182>() -> ([42]);
store_temp<felt252>([42]) -> ([42]);
array_append<felt252>([41], [42]) -> ([43]);
enum_init<core::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>, 1>([43]) -> ([44]);
store_temp<RangeCheck>([27]) -> ([45]);
store_temp<GasBuiltin>([21]) -> ([46]);
store_temp<System>([22]) -> ([47]);
store_temp<core::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>>([44]) -> ([48]);
return([45], [46], [47], [48]);
branch_align() -> ();
drop<u128>([17]) -> ();
enum_init<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>, 1>([26]) -> ([49]);
struct_construct<Tuple<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>>>([49]) -> ([50]);
enum_init<core::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>, 0>([50]) -> ([51]);
store_temp<RangeCheck>([5]) -> ([52]);
store_temp<GasBuiltin>([24]) -> ([53]);
store_temp<System>([25]) -> ([54]);
store_temp<core::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>>([51]) -> ([55]);
return([52], [53], [54], [55]);
branch_align() -> ();
drop<StorageBaseAddress>([4]) -> ();
drop<u32>([3]) -> ();
enum_init<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>, 1>([18]) -> ([56]);
struct_construct<Tuple<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>>>([56]) -> ([57]);
enum_init<core::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>, 0>([57]) -> ([58]);
store_temp<RangeCheck>([5]) -> ([59]);
store_temp<GasBuiltin>([6]) -> ([60]);
store_temp<System>([7]) -> ([61]);
store_temp<core::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>>([58]) -> ([62]);
return([59], [60], [61], [62]);
branch_align() -> ();
drop<StorageBaseAddress>([4]) -> ();
drop<u32>([3]) -> ();
enum_init<core::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>, 1>([15]) -> ([63]);
store_temp<RangeCheck>([5]) -> ([64]);
store_temp<GasBuiltin>([6]) -> ([65]);
store_temp<System>([7]) -> ([66]);
store_temp<core::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>>([63]) -> ([67]);
return([64], [65], [66], [67]);
enum_match<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>>([0]) { fallthrough([1]) 3912([2]) };
branch_align() -> ();
struct_construct<Tuple<core::integer::u256>>([1]) -> ([3]);
enum_init<core::PanicResult::<(core::integer::u256,)>, 0>([3]) -> ([4]);
store_temp<core::PanicResult::<(core::integer::u256,)>>([4]) -> ([5]);
return([5]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::integer::u256,)>, 1>([2]) -> ([6]);
store_temp<core::PanicResult::<(core::integer::u256,)>>([6]) -> ([7]);
return([7]);
drop<erc20::erc20::ERC20::balances::Storage>([2]) -> ();
felt252_const<1065622543624526936256554561967983185612257046533136611876836524258158810564>() -> ([4]);
store_temp<Pedersen>([1]) -> ([7]);
store_temp<felt252>([4]) -> ([8]);
store_temp<ContractAddress>([3]) -> ([9]);
function_call<user@core::hash::LegacyHashContractAddress::hash>([7], [8], [9]) -> ([5], [6]);
storage_base_address_from_felt252([0], [6]) -> ([10], [11]);
store_temp<RangeCheck>([10]) -> ([12]);
store_temp<Pedersen>([5]) -> ([13]);
store_temp<StorageBaseAddress>([11]) -> ([14]);
return([12], [13], [14]);
drop<erc20::erc20::ERC20::allowances::Storage>([2]) -> ();
felt252_const<337994139936370667767799129369552596157394447336989834104582481799883947719>() -> ([4]);
store_temp<Pedersen>([1]) -> ([7]);
store_temp<felt252>([4]) -> ([8]);
store_temp<Tuple<ContractAddress, ContractAddress>>([3]) -> ([9]);
function_call<user@core::hash::TupleSize2LegacyHash::<core::starknet::contract_address::ContractAddress, core::starknet::contract_address::ContractAddress, core::hash::LegacyHashContractAddress, core::hash::LegacyHashContractAddress, core::starknet::contract_address::ContractAddressDrop, core::starknet::contract_address::ContractAddressDrop>::hash>([7], [8], [9]) -> ([5], [6]);
storage_base_address_from_felt252([0], [6]) -> ([10], [11]);
store_temp<RangeCheck>([10]) -> ([12]);
store_temp<Pedersen>([5]) -> ([13]);
store_temp<StorageBaseAddress>([11]) -> ([14]);
return([12], [13], [14]);
u128s_from_felt252([0], [1]) { fallthrough([2], [3]) 3944([4], [5], [6]) };
branch_align() -> ();
enum_init<core::option::Option::<core::integer::u128>, 0>([3]) -> ([7]);
store_temp<RangeCheck>([2]) -> ([8]);
store_temp<core::option::Option::<core::integer::u128>>([7]) -> ([9]);
jump() { 3951() };
branch_align() -> ();
struct_construct<Tuple<u128, u128>>([5], [6]) -> ([10]);
drop<Tuple<u128, u128>>([10]) -> ();
struct_construct<Unit>() -> ([11]);
enum_init<core::option::Option::<core::integer::u128>, 1>([11]) -> ([12]);
store_temp<RangeCheck>([4]) -> ([8]);
store_temp<core::option::Option::<core::integer::u128>>([12]) -> ([9]);
rename<RangeCheck>([8]) -> ([13]);
rename<core::option::Option::<core::integer::u128>>([9]) -> ([14]);
return([13], [14]);
get_execution_info_syscall([0], [1]) { fallthrough([2], [3], [4]) 3961([5], [6], [7]) };
branch_align() -> ();
enum_init<core::result::Result::<core::box::Box::<core::starknet::info::ExecutionInfo>, core::array::Array::<core::felt252>>, 0>([4]) -> ([8]);
store_temp<GasBuiltin>([2]) -> ([9]);
store_temp<System>([3]) -> ([10]);
store_temp<core::result::Result::<core::box::Box::<core::starknet::info::ExecutionInfo>, core::array::Array::<core::felt252>>>([8]) -> ([11]);
jump() { 3966() };
branch_align() -> ();
enum_init<core::result::Result::<core::box::Box::<core::starknet::info::ExecutionInfo>, core::array::Array::<core::felt252>>, 1>([7]) -> ([12]);
store_temp<GasBuiltin>([5]) -> ([9]);
store_temp<System>([6]) -> ([10]);
store_temp<core::result::Result::<core::box::Box::<core::starknet::info::ExecutionInfo>, core::array::Array::<core::felt252>>>([12]) -> ([11]);
rename<core::result::Result::<core::box::Box::<core::starknet::info::ExecutionInfo>, core::array::Array::<core::felt252>>>([11]) -> ([14]);
function_call<user@core::starknet::SyscallResultTraitImpl::<core::box::Box::<core::starknet::info::ExecutionInfo>>::unwrap_syscall>([14]) -> ([13]);
enum_match<core::PanicResult::<(core::box::Box::<core::starknet::info::ExecutionInfo>,)>>([13]) { fallthrough([15]) 3977([16]) };
branch_align() -> ();
struct_deconstruct<Tuple<Box<core::starknet::info::ExecutionInfo>>>([15]) -> ([17]);
struct_construct<Tuple<Box<core::starknet::info::ExecutionInfo>>>([17]) -> ([18]);
enum_init<core::PanicResult::<(core::box::Box::<core::starknet::info::ExecutionInfo>,)>, 0>([18]) -> ([19]);
store_temp<GasBuiltin>([9]) -> ([20]);
store_temp<System>([10]) -> ([21]);
store_temp<core::PanicResult::<(core::box::Box::<core::starknet::info::ExecutionInfo>,)>>([19]) -> ([22]);
return([20], [21], [22]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::box::Box::<core::starknet::info::ExecutionInfo>,)>, 1>([16]) -> ([23]);
store_temp<GasBuiltin>([9]) -> ([24]);
store_temp<System>([10]) -> ([25]);
store_temp<core::PanicResult::<(core::box::Box::<core::starknet::info::ExecutionInfo>,)>>([23]) -> ([26]);
return([24], [25], [26]);
dup<erc20::erc20::ERC20::allowances::Storage>([4]) -> ([7], [8]);
store_temp<RangeCheck>([0]) -> ([12]);
store_temp<Pedersen>([2]) -> ([13]);
store_temp<erc20::erc20::ERC20::allowances::Storage>([8]) -> ([14]);
store_temp<Tuple<ContractAddress, ContractAddress>>([5]) -> ([15]);
function_call<user@erc20::erc20::ERC20::allowances::StorageImpl::address>([12], [13], [14], [15]) -> ([9], [10], [11]);
u32_const<0>() -> ([16]);
store_temp<GasBuiltin>([1]) -> ([20]);
store_temp<System>([3]) -> ([21]);
store_temp<u32>([16]) -> ([22]);
store_temp<StorageBaseAddress>([11]) -> ([23]);
store_temp<core::integer::u256>([6]) -> ([24]);
function_call<user@core::starknet::storage_access::StorageAccessU256::write>([20], [21], [22], [23], [24]) -> ([17], [18], [19]);
rename<core::result::Result::<(), core::array::Array::<core::felt252>>>([19]) -> ([26]);
function_call<user@core::starknet::SyscallResultTraitImpl::<()>::unwrap_syscall>([26]) -> ([25]);
enum_match<core::PanicResult::<((),)>>([25]) { fallthrough([27]) 4009([28]) };
branch_align() -> ();
struct_deconstruct<Tuple<Unit>>([27]) -> ([29]);
struct_construct<Tuple<erc20::erc20::ERC20::allowances::Storage, Unit>>([7], [29]) -> ([30]);
enum_init<core::PanicResult::<(erc20::erc20::ERC20::allowances::Storage, ())>, 0>([30]) -> ([31]);
store_temp<RangeCheck>([9]) -> ([32]);
store_temp<GasBuiltin>([17]) -> ([33]);
store_temp<Pedersen>([10]) -> ([34]);
store_temp<System>([18]) -> ([35]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::allowances::Storage, ())>>([31]) -> ([36]);
return([32], [33], [34], [35], [36]);
branch_align() -> ();
drop<erc20::erc20::ERC20::allowances::Storage>([7]) -> ();
enum_init<core::PanicResult::<(erc20::erc20::ERC20::allowances::Storage, ())>, 1>([28]) -> ([37]);
store_temp<RangeCheck>([9]) -> ([38]);
store_temp<GasBuiltin>([17]) -> ([39]);
store_temp<Pedersen>([10]) -> ([40]);
store_temp<System>([18]) -> ([41]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::allowances::Storage, ())>>([37]) -> ([42]);
return([38], [39], [40], [41], [42]);
array_new<felt252>() -> ([5]);
felt252_const<544914742286571513055574265148471203182105283038408585630116262969508767999>() -> ([6]);
store_temp<felt252>([6]) -> ([6]);
array_append<felt252>([5], [6]) -> ([7]);
array_new<felt252>() -> ([8]);
dup<ContractAddress>([2]) -> ([9], [10]);
drop<ContractAddress>([9]) -> ();
store_temp<ContractAddress>([10]) -> ([13]);
store_temp<Array<felt252>>([8]) -> ([14]);
function_call<user@core::starknet::contract_address::ContractAddressSerde::serialize>([13], [14]) -> ([11], [12]);
drop<Unit>([12]) -> ();
dup<ContractAddress>([3]) -> ([15], [16]);
drop<ContractAddress>([15]) -> ();
store_temp<ContractAddress>([16]) -> ([19]);
store_temp<Array<felt252>>([11]) -> ([20]);
function_call<user@core::starknet::contract_address::ContractAddressSerde::serialize>([19], [20]) -> ([17], [18]);
drop<Unit>([18]) -> ();
dup<core::integer::u256>([4]) -> ([21], [22]);
drop<core::integer::u256>([21]) -> ();
store_temp<core::integer::u256>([22]) -> ([25]);
store_temp<Array<felt252>>([17]) -> ([26]);
function_call<user@core::integer::u256Serde::serialize>([25], [26]) -> ([23], [24]);
drop<Unit>([24]) -> ();
snapshot_take<Array<felt252>>([7]) -> ([27], [28]);
drop<Array<felt252>>([27]) -> ();
struct_construct<core::array::Span::<core::felt252>>([28]) -> ([29]);
snapshot_take<Array<felt252>>([23]) -> ([30], [31]);
drop<Array<felt252>>([30]) -> ();
struct_construct<core::array::Span::<core::felt252>>([31]) -> ([32]);
store_temp<core::array::Span::<core::felt252>>([29]) -> ([29]);
store_temp<core::array::Span::<core::felt252>>([32]) -> ([32]);
emit_event_syscall([0], [1], [29], [32]) { fallthrough([33], [34]) 4057([35], [36], [37]) };
branch_align() -> ();
struct_construct<Unit>() -> ([38]);
enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 0>([38]) -> ([39]);
store_temp<GasBuiltin>([33]) -> ([40]);
store_temp<System>([34]) -> ([41]);
store_temp<core::result::Result::<(), core::array::Array::<core::felt252>>>([39]) -> ([42]);
jump() { 4062() };
branch_align() -> ();
enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 1>([37]) -> ([43]);
store_temp<GasBuiltin>([35]) -> ([40]);
store_temp<System>([36]) -> ([41]);
store_temp<core::result::Result::<(), core::array::Array::<core::felt252>>>([43]) -> ([42]);
rename<core::result::Result::<(), core::array::Array::<core::felt252>>>([42]) -> ([45]);
function_call<user@core::starknet::SyscallResultTraitImpl::<()>::unwrap_syscall>([45]) -> ([44]);
enum_match<core::PanicResult::<((),)>>([44]) { fallthrough([46]) 4073([47]) };
branch_align() -> ();
struct_deconstruct<Tuple<Unit>>([46]) -> ([48]);
struct_construct<Tuple<Unit>>([48]) -> ([49]);
enum_init<core::PanicResult::<((),)>, 0>([49]) -> ([50]);
store_temp<GasBuiltin>([40]) -> ([51]);
store_temp<System>([41]) -> ([52]);
store_temp<core::PanicResult::<((),)>>([50]) -> ([53]);
return([51], [52], [53]);
branch_align() -> ();
enum_init<core::PanicResult::<((),)>, 1>([47]) -> ([54]);
store_temp<GasBuiltin>([40]) -> ([55]);
store_temp<System>([41]) -> ([56]);
store_temp<core::PanicResult::<((),)>>([54]) -> ([57]);
return([55], [56], [57]);
store_temp<RangeCheck>([0]) -> ([5]);
store_temp<core::integer::u256>([1]) -> ([6]);
store_temp<core::integer::u256>([2]) -> ([7]);
function_call<user@core::integer::u256_overflowing_add>([5], [6], [7]) -> ([3], [4]);
struct_deconstruct<Tuple<core::integer::u256, core::bool>>([4]) -> ([8], [9]);
enum_match<core::bool>([9]) { fallthrough([10]) 4090([11]) };
branch_align() -> ();
drop<Unit>([10]) -> ();
enum_init<core::option::Option::<core::integer::u256>, 0>([8]) -> ([12]);
store_temp<core::option::Option::<core::integer::u256>>([12]) -> ([13]);
jump() { 4096() };
branch_align() -> ();
drop<Unit>([11]) -> ();
drop<core::integer::u256>([8]) -> ();
struct_construct<Unit>() -> ([14]);
enum_init<core::option::Option::<core::integer::u256>, 1>([14]) -> ([15]);
store_temp<core::option::Option::<core::integer::u256>>([15]) -> ([13]);
store_temp<RangeCheck>([3]) -> ([16]);
store_temp<core::option::Option::<core::integer::u256>>([13]) -> ([17]);
return([16], [17]);
store_temp<RangeCheck>([0]) -> ([5]);
store_temp<core::integer::u256>([1]) -> ([6]);
store_temp<core::integer::u256>([2]) -> ([7]);
function_call<user@core::integer::u256_overflow_sub>([5], [6], [7]) -> ([3], [4]);
struct_deconstruct<Tuple<core::integer::u256, core::bool>>([4]) -> ([8], [9]);
enum_match<core::bool>([9]) { fallthrough([10]) 4110([11]) };
branch_align() -> ();
drop<Unit>([10]) -> ();
enum_init<core::option::Option::<core::integer::u256>, 0>([8]) -> ([12]);
store_temp<core::option::Option::<core::integer::u256>>([12]) -> ([13]);
jump() { 4116() };
branch_align() -> ();
drop<Unit>([11]) -> ();
drop<core::integer::u256>([8]) -> ();
struct_construct<Unit>() -> ([14]);
enum_init<core::option::Option::<core::integer::u256>, 1>([14]) -> ([15]);
store_temp<core::option::Option::<core::integer::u256>>([15]) -> ([13]);
store_temp<RangeCheck>([3]) -> ([16]);
store_temp<core::option::Option::<core::integer::u256>>([13]) -> ([17]);
return([16], [17]);
enum_match<core::result::Result::<(), core::array::Array::<core::felt252>>>([0]) { fallthrough([1]) 4125([2]) };
branch_align() -> ();
struct_construct<Tuple<Unit>>([1]) -> ([3]);
enum_init<core::PanicResult::<((),)>, 0>([3]) -> ([4]);
store_temp<core::PanicResult::<((),)>>([4]) -> ([5]);
return([5]);
branch_align() -> ();
enum_init<core::PanicResult::<((),)>, 1>([2]) -> ([6]);
store_temp<core::PanicResult::<((),)>>([6]) -> ([7]);
return([7]);
struct_deconstruct<core::integer::u256>([4]) -> ([5], [6]);
u128_to_felt252([5]) -> ([7]);
dup<StorageBaseAddress>([3]) -> ([3], [9]);
storage_address_from_base([9]) -> ([8]);
dup<u32>([2]) -> ([2], [10]);
storage_write_syscall([0], [1], [10], [8], [7]) { fallthrough([11], [12]) 4158([13], [14], [15]) };
branch_align() -> ();
u8_const<1>() -> ([16]);
storage_address_from_base_and_offset([3], [16]) -> ([17]);
u128_to_felt252([6]) -> ([18]);
store_temp<GasBuiltin>([11]) -> ([11]);
store_temp<StorageAddress>([17]) -> ([17]);
storage_write_syscall([11], [12], [2], [17], [18]) { fallthrough([19], [20]) 4149([21], [22], [23]) };
branch_align() -> ();
struct_construct<Unit>() -> ([24]);
enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 0>([24]) -> ([25]);
store_temp<GasBuiltin>([19]) -> ([26]);
store_temp<System>([20]) -> ([27]);
store_temp<core::result::Result::<(), core::array::Array::<core::felt252>>>([25]) -> ([28]);
jump() { 4154() };
branch_align() -> ();
enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 1>([23]) -> ([29]);
store_temp<GasBuiltin>([21]) -> ([26]);
store_temp<System>([22]) -> ([27]);
store_temp<core::result::Result::<(), core::array::Array::<core::felt252>>>([29]) -> ([28]);
rename<GasBuiltin>([26]) -> ([30]);
rename<System>([27]) -> ([31]);
rename<core::result::Result::<(), core::array::Array::<core::felt252>>>([28]) -> ([32]);
return([30], [31], [32]);
branch_align() -> ();
drop<StorageBaseAddress>([3]) -> ();
drop<u128>([6]) -> ();
drop<u32>([2]) -> ();
enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 1>([15]) -> ([33]);
store_temp<GasBuiltin>([13]) -> ([34]);
store_temp<System>([14]) -> ([35]);
store_temp<core::result::Result::<(), core::array::Array::<core::felt252>>>([33]) -> ([36]);
return([34], [35], [36]);
rename<ContractAddress>([0]) -> ([2]);
contract_address_to_felt252([2]) -> ([3]);
dup<felt252>([3]) -> ([4], [5]);
drop<felt252>([4]) -> ();
store_temp<felt252>([5]) -> ([8]);
store_temp<Array<felt252>>([1]) -> ([9]);
function_call<user@core::serde::Felt252Serde::serialize>([8], [9]) -> ([6], [7]);
drop<Unit>([7]) -> ();
struct_construct<Unit>() -> ([10]);
store_temp<Array<felt252>>([6]) -> ([11]);
store_temp<Unit>([10]) -> ([12]);
return([11], [12]);
storage_address_from_base([4]) -> ([5]);
storage_read_syscall([1], [2], [3], [5]) { fallthrough([6], [7], [8]) 4209([9], [10], [11]) };
branch_align() -> ();
store_temp<RangeCheck>([0]) -> ([14]);
store_temp<felt252>([8]) -> ([15]);
function_call<user@core::integer::u128_try_from_felt252>([14], [15]) -> ([12], [13]);
store_temp<GasBuiltin>([6]) -> ([6]);
store_temp<System>([7]) -> ([7]);
enum_match<core::option::Option::<core::integer::u128>>([13]) { fallthrough([16]) 4197([17]) };
branch_align() -> ();
enum_init<core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>, 0>([16]) -> ([18]);
struct_construct<Tuple<core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>>>([18]) -> ([19]);
enum_init<core::PanicResult::<(core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>,)>, 0>([19]) -> ([20]);
store_temp<RangeCheck>([12]) -> ([21]);
store_temp<GasBuiltin>([6]) -> ([22]);
store_temp<System>([7]) -> ([23]);
store_temp<core::PanicResult::<(core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>,)>>([20]) -> ([24]);
return([21], [22], [23], [24]);
branch_align() -> ();
drop<Unit>([17]) -> ();
array_new<felt252>() -> ([25]);
felt252_const<8788818928753408456771414258856301875522769902639082522293830758968>() -> ([26]);
store_temp<felt252>([26]) -> ([26]);
array_append<felt252>([25], [26]) -> ([27]);
enum_init<core::PanicResult::<(core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>,)>, 1>([27]) -> ([28]);
store_temp<RangeCheck>([12]) -> ([29]);
store_temp<GasBuiltin>([6]) -> ([30]);
store_temp<System>([7]) -> ([31]);
store_temp<core::PanicResult::<(core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>,)>>([28]) -> ([32]);
return([29], [30], [31], [32]);
branch_align() -> ();
enum_init<core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>, 1>([11]) -> ([33]);
struct_construct<Tuple<core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>>>([33]) -> ([34]);
enum_init<core::PanicResult::<(core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>,)>, 0>([34]) -> ([35]);
store_temp<RangeCheck>([0]) -> ([36]);
store_temp<GasBuiltin>([9]) -> ([37]);
store_temp<System>([10]) -> ([38]);
store_temp<core::PanicResult::<(core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>,)>>([35]) -> ([39]);
return([36], [37], [38], [39]);
contract_address_to_felt252([2]) -> ([3]);
pedersen([0], [1], [3]) -> ([4], [5]);
store_temp<Pedersen>([4]) -> ([6]);
store_temp<felt252>([5]) -> ([7]);
return([6], [7]);
struct_deconstruct<Tuple<ContractAddress, ContractAddress>>([2]) -> ([3], [4]);
store_temp<Pedersen>([0]) -> ([7]);
store_temp<felt252>([1]) -> ([8]);
store_temp<ContractAddress>([3]) -> ([9]);
function_call<user@core::hash::LegacyHashContractAddress::hash>([7], [8], [9]) -> ([5], [6]);
rename<Pedersen>([5]) -> ([12]);
rename<felt252>([6]) -> ([13]);
store_temp<ContractAddress>([4]) -> ([14]);
function_call<user@core::hash::LegacyHashContractAddress::hash>([12], [13], [14]) -> ([10], [11]);
rename<Pedersen>([10]) -> ([15]);
rename<felt252>([11]) -> ([16]);
return([15], [16]);
enum_match<core::result::Result::<core::box::Box::<core::starknet::info::ExecutionInfo>, core::array::Array::<core::felt252>>>([0]) { fallthrough([1]) 4241([2]) };
branch_align() -> ();
struct_construct<Tuple<Box<core::starknet::info::ExecutionInfo>>>([1]) -> ([3]);
enum_init<core::PanicResult::<(core::box::Box::<core::starknet::info::ExecutionInfo>,)>, 0>([3]) -> ([4]);
store_temp<core::PanicResult::<(core::box::Box::<core::starknet::info::ExecutionInfo>,)>>([4]) -> ([5]);
return([5]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::box::Box::<core::starknet::info::ExecutionInfo>,)>, 1>([2]) -> ([6]);
store_temp<core::PanicResult::<(core::box::Box::<core::starknet::info::ExecutionInfo>,)>>([6]) -> ([7]);
return([7]);
struct_deconstruct<core::integer::u256>([1]) -> ([3], [4]);
struct_deconstruct<core::integer::u256>([2]) -> ([5], [6]);
u128_overflowing_add([0], [4], [6]) { fallthrough([7], [8]) 4255([9], [10]) };
branch_align() -> ();
struct_construct<Unit>() -> ([11]);
enum_init<core::bool, 0>([11]) -> ([12]);
struct_construct<Tuple<u128, core::bool>>([8], [12]) -> ([13]);
store_temp<RangeCheck>([7]) -> ([14]);
store_temp<Tuple<u128, core::bool>>([13]) -> ([15]);
jump() { 4261() };
branch_align() -> ();
struct_construct<Unit>() -> ([16]);
enum_init<core::bool, 1>([16]) -> ([17]);
struct_construct<Tuple<u128, core::bool>>([10], [17]) -> ([18]);
store_temp<RangeCheck>([9]) -> ([14]);
store_temp<Tuple<u128, core::bool>>([18]) -> ([15]);
struct_deconstruct<Tuple<u128, core::bool>>([15]) -> ([19], [20]);
u128_overflowing_add([14], [3], [5]) { fallthrough([21], [22]) 4269([23], [24]) };
branch_align() -> ();
struct_construct<core::integer::u256>([22], [19]) -> ([25]);
struct_construct<Tuple<core::integer::u256, core::bool>>([25], [20]) -> ([26]);
store_temp<RangeCheck>([21]) -> ([27]);
store_temp<Tuple<core::integer::u256, core::bool>>([26]) -> ([28]);
jump() { 4289() };
branch_align() -> ();
u128_const<1>() -> ([29]);
store_temp<u128>([29]) -> ([29]);
u128_overflowing_add([23], [19], [29]) { fallthrough([30], [31]) 4279([32], [33]) };
branch_align() -> ();
struct_construct<core::integer::u256>([24], [31]) -> ([34]);
struct_construct<Tuple<core::integer::u256, core::bool>>([34], [20]) -> ([35]);
store_temp<RangeCheck>([30]) -> ([36]);
store_temp<Tuple<core::integer::u256, core::bool>>([35]) -> ([37]);
jump() { 4287() };
branch_align() -> ();
drop<core::bool>([20]) -> ();
struct_construct<core::integer::u256>([24], [33]) -> ([38]);
struct_construct<Unit>() -> ([39]);
enum_init<core::bool, 1>([39]) -> ([40]);
struct_construct<Tuple<core::integer::u256, core::bool>>([38], [40]) -> ([41]);
store_temp<RangeCheck>([32]) -> ([36]);
store_temp<Tuple<core::integer::u256, core::bool>>([41]) -> ([37]);
rename<RangeCheck>([36]) -> ([27]);
rename<Tuple<core::integer::u256, core::bool>>([37]) -> ([28]);
rename<RangeCheck>([27]) -> ([42]);
rename<Tuple<core::integer::u256, core::bool>>([28]) -> ([43]);
return([42], [43]);
struct_deconstruct<core::integer::u256>([1]) -> ([3], [4]);
struct_deconstruct<core::integer::u256>([2]) -> ([5], [6]);
u128_overflowing_sub([0], [4], [6]) { fallthrough([7], [8]) 4302([9], [10]) };
branch_align() -> ();
struct_construct<Unit>() -> ([11]);
enum_init<core::bool, 0>([11]) -> ([12]);
struct_construct<Tuple<u128, core::bool>>([8], [12]) -> ([13]);
store_temp<RangeCheck>([7]) -> ([14]);
store_temp<Tuple<u128, core::bool>>([13]) -> ([15]);
jump() { 4308() };
branch_align() -> ();
struct_construct<Unit>() -> ([16]);
enum_init<core::bool, 1>([16]) -> ([17]);
struct_construct<Tuple<u128, core::bool>>([10], [17]) -> ([18]);
store_temp<RangeCheck>([9]) -> ([14]);
store_temp<Tuple<u128, core::bool>>([18]) -> ([15]);
struct_deconstruct<Tuple<u128, core::bool>>([15]) -> ([19], [20]);
u128_overflowing_sub([14], [3], [5]) { fallthrough([21], [22]) 4316([23], [24]) };
branch_align() -> ();
struct_construct<core::integer::u256>([22], [19]) -> ([25]);
struct_construct<Tuple<core::integer::u256, core::bool>>([25], [20]) -> ([26]);
store_temp<RangeCheck>([21]) -> ([27]);
store_temp<Tuple<core::integer::u256, core::bool>>([26]) -> ([28]);
jump() { 4336() };
branch_align() -> ();
u128_const<1>() -> ([29]);
store_temp<u128>([29]) -> ([29]);
u128_overflowing_sub([23], [19], [29]) { fallthrough([30], [31]) 4326([32], [33]) };
branch_align() -> ();
struct_construct<core::integer::u256>([24], [31]) -> ([34]);
struct_construct<Tuple<core::integer::u256, core::bool>>([34], [20]) -> ([35]);
store_temp<RangeCheck>([30]) -> ([36]);
store_temp<Tuple<core::integer::u256, core::bool>>([35]) -> ([37]);
jump() { 4334() };
branch_align() -> ();
drop<core::bool>([20]) -> ();
struct_construct<core::integer::u256>([24], [33]) -> ([38]);
struct_construct<Unit>() -> ([39]);
enum_init<core::bool, 1>([39]) -> ([40]);
struct_construct<Tuple<core::integer::u256, core::bool>>([38], [40]) -> ([41]);
store_temp<RangeCheck>([32]) -> ([36]);
store_temp<Tuple<core::integer::u256, core::bool>>([41]) -> ([37]);
rename<RangeCheck>([36]) -> ([27]);
rename<Tuple<core::integer::u256, core::bool>>([37]) -> ([28]);
rename<RangeCheck>([27]) -> ([42]);
rename<Tuple<core::integer::u256, core::bool>>([28]) -> ([43]);
return([42], [43]);

erc20::erc20::ERC20::__external::get_name@0([0]: RangeCheck, [1]: GasBuiltin, [2]: System, [3]: core::array::Span::<core::felt252>) -> (RangeCheck, GasBuiltin, System, core::PanicResult::<(core::array::Span::<core::felt252>,)>);
erc20::erc20::ERC20::__external::get_symbol@104([0]: RangeCheck, [1]: GasBuiltin, [2]: System, [3]: core::array::Span::<core::felt252>) -> (RangeCheck, GasBuiltin, System, core::PanicResult::<(core::array::Span::<core::felt252>,)>);
erc20::erc20::ERC20::__external::get_decimals@208([0]: RangeCheck, [1]: GasBuiltin, [2]: System, [3]: core::array::Span::<core::felt252>) -> (RangeCheck, GasBuiltin, System, core::PanicResult::<(core::array::Span::<core::felt252>,)>);
erc20::erc20::ERC20::__external::get_total_supply@312([0]: RangeCheck, [1]: GasBuiltin, [2]: System, [3]: core::array::Span::<core::felt252>) -> (RangeCheck, GasBuiltin, System, core::PanicResult::<(core::array::Span::<core::felt252>,)>);
erc20::erc20::ERC20::__external::balance_of@416([0]: Pedersen, [1]: RangeCheck, [2]: GasBuiltin, [3]: System, [4]: core::array::Span::<core::felt252>) -> (Pedersen, RangeCheck, GasBuiltin, System, core::PanicResult::<(core::array::Span::<core::felt252>,)>);
erc20::erc20::ERC20::__external::allowance@549([0]: Pedersen, [1]: RangeCheck, [2]: GasBuiltin, [3]: System, [4]: core::array::Span::<core::felt252>) -> (Pedersen, RangeCheck, GasBuiltin, System, core::PanicResult::<(core::array::Span::<core::felt252>,)>);
erc20::erc20::ERC20::__external::transfer@706([0]: Pedersen, [1]: RangeCheck, [2]: GasBuiltin, [3]: System, [4]: core::array::Span::<core::felt252>) -> (Pedersen, RangeCheck, GasBuiltin, System, core::PanicResult::<(core::array::Span::<core::felt252>,)>);
erc20::erc20::ERC20::__external::transfer_from@855([0]: Pedersen, [1]: RangeCheck, [2]: GasBuiltin, [3]: System, [4]: core::array::Span::<core::felt252>) -> (Pedersen, RangeCheck, GasBuiltin, System, core::PanicResult::<(core::array::Span::<core::felt252>,)>);
erc20::erc20::ERC20::__external::approve@1029([0]: Pedersen, [1]: RangeCheck, [2]: GasBuiltin, [3]: System, [4]: core::array::Span::<core::felt252>) -> (Pedersen, RangeCheck, GasBuiltin, System, core::PanicResult::<(core::array::Span::<core::felt252>,)>);
erc20::erc20::ERC20::__external::increase_allowance@1178([0]: Pedersen, [1]: RangeCheck, [2]: GasBuiltin, [3]: System, [4]: core::array::Span::<core::felt252>) -> (Pedersen, RangeCheck, GasBuiltin, System, core::PanicResult::<(core::array::Span::<core::felt252>,)>);
erc20::erc20::ERC20::__external::decrease_allowance@1327([0]: Pedersen, [1]: RangeCheck, [2]: GasBuiltin, [3]: System, [4]: core::array::Span::<core::felt252>) -> (Pedersen, RangeCheck, GasBuiltin, System, core::PanicResult::<(core::array::Span::<core::felt252>,)>);
erc20::erc20::ERC20::__constructor::constructor@1476([0]: Pedersen, [1]: RangeCheck, [2]: GasBuiltin, [3]: System, [4]: core::array::Span::<core::felt252>) -> (Pedersen, RangeCheck, GasBuiltin, System, core::PanicResult::<(core::array::Span::<core::felt252>,)>);
erc20::erc20::ERC20::unsafe_new_storage@1702() -> (erc20::erc20::ERC20::Storage);
erc20::erc20::ERC20::get_name@1711([0]: GasBuiltin, [1]: System, [2]: erc20::erc20::ERC20::Storage) -> (GasBuiltin, System, core::PanicResult::<(core::felt252,)>);
core::serde::Felt252Serde::serialize@1736([0]: felt252, [1]: Array<felt252>) -> (Array<felt252>, Unit);
core::starknet::use_system_implicit@1742([0]: System) -> (System, Unit);
erc20::erc20::ERC20::get_symbol@1746([0]: GasBuiltin, [1]: System, [2]: erc20::erc20::ERC20::Storage) -> (GasBuiltin, System, core::PanicResult::<(core::felt252,)>);
erc20::erc20::ERC20::get_decimals@1771([0]: RangeCheck, [1]: GasBuiltin, [2]: System, [3]: erc20::erc20::ERC20::Storage) -> (RangeCheck, GasBuiltin, System, core::PanicResult::<(core::integer::u8,)>);
core::serde::U8Serde::serialize@1799([0]: u8, [1]: Array<felt252>) -> (Array<felt252>, Unit);
erc20::erc20::ERC20::get_total_supply@1811([0]: RangeCheck, [1]: GasBuiltin, [2]: System, [3]: erc20::erc20::ERC20::Storage) -> (RangeCheck, GasBuiltin, System, core::PanicResult::<(core::integer::u256,)>);
core::integer::u256Serde::serialize@1839([0]: core::integer::u256, [1]: Array<felt252>) -> (Array<felt252>, Unit);
core::starknet::contract_address::ContractAddressSerde::deserialize@1854([0]: RangeCheck, [1]: core::array::Span::<core::felt252>) -> (RangeCheck, core::array::Span::<core::felt252>, core::option::Option::<core::starknet::contract_address::ContractAddress>);
erc20::erc20::ERC20::balance_of@1878([0]: RangeCheck, [1]: GasBuiltin, [2]: Pedersen, [3]: System, [4]: erc20::erc20::ERC20::Storage, [5]: ContractAddress) -> (RangeCheck, GasBuiltin, Pedersen, System, core::PanicResult::<(core::integer::u256,)>);
erc20::erc20::ERC20::allowance@1910([0]: RangeCheck, [1]: GasBuiltin, [2]: Pedersen, [3]: System, [4]: erc20::erc20::ERC20::Storage, [5]: ContractAddress, [6]: ContractAddress) -> (RangeCheck, GasBuiltin, Pedersen, System, core::PanicResult::<(core::integer::u256,)>);
core::integer::u256Serde::deserialize@1943([0]: RangeCheck, [1]: core::array::Span::<core::felt252>) -> (RangeCheck, core::array::Span::<core::felt252>, core::option::Option::<core::integer::u256>);
erc20::erc20::ERC20::transfer@1972([0]: RangeCheck, [1]: GasBuiltin, [2]: Pedersen, [3]: System, [4]: erc20::erc20::ERC20::Storage, [5]: ContractAddress, [6]: core::integer::u256) -> (RangeCheck, GasBuiltin, Pedersen, System, core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>);
erc20::erc20::ERC20::transfer_from@2019([0]: RangeCheck, [1]: GasBuiltin, [2]: Pedersen, [3]: System, [4]: erc20::erc20::ERC20::Storage, [5]: ContractAddress, [6]: ContractAddress, [7]: core::integer::u256) -> (RangeCheck, GasBuiltin, Pedersen, System, core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>);
erc20::erc20::ERC20::approve@2093([0]: RangeCheck, [1]: GasBuiltin, [2]: Pedersen, [3]: System, [4]: erc20::erc20::ERC20::Storage, [5]: ContractAddress, [6]: core::integer::u256) -> (RangeCheck, GasBuiltin, Pedersen, System, core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>);
erc20::erc20::ERC20::increase_allowance@2140([0]: RangeCheck, [1]: GasBuiltin, [2]: Pedersen, [3]: System, [4]: erc20::erc20::ERC20::Storage, [5]: ContractAddress, [6]: core::integer::u256) -> (RangeCheck, GasBuiltin, Pedersen, System, core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>);
erc20::erc20::ERC20::decrease_allowance@2243([0]: RangeCheck, [1]: GasBuiltin, [2]: Pedersen, [3]: System, [4]: erc20::erc20::ERC20::Storage, [5]: ContractAddress, [6]: core::integer::u256) -> (RangeCheck, GasBuiltin, Pedersen, System, core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>);
core::serde::Felt252Serde::deserialize@2346([0]: core::array::Span::<core::felt252>) -> (core::array::Span::<core::felt252>, core::option::Option::<core::felt252>);
core::serde::U8Serde::deserialize@2376([0]: RangeCheck, [1]: core::array::Span::<core::felt252>) -> (RangeCheck, core::array::Span::<core::felt252>, core::option::Option::<core::integer::u8>);
erc20::erc20::ERC20::constructor@2419([0]: RangeCheck, [1]: GasBuiltin, [2]: Pedersen, [3]: System, [4]: erc20::erc20::ERC20::Storage, [5]: felt252, [6]: felt252, [7]: u8, [8]: core::integer::u256, [9]: ContractAddress) -> (RangeCheck, GasBuiltin, Pedersen, System, core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>);
erc20::erc20::ERC20::name::StorageImpl::read@2623([0]: GasBuiltin, [1]: System, [2]: erc20::erc20::ERC20::name::Storage) -> (GasBuiltin, System, core::PanicResult::<(core::felt252,)>);
erc20::erc20::ERC20::symbol::StorageImpl::read@2658([0]: GasBuiltin, [1]: System, [2]: erc20::erc20::ERC20::symbol::Storage) -> (GasBuiltin, System, core::PanicResult::<(core::felt252,)>);
erc20::erc20::ERC20::decimals::StorageImpl::read@2693([0]: RangeCheck, [1]: GasBuiltin, [2]: System, [3]: erc20::erc20::ERC20::decimals::Storage) -> (RangeCheck, GasBuiltin, System, core::PanicResult::<(core::integer::u8,)>);
erc20::erc20::ERC20::total_supply::StorageImpl::read@2731([0]: RangeCheck, [1]: GasBuiltin, [2]: System, [3]: erc20::erc20::ERC20::total_supply::Storage) -> (RangeCheck, GasBuiltin, System, core::PanicResult::<(core::integer::u256,)>);
core::serde::U128Serde::serialize@2769([0]: u128, [1]: Array<felt252>) -> (Array<felt252>, Unit);
erc20::erc20::ERC20::balances::StorageImpl::read@2781([0]: RangeCheck, [1]: GasBuiltin, [2]: Pedersen, [3]: System, [4]: erc20::erc20::ERC20::balances::Storage, [5]: ContractAddress) -> (RangeCheck, GasBuiltin, Pedersen, System, core::PanicResult::<(core::integer::u256,)>);
erc20::erc20::ERC20::allowances::StorageImpl::read@2825([0]: RangeCheck, [1]: GasBuiltin, [2]: Pedersen, [3]: System, [4]: erc20::erc20::ERC20::allowances::Storage, [5]: Tuple<ContractAddress, ContractAddress>) -> (RangeCheck, GasBuiltin, Pedersen, System, core::PanicResult::<(core::integer::u256,)>);
core::serde::U128Serde::deserialize@2869([0]: RangeCheck, [1]: core::array::Span::<core::felt252>) -> (RangeCheck, core::array::Span::<core::felt252>, core::option::Option::<core::integer::u128>);
core::starknet::info::get_caller_address@2912([0]: GasBuiltin, [1]: System) -> (GasBuiltin, System, core::PanicResult::<(core::starknet::contract_address::ContractAddress,)>);
erc20::erc20::ERC20::StorageImpl::transfer_helper@2936([0]: RangeCheck, [1]: GasBuiltin, [2]: Pedersen, [3]: System, [4]: erc20::erc20::ERC20::Storage, [5]: ContractAddress, [6]: ContractAddress, [7]: core::integer::u256) -> (RangeCheck, GasBuiltin, Pedersen, System, core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>);
erc20::erc20::ERC20::StorageImpl::spend_allowance@3208([0]: RangeCheck, [1]: GasBuiltin, [2]: Pedersen, [3]: System, [4]: erc20::erc20::ERC20::Storage, [5]: ContractAddress, [6]: ContractAddress, [7]: core::integer::u256) -> (RangeCheck, GasBuiltin, Pedersen, System, core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>);
erc20::erc20::ERC20::StorageImpl::approve_helper@3355([0]: RangeCheck, [1]: GasBuiltin, [2]: Pedersen, [3]: System, [4]: erc20::erc20::ERC20::Storage, [5]: ContractAddress, [6]: ContractAddress, [7]: core::integer::u256) -> (RangeCheck, GasBuiltin, Pedersen, System, core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>);
core::integer::U256Add::add@3457([0]: RangeCheck, [1]: core::integer::u256, [2]: core::integer::u256) -> (RangeCheck, core::PanicResult::<(core::integer::u256,)>);
core::integer::U256Sub::sub@3478([0]: RangeCheck, [1]: core::integer::u256, [2]: core::integer::u256) -> (RangeCheck, core::PanicResult::<(core::integer::u256,)>);
core::integer::Felt252TryIntoU8::try_into@3499([0]: RangeCheck, [1]: felt252) -> (RangeCheck, core::option::Option::<core::integer::u8>);
erc20::erc20::ERC20::name::StorageImpl::write@3513([0]: GasBuiltin, [1]: System, [2]: erc20::erc20::ERC20::name::Storage, [3]: felt252) -> (GasBuiltin, System, core::PanicResult::<(erc20::erc20::ERC20::name::Storage, ())>);
erc20::erc20::ERC20::symbol::StorageImpl::write@3551([0]: GasBuiltin, [1]: System, [2]: erc20::erc20::ERC20::symbol::Storage, [3]: felt252) -> (GasBuiltin, System, core::PanicResult::<(erc20::erc20::ERC20::symbol::Storage, ())>);
erc20::erc20::ERC20::decimals::StorageImpl::write@3589([0]: GasBuiltin, [1]: System, [2]: erc20::erc20::ERC20::decimals::Storage, [3]: u8) -> (GasBuiltin, System, core::PanicResult::<(erc20::erc20::ERC20::decimals::Storage, ())>);
core::assert@3628([0]: core::bool, [1]: felt252) -> (core::PanicResult::<((),)>);
erc20::erc20::ERC20::total_supply::StorageImpl::write@3646([0]: GasBuiltin, [1]: System, [2]: erc20::erc20::ERC20::total_supply::Storage, [3]: core::integer::u256) -> (GasBuiltin, System, core::PanicResult::<(erc20::erc20::ERC20::total_supply::Storage, ())>);
erc20::erc20::ERC20::balances::StorageImpl::write@3674([0]: RangeCheck, [1]: GasBuiltin, [2]: Pedersen, [3]: System, [4]: erc20::erc20::ERC20::balances::Storage, [5]: ContractAddress, [6]: core::integer::u256) -> (RangeCheck, GasBuiltin, Pedersen, System, core::PanicResult::<(erc20::erc20::ERC20::balances::Storage, ())>);
erc20::erc20::ERC20::Transfer@3709([0]: GasBuiltin, [1]: System, [2]: ContractAddress, [3]: ContractAddress, [4]: core::integer::u256) -> (GasBuiltin, System, core::PanicResult::<((),)>);
core::starknet::SyscallResultTraitImpl::<core::felt252>::unwrap_syscall@3770([0]: core::result::Result::<core::felt252, core::array::Array::<core::felt252>>) -> (core::PanicResult::<(core::felt252,)>);
core::starknet::storage_access::StorageAccessU8::read@3780([0]: RangeCheck, [1]: GasBuiltin, [2]: System, [3]: u32, [4]: StorageBaseAddress) -> (RangeCheck, GasBuiltin, System, core::PanicResult::<(core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>,)>);
core::starknet::SyscallResultTraitImpl::<core::integer::u8>::unwrap_syscall@3819([0]: core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>) -> (core::PanicResult::<(core::integer::u8,)>);
core::starknet::storage_access::StorageAccessU256::read@3829([0]: RangeCheck, [1]: GasBuiltin, [2]: System, [3]: u32, [4]: StorageBaseAddress) -> (RangeCheck, GasBuiltin, System, core::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>);
core::starknet::SyscallResultTraitImpl::<core::integer::u256>::unwrap_syscall@3906([0]: core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>) -> (core::PanicResult::<(core::integer::u256,)>);
erc20::erc20::ERC20::balances::StorageImpl::address@3916([0]: RangeCheck, [1]: Pedersen, [2]: erc20::erc20::ERC20::balances::Storage, [3]: ContractAddress) -> (RangeCheck, Pedersen, StorageBaseAddress);
erc20::erc20::ERC20::allowances::StorageImpl::address@3927([0]: RangeCheck, [1]: Pedersen, [2]: erc20::erc20::ERC20::allowances::Storage, [3]: Tuple<ContractAddress, ContractAddress>) -> (RangeCheck, Pedersen, StorageBaseAddress);
core::integer::u128_try_from_felt252@3938([0]: RangeCheck, [1]: felt252) -> (RangeCheck, core::option::Option::<core::integer::u128>);
core::starknet::info::get_execution_info@3954([0]: GasBuiltin, [1]: System) -> (GasBuiltin, System, core::PanicResult::<(core::box::Box::<core::starknet::info::ExecutionInfo>,)>);
erc20::erc20::ERC20::allowances::StorageImpl::write@3983([0]: RangeCheck, [1]: GasBuiltin, [2]: Pedersen, [3]: System, [4]: erc20::erc20::ERC20::allowances::Storage, [5]: Tuple<ContractAddress, ContractAddress>, [6]: core::integer::u256) -> (RangeCheck, GasBuiltin, Pedersen, System, core::PanicResult::<(erc20::erc20::ERC20::allowances::Storage, ())>);
erc20::erc20::ERC20::Approval@4018([0]: GasBuiltin, [1]: System, [2]: ContractAddress, [3]: ContractAddress, [4]: core::integer::u256) -> (GasBuiltin, System, core::PanicResult::<((),)>);
core::integer::u256_checked_add@4079([0]: RangeCheck, [1]: core::integer::u256, [2]: core::integer::u256) -> (RangeCheck, core::option::Option::<core::integer::u256>);
core::integer::u256_checked_sub@4099([0]: RangeCheck, [1]: core::integer::u256, [2]: core::integer::u256) -> (RangeCheck, core::option::Option::<core::integer::u256>);
core::starknet::SyscallResultTraitImpl::<()>::unwrap_syscall@4119([0]: core::result::Result::<(), core::array::Array::<core::felt252>>) -> (core::PanicResult::<((),)>);
core::starknet::storage_access::StorageAccessU256::write@4129([0]: GasBuiltin, [1]: System, [2]: u32, [3]: StorageBaseAddress, [4]: core::integer::u256) -> (GasBuiltin, System, core::result::Result::<(), core::array::Array::<core::felt252>>);
core::starknet::contract_address::ContractAddressSerde::serialize@4167([0]: ContractAddress, [1]: Array<felt252>) -> (Array<felt252>, Unit);
core::starknet::storage_access::StorageAccessU128::read@4179([0]: RangeCheck, [1]: GasBuiltin, [2]: System, [3]: u32, [4]: StorageBaseAddress) -> (RangeCheck, GasBuiltin, System, core::PanicResult::<(core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>,)>);
core::hash::LegacyHashContractAddress::hash@4218([0]: Pedersen, [1]: felt252, [2]: ContractAddress) -> (Pedersen, felt252);
core::hash::TupleSize2LegacyHash::<core::starknet::contract_address::ContractAddress, core::starknet::contract_address::ContractAddress, core::hash::LegacyHashContractAddress, core::hash::LegacyHashContractAddress, core::starknet::contract_address::ContractAddressDrop, core::starknet::contract_address::ContractAddressDrop>::hash@4223([0]: Pedersen, [1]: felt252, [2]: Tuple<ContractAddress, ContractAddress>) -> (Pedersen, felt252);
core::starknet::SyscallResultTraitImpl::<core::box::Box::<core::starknet::info::ExecutionInfo>>::unwrap_syscall@4235([0]: core::result::Result::<core::box::Box::<core::starknet::info::ExecutionInfo>, core::array::Array::<core::felt252>>) -> (core::PanicResult::<(core::box::Box::<core::starknet::info::ExecutionInfo>,)>);
core::integer::u256_overflowing_add@4245([0]: RangeCheck, [1]: core::integer::u256, [2]: core::integer::u256) -> (RangeCheck, Tuple<core::integer::u256, core::bool>);
core::integer::u256_overflow_sub@4292([0]: RangeCheck, [1]: core::integer::u256, [2]: core::integer::u256) -> (RangeCheck, Tuple<core::integer::u256, core::bool>);

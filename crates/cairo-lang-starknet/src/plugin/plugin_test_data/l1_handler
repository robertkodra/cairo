//! > Test expansion of a simple starknet contract.

//! > test_runner_name
ExpandContractTestRunner

//! > cairo_code
#[contract]
mod TestContract {
    #[l1_handler]
    fn good_l1_handler(from_address: felt252, arg: felt252) {}

    #[l1_handler]
    fn good_l1_handler_ignored(_from_address: felt252, arg: felt252) {}

    #[l1_handler]
    fn l1_handler_no_params() {}

    #[l1_handler]
    fn l1_handler_wrong_first_param_name(abc: felt252) {}

    #[l1_handler]
    fn l1_handler_wrong_first_param_type(from_address: u128) {}
}

//! > generated_cairo_code
mod TestContract {
    use starknet::SyscallResultTrait;
    use starknet::SyscallResultTraitImpl;

    #[l1_handler]
    fn good_l1_handler(from_address: felt252, arg: felt252) {}

    #[l1_handler]
    fn good_l1_handler_ignored(_from_address: felt252, arg: felt252) {}

    #[l1_handler]
    fn l1_handler_no_params() {}

    #[l1_handler]
    fn l1_handler_wrong_first_param_name(abc: felt252) {}

    #[l1_handler]
    fn l1_handler_wrong_first_param_type(from_address: u128) {}

    const TEST_CLASS_HASH: felt252 = 1055478556891347552205958247167314964337017986860946356987102910672004927573;
    

    

    trait __abi {
        #[l1_handler]
        fn good_l1_handler(from_address: felt252, arg: felt252);
        #[l1_handler]
        fn good_l1_handler_ignored(_from_address: felt252, arg: felt252);
        #[l1_handler]
        fn l1_handler_no_params();
        #[l1_handler]
        fn l1_handler_wrong_first_param_name(abc: felt252);
        #[l1_handler]
        fn l1_handler_wrong_first_param_type(from_address: u128);
        
        
    }

    mod __external {
        use starknet::class_hash::ClassHashSerde;
        use starknet::contract_address::ContractAddressSerde;
        use starknet::storage_access::StorageAddressSerde;
        use option::OptionTrait;
        use option::OptionTraitImpl;

        
    }

    mod __l1_handler {
        use starknet::class_hash::ClassHashSerde;
        use starknet::contract_address::ContractAddressSerde;
        use starknet::storage_access::StorageAddressSerde;
        use option::OptionTrait;
        use option::OptionTraitImpl;

        
    }

    mod __constructor {
        use starknet::class_hash::ClassHashSerde;
        use starknet::contract_address::ContractAddressSerde;
        use starknet::storage_access::StorageAddressSerde;
        use option::OptionTrait;
        use option::OptionTraitImpl;

        
    }
}

//! > expected_diagnostics
error: Plugin diagnostic: `raw_output` functions must get a self param.
 --> lib.cairo:4:23
    fn good_l1_handler(from_address: felt252, arg: felt252) {}
                      ^***********************************^

error: Plugin diagnostic: `raw_output` functions must get a self param.
 --> lib.cairo:7:31
    fn good_l1_handler_ignored(_from_address: felt252, arg: felt252) {}
                              ^************************************^

error: Plugin diagnostic: `raw_output` functions must get a self param.
 --> lib.cairo:10:28
    fn l1_handler_no_params() {}
                           ^^

error: Plugin diagnostic: `raw_output` functions must get a self param.
 --> lib.cairo:13:41
    fn l1_handler_wrong_first_param_name(abc: felt252) {}
                                        ^************^

error: Plugin diagnostic: `raw_output` functions must get a self param.
 --> lib.cairo:16:41
    fn l1_handler_wrong_first_param_type(from_address: u128) {}
                                        ^******************^
